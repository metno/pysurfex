Search.setIndex({"alltitles": {"A Guide to Masked Arrays in NumPy": [[3, null]], "About the IPython Development Team": [[2, "about-the-ipython-development-team"]], "Authors": [[4, null], [5, null]], "Class methods": [[13, "class-methods"]], "Classes": [[13, "classes"]], "Contents": [[3, "contents"]], "Contributors": [[4, "contributors"]], "Create forcing from MET-Nordic analysis": [[12, "create-forcing-from-met-nordic-analysis"], [13, "create-forcing-from-met-nordic-analysis"]], "Creator": [[4, "creator"]], "Development Lead": [[6, null]], "Examples": [[11, "examples"], [12, null], [13, "examples"], [13, "id1"]], "General dependencies (from pypi)": [[11, "general-dependencies-from-pypi"], [13, "general-dependencies-from-pypi"]], "History": [[3, "history"]], "Indices and tables": [[13, "indices-and-tables"]], "Install pysurfex": [[11, "install-pysurfex"], [13, "install-pysurfex"]], "Installation of pregenerated packages from pypi (pip)": [[11, "installation-of-pregenerated-packages-from-pypi-pip"], [13, "installation-of-pregenerated-packages-from-pypi-pip"]], "Installation on debian based Linux system": [[11, "installation-on-debian-based-linux-system"], [13, "installation-on-debian-based-linux-system"]], "License for Sphinx": [[7, null]], "Licenses for incorporated software": [[7, "licenses-for-incorporated-software"]], "Main differences": [[3, "main-differences"]], "Masked records": [[3, "masked-records"]], "Methods": [[13, "methods"]], "New features": [[3, "new-features"]], "Optimizing maskedarray": [[3, "optimizing-maskedarray"]], "Our Copyright Policy": [[2, "our-copyright-policy"]], "PYSURFEX documentation": [[13, null]], "Patches and Suggestions": [[6, "patches-and-suggestions"]], "Plot MEPS data from thredds": [[12, "plot-meps-data-from-thredds"], [13, "plot-meps-data-from-thredds"]], "Python API to SURFEX (pysurfex)": [[11, null], [13, "python-api-to-surfex-pysurfex"]], "Requests": [[6, "requests"]], "Revision notes": [[3, "revision-notes"]], "Run SURFEX binaries": [[12, "run-surfex-binaries"], [13, "run-surfex-binaries"]], "Run pysurfex client applications": [[11, "run-pysurfex-client-applications"], [13, "run-pysurfex-client-applications"]], "Run pysurfex from pre-built container": [[11, "run-pysurfex-from-pre-built-container"], [13, "run-pysurfex-from-pre-built-container"]], "Should masked arrays be filled before processing or not?": [[3, "should-masked-arrays-be-filled-before-processing-or-not"]], "Thanks": [[3, "thanks"]], "The IPython licensing terms": [[2, null]], "The MIT License (MIT)": [[1, null]], "Urllib3": [[6, "urllib3"]], "Using maskedarray with matplotlib": [[3, "using-maskedarray-with-matplotlib"]], "Using the new package with numpy.core.ma": [[3, "using-the-new-package-with-numpy-core-ma"]]}, "docnames": [".venv/lib/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE", ".venv/lib/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE", ".venv/lib/python3.12/site-packages/ipython-9.3.0.dist-info/licenses/COPYING", ".venv/lib/python3.12/site-packages/numpy/ma/README", ".venv/lib/python3.12/site-packages/prompt_toolkit-3.0.51.dist-info/licenses/AUTHORS", ".venv/lib/python3.12/site-packages/pytest_cov-4.1.0.dist-info/AUTHORS", ".venv/lib/python3.12/site-packages/requests_toolbelt-1.0.0.dist-info/AUTHORS", ".venv/lib/python3.12/site-packages/sphinx-7.4.7.dist-info/LICENSE", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module", "README", "docs/example", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": [".venv/lib/python3.12/site-packages/alabaster-0.7.16.dist-info/LICENSE.rst", ".venv/lib/python3.12/site-packages/imagesize-1.4.1.dist-info/LICENSE.rst", ".venv/lib/python3.12/site-packages/ipython-9.3.0.dist-info/licenses/COPYING.rst", ".venv/lib/python3.12/site-packages/numpy/ma/README.rst", ".venv/lib/python3.12/site-packages/prompt_toolkit-3.0.51.dist-info/licenses/AUTHORS.rst", ".venv/lib/python3.12/site-packages/pytest_cov-4.1.0.dist-info/AUTHORS.rst", ".venv/lib/python3.12/site-packages/requests_toolbelt-1.0.0.dist-info/AUTHORS.rst", ".venv/lib/python3.12/site-packages/sphinx-7.4.7.dist-info/LICENSE.rst", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/base.rst", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/class.rst", ".venv/lib/python3.12/site-packages/sphinx/ext/autosummary/templates/autosummary/module.rst", "README.rst", "docs/example.rst", "index.rst"], "indexentries": {"__init__() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[13, "pysurfex.binary_input.InputDataToSurfexBinaries.__init__", false]], "__init__() (pysurfex.binary_input.jsoninputdata method)": [[13, "pysurfex.binary_input.JsonInputData.__init__", false]], "__init__() (pysurfex.binary_input.jsoninputdatafromfile method)": [[13, "pysurfex.binary_input.JsonInputDataFromFile.__init__", false]], "__init__() (pysurfex.binary_input.jsonoutputdata method)": [[13, "pysurfex.binary_input.JsonOutputData.__init__", false]], "__init__() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[13, "pysurfex.binary_input.JsonOutputDataFromFile.__init__", false]], "__init__() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[13, "pysurfex.binary_input.OutputDataFromSurfexBinaries.__init__", false]], "__init__() (pysurfex.fa.fa method)": [[13, "pysurfex.fa.Fa.__init__", false]], "__init__() (pysurfex.file.asciisurfexfile method)": [[13, "pysurfex.file.AsciiSurfexFile.__init__", false]], "__init__() (pysurfex.file.fasurfexfile method)": [[13, "pysurfex.file.FaSurfexFile.__init__", false]], "__init__() (pysurfex.file.forcingfilenetcdf method)": [[13, "pysurfex.file.ForcingFileNetCDF.__init__", false]], "__init__() (pysurfex.file.ncsurfexfile method)": [[13, "pysurfex.file.NCSurfexFile.__init__", false]], "__init__() (pysurfex.file.netcdfsurfexfile method)": [[13, "pysurfex.file.NetCDFSurfexFile.__init__", false]], "__init__() (pysurfex.file.surfexio method)": [[13, "pysurfex.file.SurfexIO.__init__", false]], "__init__() (pysurfex.file.surffiletypeextension method)": [[13, "pysurfex.file.SurfFileTypeExtension.__init__", false]], "__init__() (pysurfex.file.textesurfexfile method)": [[13, "pysurfex.file.TexteSurfexFile.__init__", false]], "__init__() (pysurfex.forcing.surfexforcing method)": [[13, "pysurfex.forcing.SurfexForcing.__init__", false]], "__init__() (pysurfex.forcing.surfexnetcdfforcing method)": [[13, "pysurfex.forcing.SurfexNetCDFForcing.__init__", false]], "__init__() (pysurfex.forcing.surfexoutputforcing method)": [[13, "pysurfex.forcing.SurfexOutputForcing.__init__", false]], "__init__() (pysurfex.geo.cartesian method)": [[13, "pysurfex.geo.Cartesian.__init__", false]], "__init__() (pysurfex.geo.confproj method)": [[13, "pysurfex.geo.ConfProj.__init__", false]], "__init__() (pysurfex.geo.confprojfromharmonie method)": [[13, "pysurfex.geo.ConfProjFromHarmonie.__init__", false]], "__init__() (pysurfex.geo.geo method)": [[13, "pysurfex.geo.Geo.__init__", false]], "__init__() (pysurfex.geo.ign method)": [[13, "pysurfex.geo.IGN.__init__", false]], "__init__() (pysurfex.geo.lonlatreg method)": [[13, "pysurfex.geo.LonLatReg.__init__", false]], "__init__() (pysurfex.geo.lonlatval method)": [[13, "pysurfex.geo.LonLatVal.__init__", false]], "__init__() (pysurfex.geo.surfexgeo method)": [[13, "pysurfex.geo.SurfexGeo.__init__", false]], "__init__() (pysurfex.grib.grib method)": [[13, "id0", false], [13, "pysurfex.grib.Grib.__init__", false]], "__init__() (pysurfex.grib.grib2variable method)": [[13, "pysurfex.grib.Grib2Variable.__init__", false]], "__init__() (pysurfex.interpolation.interpolation method)": [[13, "pysurfex.interpolation.Interpolation.__init__", false]], "__init__() (pysurfex.interpolation.obsoperator method)": [[13, "pysurfex.interpolation.ObsOperator.__init__", false]], "__init__() (pysurfex.namelist.namelistgenerator method)": [[13, "pysurfex.namelist.NamelistGenerator.__init__", false]], "__init__() (pysurfex.namelist.namelistgeneratorassemble method)": [[13, "pysurfex.namelist.NamelistGeneratorAssemble.__init__", false]], "__init__() (pysurfex.namelist.namelistgeneratorassemblefromfiles method)": [[13, "pysurfex.namelist.NamelistGeneratorAssembleFromFiles.__init__", false]], "__init__() (pysurfex.namelist.namelistgeneratorfromnamelistfile method)": [[13, "pysurfex.namelist.NamelistGeneratorFromNamelistFile.__init__", false]], "__init__() (pysurfex.netcdf.netcdf method)": [[13, "pysurfex.netcdf.Netcdf.__init__", false]], "__init__() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.__init__", false]], "__init__() (pysurfex.netcdf.netcdfreadvariable method)": [[13, "pysurfex.netcdf.NetCDFReadVariable.__init__", false]], "__init__() (pysurfex.obs.jsonobservationset method)": [[13, "pysurfex.obs.JsonObservationSet.__init__", false]], "__init__() (pysurfex.obs.observationfromtitanjsonfile method)": [[13, "pysurfex.obs.ObservationFromTitanJsonFile.__init__", false]], "__init__() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.__init__", false]], "__init__() (pysurfex.obs.obssetfromvobs method)": [[13, "id2", false], [13, "pysurfex.obs.ObsSetFromVobs.__init__", false]], "__init__() (pysurfex.platform_deps.systemfilepaths method)": [[13, "pysurfex.platform_deps.SystemFilePaths.__init__", false]], "__init__() (pysurfex.platform_deps.systemfilepathsfromfile method)": [[13, "pysurfex.platform_deps.SystemFilePathsFromFile.__init__", false]], "__init__() (pysurfex.read.constantvalue method)": [[13, "pysurfex.read.ConstantValue.__init__", false]], "__init__() (pysurfex.read.convertedinput method)": [[13, "pysurfex.read.ConvertedInput.__init__", false]], "__init__() (pysurfex.read.converter method)": [[13, "pysurfex.read.Converter.__init__", false]], "__init__() (pysurfex.read.readdata method)": [[13, "pysurfex.read.ReadData.__init__", false]], "__init__() (pysurfex.run.batchjob method)": [[13, "pysurfex.run.BatchJob.__init__", false]], "__init__() (pysurfex.run.surfexbinary method)": [[13, "pysurfex.run.SURFEXBinary.__init__", false]], "__init__() (pysurfex.timeseries.timeseries method)": [[13, "pysurfex.timeseries.TimeSeries.__init__", false]], "__init__() (pysurfex.titan.blacklist method)": [[13, "pysurfex.titan.Blacklist.__init__", false]], "__init__() (pysurfex.titan.climatology method)": [[13, "pysurfex.titan.Climatology.__init__", false]], "__init__() (pysurfex.titan.departure method)": [[13, "pysurfex.titan.Departure.__init__", false]], "__init__() (pysurfex.titan.domaincheck method)": [[13, "pysurfex.titan.DomainCheck.__init__", false]], "__init__() (pysurfex.titan.nometa method)": [[13, "pysurfex.titan.NoMeta.__init__", false]], "__init__() (pysurfex.titan.plausibility method)": [[13, "pysurfex.titan.Plausibility.__init__", false]], "__init__() (pysurfex.titan.qualitycontrol method)": [[13, "pysurfex.titan.QualityControl.__init__", false]], "__init__() (pysurfex.titan.redundancy method)": [[13, "pysurfex.titan.Redundancy.__init__", false]], "__init__() (pysurfex.titan.titandataset method)": [[13, "pysurfex.titan.TitanDataSet.__init__", false]], "__init__() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.__init__", false]], "__init__() (pysurfex.verification.obsdatafromsurfexconverter method)": [[13, "id3", false], [13, "pysurfex.verification.ObsDataFromSurfexConverter.__init__", false]], "__init__() (pysurfex.verification.verifdatafromfile method)": [[13, "pysurfex.verification.VerifDataFromFile.__init__", false]], "__init__() (pysurfex.verification.verifvariable method)": [[13, "id4", false], [13, "id5", false], [13, "id6", false], [13, "pysurfex.verification.VerifVariable.__init__", false]], "_check_sanity() (pysurfex.forcing.surfexoutputforcing method)": [[13, "pysurfex.forcing.SurfexOutputForcing._check_sanity", false]], "_define_forcing() (pysurfex.forcing.asciioutput method)": [[13, "pysurfex.forcing.AsciiOutput._define_forcing", false]], "_define_forcing() (pysurfex.forcing.netcdfoutput method)": [[13, "pysurfex.forcing.NetCDFOutput._define_forcing", false]], "absbias() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.absbias", false]], "add_data() (pysurfex.binary_input.jsoninputdata method)": [[13, "pysurfex.binary_input.JsonInputData.add_data", false]], "alpha_grid_rot() (pysurfex.interpolation.interpolation method)": [[13, "pysurfex.interpolation.Interpolation.alpha_grid_rot", false]], "archive_files() (pysurfex.binary_input.jsonoutputdata method)": [[13, "pysurfex.binary_input.JsonOutputData.archive_files", false]], "archive_files() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[13, "pysurfex.binary_input.JsonOutputDataFromFile.archive_files", false]], "archive_files() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[13, "pysurfex.binary_input.OutputDataFromSurfexBinaries.archive_files", false]], "archive_output_file() (pysurfex.file.surfexsurfio method)": [[13, "pysurfex.file.SurfexSurfIO.archive_output_file", false]], "as_datetime() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.as_datetime", false]], "as_datetime_args() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.as_datetime_args", false]], "as_datetime_string() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.as_datetime_string", false]], "as_timedelta() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.as_timedelta", false]], "asciioutput (class in pysurfex.forcing)": [[13, "pysurfex.forcing.AsciiOutput", false]], "asciisurfexfile (class in pysurfex.file)": [[13, "pysurfex.file.AsciiSurfexFile", false]], "assemble_namelist() (pysurfex.namelist.namelistgeneratorassemble method)": [[13, "pysurfex.namelist.NamelistGeneratorAssemble.assemble_namelist", false]], "axis (class in pysurfex.netcdf)": [[13, "pysurfex.netcdf.Axis", false]], "axis_types() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.axis_types", false]], "batchjob (class in pysurfex.run)": [[13, "pysurfex.run.BatchJob", false]], "blacklist (class in pysurfex.titan)": [[13, "pysurfex.titan.Blacklist", false]], "buddy (class in pysurfex.titan)": [[13, "pysurfex.titan.Buddy", false]], "bufr2json() (in module pysurfex.cli)": [[13, "pysurfex.cli.bufr2json", false]], "bufrobservationset (class in pysurfex.bufr)": [[13, "pysurfex.bufr.BufrObservationSet", false]], "calculate_statistics() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.calculate_statistics", false]], "cartesian (class in pysurfex.geo)": [[13, "pysurfex.geo.Cartesian", false]], "clean_working_dir() (in module pysurfex.run)": [[13, "pysurfex.run.clean_working_dir", false]], "cli_merge_qc_data() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_merge_qc_data", false]], "cli_modify_forcing() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_modify_forcing", false]], "cli_oi2soda() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_oi2soda", false]], "cli_set_domain_from_harmonie() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_set_domain_from_harmonie", false]], "cli_set_geo_from_obs_set() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_set_geo_from_obs_set", false]], "cli_set_geo_from_stationlist() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_set_geo_from_stationlist", false]], "cli_shape2ign() (in module pysurfex.cli)": [[13, "pysurfex.cli.cli_shape2ign", false]], "climatology (class in pysurfex.titan)": [[13, "pysurfex.titan.Climatology", false]], "close_db() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.close_db", false]], "concat_datasets() (in module pysurfex.verification)": [[13, "pysurfex.verification.concat_datasets", false]], "concat_datasets_verif() (in module pysurfex.verification)": [[13, "pysurfex.verification.concat_datasets_verif", false]], "confproj (class in pysurfex.geo)": [[13, "pysurfex.geo.ConfProj", false]], "confprojfromharmonie (class in pysurfex.geo)": [[13, "pysurfex.geo.ConfProjFromHarmonie", false]], "constantvalue (class in pysurfex.read)": [[13, "pysurfex.read.ConstantValue", false]], "convertedinput (class in pysurfex.read)": [[13, "pysurfex.read.ConvertedInput", false]], "converter (class in pysurfex.read)": [[13, "pysurfex.read.Converter", false]], "converter2ds() (in module pysurfex.verification)": [[13, "pysurfex.verification.converter2ds", false]], "converter2harp() (in module pysurfex.verification)": [[13, "pysurfex.verification.converter2harp", false]], "converter2harp_cli() (in module pysurfex.verification)": [[13, "pysurfex.verification.converter2harp_cli", false]], "converter_parse_options() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.converter_parse_options", false]], "copy_input() (pysurfex.file.surfexsurfio method)": [[13, "pysurfex.file.SurfexSurfIO.copy_input", false]], "create_db() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.create_db", false]], "create_forcing() (in module pysurfex.cli)": [[13, "pysurfex.cli.create_forcing", false]], "create_lsm_file_assim() (in module pysurfex.cli)": [[13, "pysurfex.cli.create_lsm_file_assim", false]], "create_namelist() (in module pysurfex.cli)": [[13, "pysurfex.cli.create_namelist", false]], "create_variable() (pysurfex.read.converter method)": [[13, "pysurfex.read.Converter.create_variable", false]], "create_working_dir() (in module pysurfex.run)": [[13, "pysurfex.run.create_working_dir", false]], "cryoclim_pseudoobs() (in module pysurfex.cli)": [[13, "pysurfex.cli.cryoclim_pseudoobs", false]], "cryoclimobservationset (class in pysurfex.pseudoobs)": [[13, "pysurfex.pseudoobs.CryoclimObservationSet", false]], "datetimes() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.datetimes", false]], "deaccumulate() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.deaccumulate", false]], "deep_update() (in module pysurfex.util)": [[13, "pysurfex.util.deep_update", false]], "define_quality_control() (in module pysurfex.titan)": [[13, "pysurfex.titan.define_quality_control", false]], "departure (class in pysurfex.titan)": [[13, "pysurfex.titan.Departure", false]], "dim_names() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.dim_names", false]], "distance() (pysurfex.interpolation.interpolation static method)": [[13, "pysurfex.interpolation.Interpolation.distance", false]], "domaincheck (class in pysurfex.titan)": [[13, "pysurfex.titan.DomainCheck", false]], "ds2verif() (in module pysurfex.verification)": [[13, "pysurfex.verification.ds2verif", false]], "dump_environ() (in module pysurfex.cli)": [[13, "pysurfex.cli.dump_environ", false]], "extend_macro() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.extend_macro", false]], "fa (class in pysurfex.fa)": [[13, "pysurfex.fa.Fa", false]], "fasurfexfile (class in pysurfex.file)": [[13, "pysurfex.file.FaSurfexFile", false]], "field() (pysurfex.fa.fa method)": [[13, "pysurfex.fa.Fa.field", false]], "field() (pysurfex.file.fasurfexfile method)": [[13, "pysurfex.file.FaSurfexFile.field", false]], "field() (pysurfex.file.forcingfilenetcdf method)": [[13, "pysurfex.file.ForcingFileNetCDF.field", false]], "field() (pysurfex.file.ncsurfexfile method)": [[13, "pysurfex.file.NCSurfexFile.field", false]], "field() (pysurfex.file.netcdfsurfexfile method)": [[13, "pysurfex.file.NetCDFSurfexFile.field", false]], "field() (pysurfex.file.surfexio method)": [[13, "pysurfex.file.SurfexIO.field", false]], "field() (pysurfex.file.textesurfexfile method)": [[13, "pysurfex.file.TexteSurfexFile.field", false]], "field() (pysurfex.grib.grib method)": [[13, "pysurfex.grib.Grib.field", false]], "field() (pysurfex.netcdf.netcdf method)": [[13, "pysurfex.netcdf.Netcdf.field", false]], "fill_field() (in module pysurfex.interpolation)": [[13, "pysurfex.interpolation.fill_field", false]], "finalize() (pysurfex.forcing.asciioutput method)": [[13, "pysurfex.forcing.AsciiOutput.finalize", false]], "finalize() (pysurfex.forcing.netcdfoutput method)": [[13, "pysurfex.forcing.NetCDFOutput.finalize", false]], "find_num() (pysurfex.namelist.namelistgeneratorassemble static method)": [[13, "pysurfex.namelist.NamelistGeneratorAssemble.find_num", false]], "first_guess_for_oi() (in module pysurfex.cli)": [[13, "pysurfex.cli.first_guess_for_oi", false]], "firstguess (class in pysurfex.titan)": [[13, "pysurfex.titan.FirstGuess", false]], "flatten_list() (pysurfex.namelist.namelistgeneratorassemble static method)": [[13, "pysurfex.namelist.NamelistGeneratorAssemble.flatten_list", false]], "forcingfilenetcdf (class in pysurfex.file)": [[13, "pysurfex.file.ForcingFileNetCDF", false]], "format_lat() (pysurfex.observation.observation static method)": [[13, "pysurfex.observation.Observation.format_lat", false]], "format_lon() (pysurfex.observation.observation static method)": [[13, "pysurfex.observation.Observation.format_lon", false]], "fraction (class in pysurfex.titan)": [[13, "pysurfex.titan.Fraction", false]], "fromtimestamp() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.fromtimestamp", false]], "generate_grib_id() (pysurfex.grib.grib2variable method)": [[13, "pysurfex.grib.Grib2Variable.generate_grib_id", false]], "geo (class in pysurfex.geo)": [[13, "pysurfex.geo.Geo", false]], "get_basetime() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.get_basetime", false]], "get_coord() (pysurfex.geo.ign static method)": [[13, "pysurfex.geo.IGN.get_coord", false]], "get_data_set() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.get_data_set", false]], "get_datasources() (in module pysurfex.input_methods)": [[13, "pysurfex.input_methods.get_datasources", false]], "get_decade() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.get_decade", false]], "get_departure() (pysurfex.titan.departure method)": [[13, "pysurfex.titan.Departure.get_departure", false]], "get_filehandler() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.get_filehandler", false]], "get_filename() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.get_filename", false]], "get_geo() (pysurfex.file.asciisurfexfile method)": [[13, "pysurfex.file.AsciiSurfexFile.get_geo", false]], "get_geo() (pysurfex.file.ncsurfexfile method)": [[13, "pysurfex.file.NCSurfexFile.get_geo", false]], "get_geo_object() (in module pysurfex.geo)": [[13, "pysurfex.geo.get_geo_object", false]], "get_geo_object_from_json_file() (in module pysurfex.geo)": [[13, "pysurfex.geo.get_geo_object_from_json_file", false]], "get_multi_converters() (in module pysurfex.read)": [[13, "pysurfex.read.get_multi_converters", false]], "get_namelist() (pysurfex.namelist.namelistgenerator method)": [[13, "pysurfex.namelist.NamelistGenerator.get_namelist", false]], "get_nml_value() (pysurfex.binary_input.inputdatafromnamelist static method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value", false]], "get_nml_value2() (pysurfex.binary_input.inputdatafromnamelist static method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value2", false]], "get_nml_value_from_string() (pysurfex.binary_input.inputdatafromnamelist static method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value_from_string", false]], "get_obs() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.get_obs", false]], "get_obs_value() (pysurfex.interpolation.obsoperator method)": [[13, "pysurfex.interpolation.ObsOperator.get_obs_value", false]], "get_pos_index() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.get_pos_index", false]], "get_pos_index() (pysurfex.titan.qcdataset method)": [[13, "pysurfex.titan.QCDataSet.get_pos_index", false]], "get_posid() (pysurfex.observation.observation static method)": [[13, "pysurfex.observation.Observation.get_posid", false]], "get_stid_index() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.get_stid_index", false]], "get_stid_index() (pysurfex.titan.qcdataset method)": [[13, "pysurfex.titan.QCDataSet.get_stid_index", false]], "get_values() (pysurfex.titan.departure method)": [[13, "pysurfex.titan.Departure.get_values", false]], "grib (class in pysurfex.grib)": [[13, "pysurfex.grib.Grib", false]], "grib2variable (class in pysurfex.grib)": [[13, "pysurfex.grib.Grib2Variable", false]], "grid2points() (in module pysurfex.interpolation)": [[13, "pysurfex.interpolation.grid2points", false]], "gridpp() (in module pysurfex.cli)": [[13, "pysurfex.cli.gridpp", false]], "guess_file_format() (in module pysurfex.file)": [[13, "pysurfex.file.guess_file_format", false]], "identifier() (pysurfex.geo.geo method)": [[13, "pysurfex.geo.Geo.identifier", false]], "ign (class in pysurfex.geo)": [[13, "pysurfex.geo.IGN", false]], "ign_mask() (pysurfex.geo.ign static method)": [[13, "pysurfex.geo.IGN.ign_mask", false]], "inputdatafromnamelist (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.InputDataFromNamelist", false]], "inputdatatosurfexbinaries (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.InputDataToSurfexBinaries", false]], "inside_grid() (in module pysurfex.interpolation)": [[13, "pysurfex.interpolation.inside_grid", false]], "inside_window() (pysurfex.bufr.bufrobservationset static method)": [[13, "pysurfex.bufr.BufrObservationSet.inside_window", false]], "interpolate() (pysurfex.interpolation.interpolation method)": [[13, "pysurfex.interpolation.Interpolation.interpolate", false]], "interpolate_field() (pysurfex.file.surfexio static method)": [[13, "pysurfex.file.SurfexIO.interpolate_field", false]], "interpolation (class in pysurfex.interpolation)": [[13, "pysurfex.interpolation.Interpolation", false]], "is_accumulated() (pysurfex.grib.grib2variable method)": [[13, "pysurfex.grib.Grib2Variable.is_accumulated", false]], "is_identical() (pysurfex.geo.geo method)": [[13, "pysurfex.geo.Geo.is_identical", false]], "is_in_grid() (pysurfex.interpolation.obsoperator method)": [[13, "pysurfex.interpolation.ObsOperator.is_in_grid", false]], "is_level() (pysurfex.netcdf.netcdffilevariable static method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.is_level", false]], "isdatetime() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.isdatetime", false]], "jsoninputdata (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.JsonInputData", false]], "jsoninputdatafromfile (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.JsonInputDataFromFile", false]], "jsonobservationset (class in pysurfex.obs)": [[13, "pysurfex.obs.JsonObservationSet", false]], "jsonoutputdata (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.JsonOutputData", false]], "jsonoutputdatafromfile (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.JsonOutputDataFromFile", false]], "kwargs2converter() (in module pysurfex.read)": [[13, "pysurfex.read.kwargs2converter", false]], "lats() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.lats", false]], "levels() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.levels", false]], "loadfromfile (class in pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.LoadFromFile", false]], "lonlatreg (class in pysurfex.geo)": [[13, "pysurfex.geo.LonLatReg", false]], "lonlatval (class in pysurfex.geo)": [[13, "pysurfex.geo.LonLatVal", false]], "lons() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.lons", false]], "lower_case_namelist_dict() (pysurfex.namelist.namelistgenerator static method)": [[13, "pysurfex.namelist.NamelistGenerator.lower_case_namelist_dict", false]], "masterodb (class in pysurfex.run)": [[13, "pysurfex.run.Masterodb", false]], "matches() (pysurfex.grib.grib2variable method)": [[13, "pysurfex.grib.Grib2Variable.matches", false]], "matching_obs() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.matching_obs", false]], "matching_value() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.matching_value", false]], "mean() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.mean", false]], "members() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.members", false]], "merge_json_qc_data_sets() (in module pysurfex.titan)": [[13, "pysurfex.titan.merge_json_qc_data_sets", false]], "metfrostobservations (class in pysurfex.obs)": [[13, "pysurfex.obs.MetFrostObservations", false]], "mixing_ratio() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.mixing_ratio", false]], "mixing_ratio_from_specific_humidity() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.mixing_ratio_from_specific_humidity", false]], "modify_forcing() (in module pysurfex.forcing)": [[13, "pysurfex.forcing.modify_forcing", false]], "mslp2ps() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.mslp2ps", false]], "namelistgenerator (class in pysurfex.namelist)": [[13, "pysurfex.namelist.NamelistGenerator", false]], "namelistgeneratorassemble (class in pysurfex.namelist)": [[13, "pysurfex.namelist.NamelistGeneratorAssemble", false]], "namelistgeneratorassemblefromfiles (class in pysurfex.namelist)": [[13, "pysurfex.namelist.NamelistGeneratorAssembleFromFiles", false]], "namelistgeneratorfromnamelistfile (class in pysurfex.namelist)": [[13, "pysurfex.namelist.NamelistGeneratorFromNamelistFile", false]], "ncsurfexfile (class in pysurfex.file)": [[13, "pysurfex.file.NCSurfexFile", false]], "netatmoobservationset (class in pysurfex.obs)": [[13, "pysurfex.obs.NetatmoObservationSet", false]], "netcdf (class in pysurfex.netcdf)": [[13, "pysurfex.netcdf.Netcdf", false]], "netcdffilevariable (class in pysurfex.netcdf)": [[13, "pysurfex.netcdf.NetCDFFileVariable", false]], "netcdfoutput (class in pysurfex.forcing)": [[13, "pysurfex.forcing.NetCDFOutput", false]], "netcdfreadvariable (class in pysurfex.netcdf)": [[13, "pysurfex.netcdf.NetCDFReadVariable", false]], "netcdfsurfexfile (class in pysurfex.file)": [[13, "pysurfex.file.NetCDFSurfexFile", false]], "nometa (class in pysurfex.titan)": [[13, "pysurfex.titan.NoMeta", false]], "obs2json() (in module pysurfex.cli)": [[13, "pysurfex.cli.obs2json", false]], "obs2vectors() (pysurfex.observation.observation static method)": [[13, "pysurfex.observation.Observation.obs2vectors", false]], "obsdatafromsurfexconverter (class in pysurfex.verification)": [[13, "pysurfex.verification.ObsDataFromSurfexConverter", false]], "observation (class in pysurfex.observation)": [[13, "pysurfex.observation.Observation", false]], "observationdatasetfromobsoul (class in pysurfex.obsoul)": [[13, "pysurfex.obsoul.ObservationDataSetFromObsoul", false]], "observationdatasetfromobsoulfile (class in pysurfex.obsoul)": [[13, "pysurfex.obsoul.ObservationDataSetFromObsoulFile", false]], "observationfromtitanjsonfile (class in pysurfex.obs)": [[13, "pysurfex.obs.ObservationFromTitanJsonFile", false]], "observationset (class in pysurfex.obs)": [[13, "pysurfex.obs.ObservationSet", false]], "obsoperator (class in pysurfex.interpolation)": [[13, "pysurfex.interpolation.ObsOperator", false]], "obssetfromvobs (class in pysurfex.obs)": [[13, "pysurfex.obs.ObsSetFromVobs", false]], "offline() (in module pysurfex.cli)": [[13, "pysurfex.cli.offline", false]], "offsetaware() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.offsetaware", false]], "oi2soda() (in module pysurfex.netcdf)": [[13, "pysurfex.netcdf.oi2soda", false]], "open_db() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.open_db", false]], "outputdatafromsurfexbinaries (class in pysurfex.binary_input)": [[13, "pysurfex.binary_input.OutputDataFromSurfexBinaries", false]], "parse_args_bufr2json() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_bufr2json", false]], "parse_args_concat_datasets() (in module pysurfex.verification)": [[13, "pysurfex.verification.parse_args_concat_datasets", false]], "parse_args_converter2ds() (in module pysurfex.verification)": [[13, "pysurfex.verification.parse_args_converter2ds", false]], "parse_args_converter2harp() (in module pysurfex.verification)": [[13, "pysurfex.verification.parse_args_converter2harp", false]], "parse_args_create_forcing() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_create_forcing", false]], "parse_args_create_namelist() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_create_namelist", false]], "parse_args_ds2verif() (in module pysurfex.verification)": [[13, "pysurfex.verification.parse_args_ds2verif", false]], "parse_args_dump_environ() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_dump_environ", false]], "parse_args_first_guess_for_oi() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_first_guess_for_oi", false]], "parse_args_gridpp() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_gridpp", false]], "parse_args_lsm_file_assim() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_lsm_file_assim", false]], "parse_args_merge_qc_data() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_merge_qc_data", false]], "parse_args_modify_forcing() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_modify_forcing", false]], "parse_args_obs2json() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_obs2json", false]], "parse_args_oi2soda() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_oi2soda", false]], "parse_args_plot_points() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_plot_points", false]], "parse_args_qc2obsmon() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_qc2obsmon", false]], "parse_args_set_geo_from_obs_set() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_set_geo_from_obs_set", false]], "parse_args_set_geo_from_stationlist() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_set_geo_from_stationlist", false]], "parse_args_shape2ign() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_shape2ign", false]], "parse_args_surfex_binary() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_surfex_binary", false]], "parse_args_titan() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_titan", false]], "parse_args_variable() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_args_variable", false]], "parse_args_vfld2ds() (in module pysurfex.verification)": [[13, "pysurfex.verification.parse_args_vfld2ds", false]], "parse_cryoclim_pseudoobs() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_cryoclim_pseudoobs", false]], "parse_filepattern() (in module pysurfex.util)": [[13, "pysurfex.util.parse_filepattern", false]], "parse_sentinel_obs() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_sentinel_obs", false]], "parse_set_domain() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_set_domain", false]], "parse_timeseries2json() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.parse_timeseries2json", false]], "perform_tests() (pysurfex.titan.qcdataset method)": [[13, "pysurfex.titan.QCDataSet.perform_tests", false]], "perform_tests() (pysurfex.titan.titandataset method)": [[13, "pysurfex.titan.TitanDataSet.perform_tests", false]], "perturbed_offline() (in module pysurfex.cli)": [[13, "pysurfex.cli.perturbed_offline", false]], "perturbedoffline (class in pysurfex.run)": [[13, "pysurfex.run.PerturbedOffline", false]], "pgd() (in module pysurfex.cli)": [[13, "pysurfex.cli.pgd", false]], "pgdfile (class in pysurfex.file)": [[13, "pysurfex.file.PGDFile", false]], "plausibility (class in pysurfex.titan)": [[13, "pysurfex.titan.Plausibility", false]], "plot_points() (in module pysurfex.cli)": [[13, "pysurfex.cli.plot_points", false]], "points() (pysurfex.fa.fa method)": [[13, "pysurfex.fa.Fa.points", false]], "points() (pysurfex.file.asciisurfexfile method)": [[13, "pysurfex.file.AsciiSurfexFile.points", false]], "points() (pysurfex.file.fasurfexfile method)": [[13, "pysurfex.file.FaSurfexFile.points", false]], "points() (pysurfex.file.forcingfilenetcdf method)": [[13, "pysurfex.file.ForcingFileNetCDF.points", false]], "points() (pysurfex.file.ncsurfexfile method)": [[13, "pysurfex.file.NCSurfexFile.points", false]], "points() (pysurfex.file.netcdfsurfexfile method)": [[13, "pysurfex.file.NetCDFSurfexFile.points", false]], "points() (pysurfex.file.surfexio method)": [[13, "pysurfex.file.SurfexIO.points", false]], "points() (pysurfex.file.textesurfexfile method)": [[13, "pysurfex.file.TexteSurfexFile.points", false]], "points() (pysurfex.grib.grib method)": [[13, "pysurfex.grib.Grib.points", false]], "points() (pysurfex.netcdf.netcdf method)": [[13, "pysurfex.netcdf.Netcdf.points", false]], "points() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.points", false]], "populate_obsmon_db() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.populate_obsmon_db", false]], "populate_usage_db() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.populate_usage_db", false]], "prep() (in module pysurfex.cli)": [[13, "pysurfex.cli.prep", false]], "prepare_input() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[13, "pysurfex.binary_input.InputDataToSurfexBinaries.prepare_input", false]], "prepare_input() (pysurfex.binary_input.jsoninputdata method)": [[13, "pysurfex.binary_input.JsonInputData.prepare_input", false]], "prepare_input() (pysurfex.binary_input.jsoninputdatafromfile method)": [[13, "pysurfex.binary_input.JsonInputDataFromFile.prepare_input", false]], "prepfile (class in pysurfex.file)": [[13, "pysurfex.file.PREPFile", false]], "print_info() (pysurfex.read.constantvalue method)": [[13, "pysurfex.read.ConstantValue.print_info", false]], "print_info() (pysurfex.read.convertedinput method)": [[13, "pysurfex.read.ConvertedInput.print_info", false]], "print_info() (pysurfex.read.converter method)": [[13, "pysurfex.read.Converter.print_info", false]], "print_info() (pysurfex.read.readdata method)": [[13, "pysurfex.read.ReadData.print_info", false]], "print_keys() (pysurfex.grib.grib2variable method)": [[13, "pysurfex.grib.Grib2Variable.print_keys", false]], "print_obs() (pysurfex.observation.observation method)": [[13, "pysurfex.observation.Observation.print_obs", false]], "print_var() (pysurfex.file.surfexfilevariable method)": [[13, "pysurfex.file.SurfexFileVariable.print_var", false]], "print_variable_info() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.print_variable_info", false]], "process_data() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.process_data", false]], "process_macro() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.process_macro", false]], "qc2obsmon() (in module pysurfex.cli)": [[13, "pysurfex.cli.qc2obsmon", false]], "qcdataset (class in pysurfex.titan)": [[13, "pysurfex.titan.QCDataSet", false]], "qualitycontrol (class in pysurfex.titan)": [[13, "pysurfex.titan.QualityControl", false]], "read() (pysurfex.file.asciisurfexfile method)": [[13, "pysurfex.file.AsciiSurfexFile.read", false]], "read() (pysurfex.file.netcdfsurfexfile method)": [[13, "pysurfex.file.NetCDFSurfexFile.read", false]], "read() (pysurfex.file.textesurfexfile method)": [[13, "pysurfex.file.TexteSurfexFile.read", false]], "read_cryoclim_nc() (in module pysurfex.netcdf)": [[13, "pysurfex.netcdf.read_cryoclim_nc", false]], "read_field() (pysurfex.file.forcingfilenetcdf method)": [[13, "pysurfex.file.ForcingFileNetCDF.read_field", false]], "read_field_in_message() (pysurfex.grib.grib static method)": [[13, "pysurfex.grib.Grib.read_field_in_message", false]], "read_first_guess_netcdf_file() (in module pysurfex.netcdf)": [[13, "pysurfex.netcdf.read_first_guess_netcdf_file", false]], "read_geo_info() (pysurfex.grib.grib static method)": [[13, "pysurfex.grib.Grib.read_geo_info", false]], "read_macro_setting() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.read_macro_setting", false]], "read_sentinel_nc() (in module pysurfex.netcdf)": [[13, "pysurfex.netcdf.read_sentinel_nc", false]], "read_time_step() (pysurfex.read.convertedinput method)": [[13, "pysurfex.read.ConvertedInput.read_time_step", false]], "read_time_step() (pysurfex.read.converter method)": [[13, "pysurfex.read.Converter.read_time_step", false]], "read_time_step() (pysurfex.read.readdata method)": [[13, "pysurfex.read.ReadData.read_time_step", false]], "read_var_field() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.read_var_field", false]], "read_var_points() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.read_var_points", false]], "read_variable() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.read_variable", false]], "read_vfld() (pysurfex.obs.obssetfromvobs static method)": [[13, "pysurfex.obs.ObsSetFromVobs.read_vfld", false]], "readdata (class in pysurfex.read)": [[13, "pysurfex.read.ReadData", false]], "redundancy (class in pysurfex.titan)": [[13, "pysurfex.titan.Redundancy", false]], "remove_existing_file() (in module pysurfex.util)": [[13, "pysurfex.util.remove_existing_file", false]], "rmse() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.rmse", false]], "rotate_geographic_wind() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.rotate_geographic_wind", false]], "run() (pysurfex.run.batchjob method)": [[13, "pysurfex.run.BatchJob.run", false]], "run_gridpp() (in module pysurfex.cli)": [[13, "pysurfex.cli.run_gridpp", false]], "run_oi2soda() (in module pysurfex.cli)": [[13, "pysurfex.cli.run_oi2soda", false]], "run_surfex_binary() (in module pysurfex.cli)": [[13, "pysurfex.cli.run_surfex_binary", false]], "run_time_loop() (in module pysurfex.forcing)": [[13, "pysurfex.forcing.run_time_loop", false]], "run_titan() (in module pysurfex.cli)": [[13, "pysurfex.cli.run_titan", false]], "saturation_mixing_ratio() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.saturation_mixing_ratio", false]], "saturation_vapor_pressure() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.saturation_vapor_pressure", false]], "save_as() (pysurfex.platform_deps.systemfilepaths method)": [[13, "pysurfex.platform_deps.SystemFilePaths.save_as", false]], "sct (class in pysurfex.titan)": [[13, "pysurfex.titan.Sct", false]], "sentinel_obs() (in module pysurfex.cli)": [[13, "pysurfex.cli.sentinel_obs", false]], "sentinelobservationset (class in pysurfex.pseudoobs)": [[13, "pysurfex.pseudoobs.SentinelObservationSet", false]], "set_flags() (pysurfex.titan.qualitycontrol static method)": [[13, "pysurfex.titan.QualityControl.set_flags", false]], "set_forcing_config() (in module pysurfex.forcing)": [[13, "pysurfex.forcing.set_forcing_config", false]], "set_geo_from_stationlist() (in module pysurfex.cli)": [[13, "pysurfex.cli.set_geo_from_stationlist", false]], "set_input() (pysurfex.titan.blacklist method)": [[13, "pysurfex.titan.Blacklist.set_input", false]], "set_input() (pysurfex.titan.climatology method)": [[13, "pysurfex.titan.Climatology.set_input", false]], "set_input() (pysurfex.titan.domaincheck method)": [[13, "pysurfex.titan.DomainCheck.set_input", false]], "set_input() (pysurfex.titan.firstguess method)": [[13, "pysurfex.titan.FirstGuess.set_input", false]], "set_input() (pysurfex.titan.fraction method)": [[13, "pysurfex.titan.Fraction.set_input", false]], "set_input() (pysurfex.titan.nometa method)": [[13, "pysurfex.titan.NoMeta.set_input", false]], "set_input() (pysurfex.titan.plausibility method)": [[13, "pysurfex.titan.Plausibility.set_input", false]], "set_input() (pysurfex.titan.qualitycontrol method)": [[13, "pysurfex.titan.QualityControl.set_input", false]], "set_input() (pysurfex.titan.redundancy method)": [[13, "pysurfex.titan.Redundancy.set_input", false]], "set_input() (pysurfex.titan.sct method)": [[13, "pysurfex.titan.Sct.set_input", false]], "set_var() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.set_var", false]], "shape2ign() (in module pysurfex.geo)": [[13, "pysurfex.geo.shape2ign", false]], "soda() (in module pysurfex.cli)": [[13, "pysurfex.cli.soda", false]], "specific_humidity_from_dewpoint() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.specific_humidity_from_dewpoint", false]], "specific_humidity_from_mixing_ratio() (pysurfex.read.converter static method)": [[13, "pysurfex.read.Converter.specific_humidity_from_mixing_ratio", false]], "subset() (pysurfex.geo.confproj method)": [[13, "pysurfex.geo.ConfProj.subset", false]], "subset() (pysurfex.geo.surfexgeo method)": [[13, "pysurfex.geo.SurfexGeo.subset", false]], "substitute() (pysurfex.binary_input.inputdatafromnamelist method)": [[13, "pysurfex.binary_input.InputDataFromNamelist.substitute", false]], "substitute_macros() (pysurfex.variable.variable method)": [[13, "pysurfex.variable.Variable.substitute_macros", false]], "substitute_string() (pysurfex.platform_deps.systemfilepaths static method)": [[13, "pysurfex.platform_deps.SystemFilePaths.substitute_string", false]], "sum_neighbour_points() (in module pysurfex.interpolation)": [[13, "pysurfex.interpolation.sum_neighbour_points", false]], "surfexbinary (class in pysurfex.run)": [[13, "pysurfex.run.SURFEXBinary", false]], "surfexfilevariable (class in pysurfex.file)": [[13, "pysurfex.file.SurfexFileVariable", false]], "surfexforcing (class in pysurfex.forcing)": [[13, "pysurfex.forcing.SurfexForcing", false]], "surfexgeo (class in pysurfex.geo)": [[13, "pysurfex.geo.SurfexGeo", false]], "surfexio (class in pysurfex.file)": [[13, "pysurfex.file.SurfexIO", false]], "surfexnetcdfforcing (class in pysurfex.forcing)": [[13, "pysurfex.forcing.SurfexNetCDFForcing", false]], "surfexoutputforcing (class in pysurfex.forcing)": [[13, "pysurfex.forcing.SurfexOutputForcing", false]], "surfexsurfio (class in pysurfex.file)": [[13, "pysurfex.file.SurfexSurfIO", false]], "surffile (class in pysurfex.file)": [[13, "pysurfex.file.SURFFile", false]], "surffiletypeextension (class in pysurfex.file)": [[13, "pysurfex.file.SurfFileTypeExtension", false]], "symlink_input() (pysurfex.file.surfexsurfio method)": [[13, "pysurfex.file.SurfexSurfIO.symlink_input", false]], "systemfilepaths (class in pysurfex.platform_deps)": [[13, "pysurfex.platform_deps.SystemFilePaths", false]], "systemfilepathsfromfile (class in pysurfex.platform_deps)": [[13, "pysurfex.platform_deps.SystemFilePathsFromFile", false]], "td2rh() (pysurfex.bufr.bufrobservationset static method)": [[13, "pysurfex.bufr.BufrObservationSet.td2rh", false]], "test() (pysurfex.titan.blacklist method)": [[13, "pysurfex.titan.Blacklist.test", false]], "test() (pysurfex.titan.buddy method)": [[13, "pysurfex.titan.Buddy.test", false]], "test() (pysurfex.titan.climatology method)": [[13, "pysurfex.titan.Climatology.test", false]], "test() (pysurfex.titan.domaincheck method)": [[13, "pysurfex.titan.DomainCheck.test", false]], "test() (pysurfex.titan.firstguess method)": [[13, "pysurfex.titan.FirstGuess.test", false]], "test() (pysurfex.titan.fraction method)": [[13, "pysurfex.titan.Fraction.test", false]], "test() (pysurfex.titan.nometa method)": [[13, "pysurfex.titan.NoMeta.test", false]], "test() (pysurfex.titan.plausibility method)": [[13, "pysurfex.titan.Plausibility.test", false]], "test() (pysurfex.titan.qualitycontrol method)": [[13, "pysurfex.titan.QualityControl.test", false]], "test() (pysurfex.titan.redundancy method)": [[13, "pysurfex.titan.Redundancy.test", false]], "test() (pysurfex.titan.sct method)": [[13, "pysurfex.titan.Sct.test", false]], "textesurfexfile (class in pysurfex.file)": [[13, "pysurfex.file.TexteSurfexFile", false]], "times() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.times", false]], "timeseries (class in pysurfex.timeseries)": [[13, "pysurfex.timeseries.TimeSeries", false]], "timeseriesfromconverter (class in pysurfex.timeseries)": [[13, "pysurfex.timeseries.TimeSeriesFromConverter", false]], "titan() (in module pysurfex.cli)": [[13, "pysurfex.cli.titan", false]], "titandataset (class in pysurfex.titan)": [[13, "pysurfex.titan.TitanDataSet", false]], "units() (pysurfex.netcdf.netcdffilevariable method)": [[13, "pysurfex.netcdf.NetCDFFileVariable.units", false]], "update_namelist() (pysurfex.geo.cartesian method)": [[13, "pysurfex.geo.Cartesian.update_namelist", false]], "update_namelist() (pysurfex.geo.confproj method)": [[13, "pysurfex.geo.ConfProj.update_namelist", false]], "update_namelist() (pysurfex.geo.ign method)": [[13, "pysurfex.geo.IGN.update_namelist", false]], "update_namelist() (pysurfex.geo.lonlatreg method)": [[13, "pysurfex.geo.LonLatReg.update_namelist", false]], "update_namelist() (pysurfex.geo.lonlatval method)": [[13, "pysurfex.geo.LonLatVal.update_namelist", false]], "update_namelist() (pysurfex.geo.surfexgeo method)": [[13, "pysurfex.geo.SurfexGeo.update_namelist", false]], "utcfromtimestamp() (in module pysurfex.datetime_utils)": [[13, "pysurfex.datetime_utils.utcfromtimestamp", false]], "variable (class in pysurfex.variable)": [[13, "pysurfex.variable.Variable", false]], "variable_parse_options() (in module pysurfex.cmd_parsing)": [[13, "pysurfex.cmd_parsing.variable_parse_options", false]], "vectors2obs() (pysurfex.observation.observation static method)": [[13, "pysurfex.observation.Observation.vectors2obs", false]], "verifdatafromfile (class in pysurfex.verification)": [[13, "pysurfex.verification.VerifDataFromFile", false]], "verifvariable (class in pysurfex.verification)": [[13, "pysurfex.verification.VerifVariable", false]], "vfld2ds() (in module pysurfex.verification)": [[13, "pysurfex.verification.vfld2ds", false]], "write_forcing() (pysurfex.forcing.surfexoutputforcing method)": [[13, "pysurfex.forcing.SurfexOutputForcing.write_forcing", false]], "write_formatted_array() (in module pysurfex.forcing)": [[13, "pysurfex.forcing.write_formatted_array", false]], "write_json() (pysurfex.timeseries.timeseries method)": [[13, "pysurfex.timeseries.TimeSeries.write_json", false]], "write_json_file() (pysurfex.obs.observationset method)": [[13, "pysurfex.obs.ObservationSet.write_json_file", false]], "write_obsmon_sqlite_file() (in module pysurfex.obsmon)": [[13, "pysurfex.obsmon.write_obsmon_sqlite_file", false]], "write_output() (pysurfex.titan.qcdataset method)": [[13, "pysurfex.titan.QCDataSet.write_output", false]], "write_proj_info() (pysurfex.geo.geo method)": [[13, "pysurfex.geo.Geo.write_proj_info", false]]}, "objects": {"pysurfex.binary_input": [[13, 0, 1, "", "InputDataFromNamelist"], [13, 0, 1, "", "InputDataToSurfexBinaries"], [13, 0, 1, "", "JsonInputData"], [13, 0, 1, "", "JsonInputDataFromFile"], [13, 0, 1, "", "JsonOutputData"], [13, 0, 1, "", "JsonOutputDataFromFile"], [13, 0, 1, "", "OutputDataFromSurfexBinaries"]], "pysurfex.binary_input.InputDataFromNamelist": [[13, 1, 1, "", "extend_macro"], [13, 1, 1, "", "get_nml_value"], [13, 1, 1, "", "get_nml_value2"], [13, 1, 1, "", "get_nml_value_from_string"], [13, 1, 1, "", "matching_value"], [13, 1, 1, "", "process_data"], [13, 1, 1, "", "process_macro"], [13, 1, 1, "", "read_macro_setting"], [13, 1, 1, "", "substitute"]], "pysurfex.binary_input.InputDataToSurfexBinaries": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputData": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "add_data"], [13, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputDataFromFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonOutputData": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "archive_files"]], "pysurfex.binary_input.JsonOutputDataFromFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "archive_files"]], "pysurfex.binary_input.OutputDataFromSurfexBinaries": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "archive_files"]], "pysurfex.bufr": [[13, 0, 1, "", "BufrObservationSet"]], "pysurfex.bufr.BufrObservationSet": [[13, 1, 1, "", "inside_window"], [13, 1, 1, "", "td2rh"]], "pysurfex.cli": [[13, 2, 1, "", "bufr2json"], [13, 2, 1, "", "cli_merge_qc_data"], [13, 2, 1, "", "cli_modify_forcing"], [13, 2, 1, "", "cli_oi2soda"], [13, 2, 1, "", "cli_set_domain_from_harmonie"], [13, 2, 1, "", "cli_set_geo_from_obs_set"], [13, 2, 1, "", "cli_set_geo_from_stationlist"], [13, 2, 1, "", "cli_shape2ign"], [13, 2, 1, "", "create_forcing"], [13, 2, 1, "", "create_lsm_file_assim"], [13, 2, 1, "", "create_namelist"], [13, 2, 1, "", "cryoclim_pseudoobs"], [13, 2, 1, "", "dump_environ"], [13, 2, 1, "", "first_guess_for_oi"], [13, 2, 1, "", "gridpp"], [13, 2, 1, "", "obs2json"], [13, 2, 1, "", "offline"], [13, 2, 1, "", "perturbed_offline"], [13, 2, 1, "", "pgd"], [13, 2, 1, "", "plot_points"], [13, 2, 1, "", "prep"], [13, 2, 1, "", "qc2obsmon"], [13, 2, 1, "", "run_gridpp"], [13, 2, 1, "", "run_oi2soda"], [13, 2, 1, "", "run_surfex_binary"], [13, 2, 1, "", "run_titan"], [13, 2, 1, "", "sentinel_obs"], [13, 2, 1, "", "set_geo_from_stationlist"], [13, 2, 1, "", "soda"], [13, 2, 1, "", "titan"]], "pysurfex.cmd_parsing": [[13, 0, 1, "", "LoadFromFile"], [13, 2, 1, "", "converter_parse_options"], [13, 2, 1, "", "parse_args_bufr2json"], [13, 2, 1, "", "parse_args_create_forcing"], [13, 2, 1, "", "parse_args_create_namelist"], [13, 2, 1, "", "parse_args_dump_environ"], [13, 2, 1, "", "parse_args_first_guess_for_oi"], [13, 2, 1, "", "parse_args_gridpp"], [13, 2, 1, "", "parse_args_lsm_file_assim"], [13, 2, 1, "", "parse_args_merge_qc_data"], [13, 2, 1, "", "parse_args_modify_forcing"], [13, 2, 1, "", "parse_args_obs2json"], [13, 2, 1, "", "parse_args_oi2soda"], [13, 2, 1, "", "parse_args_plot_points"], [13, 2, 1, "", "parse_args_qc2obsmon"], [13, 2, 1, "", "parse_args_set_geo_from_obs_set"], [13, 2, 1, "", "parse_args_set_geo_from_stationlist"], [13, 2, 1, "", "parse_args_shape2ign"], [13, 2, 1, "", "parse_args_surfex_binary"], [13, 2, 1, "", "parse_args_titan"], [13, 2, 1, "", "parse_args_variable"], [13, 2, 1, "", "parse_cryoclim_pseudoobs"], [13, 2, 1, "", "parse_sentinel_obs"], [13, 2, 1, "", "parse_set_domain"], [13, 2, 1, "", "parse_timeseries2json"], [13, 2, 1, "", "variable_parse_options"]], "pysurfex.datetime_utils": [[13, 2, 1, "", "as_datetime"], [13, 2, 1, "", "as_datetime_args"], [13, 2, 1, "", "as_datetime_string"], [13, 2, 1, "", "as_timedelta"], [13, 2, 1, "", "fromtimestamp"], [13, 2, 1, "", "get_decade"], [13, 2, 1, "", "isdatetime"], [13, 2, 1, "", "offsetaware"], [13, 2, 1, "", "utcfromtimestamp"]], "pysurfex.fa": [[13, 0, 1, "", "Fa"]], "pysurfex.fa.Fa": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"]], "pysurfex.file": [[13, 0, 1, "", "AsciiSurfexFile"], [13, 0, 1, "", "FaSurfexFile"], [13, 0, 1, "", "ForcingFileNetCDF"], [13, 0, 1, "", "NCSurfexFile"], [13, 0, 1, "", "NetCDFSurfexFile"], [13, 0, 1, "", "PGDFile"], [13, 0, 1, "", "PREPFile"], [13, 0, 1, "", "SURFFile"], [13, 0, 1, "", "SurfFileTypeExtension"], [13, 0, 1, "", "SurfexFileVariable"], [13, 0, 1, "", "SurfexIO"], [13, 0, 1, "", "SurfexSurfIO"], [13, 0, 1, "", "TexteSurfexFile"], [13, 2, 1, "", "guess_file_format"]], "pysurfex.file.AsciiSurfexFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_geo"], [13, 1, 1, "", "points"], [13, 1, 1, "", "read"]], "pysurfex.file.FaSurfexFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"]], "pysurfex.file.ForcingFileNetCDF": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"], [13, 1, 1, "", "read_field"]], "pysurfex.file.NCSurfexFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "get_geo"], [13, 1, 1, "", "points"]], "pysurfex.file.NetCDFSurfexFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"], [13, 1, 1, "", "read"]], "pysurfex.file.SurfFileTypeExtension": [[13, 1, 1, "", "__init__"]], "pysurfex.file.SurfexFileVariable": [[13, 1, 1, "", "print_var"]], "pysurfex.file.SurfexIO": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "interpolate_field"], [13, 1, 1, "", "points"]], "pysurfex.file.SurfexSurfIO": [[13, 1, 1, "", "archive_output_file"], [13, 1, 1, "", "copy_input"], [13, 1, 1, "", "symlink_input"]], "pysurfex.file.TexteSurfexFile": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"], [13, 1, 1, "", "read"]], "pysurfex.forcing": [[13, 0, 1, "", "AsciiOutput"], [13, 0, 1, "", "NetCDFOutput"], [13, 0, 1, "", "SurfexForcing"], [13, 0, 1, "", "SurfexNetCDFForcing"], [13, 0, 1, "", "SurfexOutputForcing"], [13, 2, 1, "", "modify_forcing"], [13, 2, 1, "", "run_time_loop"], [13, 2, 1, "", "set_forcing_config"], [13, 2, 1, "", "write_formatted_array"]], "pysurfex.forcing.AsciiOutput": [[13, 1, 1, "", "_define_forcing"], [13, 1, 1, "", "finalize"]], "pysurfex.forcing.NetCDFOutput": [[13, 1, 1, "", "_define_forcing"], [13, 1, 1, "", "finalize"]], "pysurfex.forcing.SurfexForcing": [[13, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexNetCDFForcing": [[13, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexOutputForcing": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "_check_sanity"], [13, 1, 1, "", "write_forcing"]], "pysurfex.geo": [[13, 0, 1, "", "Cartesian"], [13, 0, 1, "", "ConfProj"], [13, 0, 1, "", "ConfProjFromHarmonie"], [13, 0, 1, "", "Geo"], [13, 0, 1, "", "IGN"], [13, 0, 1, "", "LonLatReg"], [13, 0, 1, "", "LonLatVal"], [13, 0, 1, "", "SurfexGeo"], [13, 2, 1, "", "get_geo_object"], [13, 2, 1, "", "get_geo_object_from_json_file"], [13, 2, 1, "", "shape2ign"]], "pysurfex.geo.Cartesian": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "update_namelist"]], "pysurfex.geo.ConfProj": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "subset"], [13, 1, 1, "", "update_namelist"]], "pysurfex.geo.ConfProjFromHarmonie": [[13, 1, 1, "", "__init__"]], "pysurfex.geo.Geo": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "identifier"], [13, 1, 1, "", "is_identical"], [13, 1, 1, "", "write_proj_info"]], "pysurfex.geo.IGN": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_coord"], [13, 1, 1, "", "ign_mask"], [13, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatReg": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatVal": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "update_namelist"]], "pysurfex.geo.SurfexGeo": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "subset"], [13, 1, 1, "", "update_namelist"]], "pysurfex.grib": [[13, 0, 1, "", "Grib"], [13, 0, 1, "", "Grib2Variable"]], "pysurfex.grib.Grib": [[13, 1, 1, "id0", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"], [13, 1, 1, "", "read_field_in_message"], [13, 1, 1, "", "read_geo_info"]], "pysurfex.grib.Grib2Variable": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "generate_grib_id"], [13, 1, 1, "", "is_accumulated"], [13, 1, 1, "", "matches"], [13, 1, 1, "", "print_keys"]], "pysurfex.input_methods": [[13, 2, 1, "", "get_datasources"]], "pysurfex.interpolation": [[13, 0, 1, "", "Interpolation"], [13, 0, 1, "", "ObsOperator"], [13, 2, 1, "", "fill_field"], [13, 2, 1, "", "grid2points"], [13, 2, 1, "", "inside_grid"], [13, 2, 1, "", "sum_neighbour_points"]], "pysurfex.interpolation.Interpolation": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "alpha_grid_rot"], [13, 1, 1, "", "distance"], [13, 1, 1, "", "interpolate"]], "pysurfex.interpolation.ObsOperator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_obs_value"], [13, 1, 1, "", "is_in_grid"]], "pysurfex.namelist": [[13, 0, 1, "", "NamelistGenerator"], [13, 0, 1, "", "NamelistGeneratorAssemble"], [13, 0, 1, "", "NamelistGeneratorAssembleFromFiles"], [13, 0, 1, "", "NamelistGeneratorFromNamelistFile"]], "pysurfex.namelist.NamelistGenerator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_namelist"], [13, 1, 1, "", "lower_case_namelist_dict"]], "pysurfex.namelist.NamelistGeneratorAssemble": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "assemble_namelist"], [13, 1, 1, "", "find_num"], [13, 1, 1, "", "flatten_list"]], "pysurfex.namelist.NamelistGeneratorAssembleFromFiles": [[13, 1, 1, "", "__init__"]], "pysurfex.namelist.NamelistGeneratorFromNamelistFile": [[13, 1, 1, "", "__init__"]], "pysurfex.netcdf": [[13, 0, 1, "", "Axis"], [13, 0, 1, "", "NetCDFFileVariable"], [13, 0, 1, "", "NetCDFReadVariable"], [13, 0, 1, "", "Netcdf"], [13, 2, 1, "", "oi2soda"], [13, 2, 1, "", "read_cryoclim_nc"], [13, 2, 1, "", "read_first_guess_netcdf_file"], [13, 2, 1, "", "read_sentinel_nc"]], "pysurfex.netcdf.NetCDFFileVariable": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "axis_types"], [13, 1, 1, "", "datetimes"], [13, 1, 1, "", "dim_names"], [13, 1, 1, "", "is_level"], [13, 1, 1, "", "lats"], [13, 1, 1, "", "levels"], [13, 1, 1, "", "lons"], [13, 1, 1, "", "members"], [13, 1, 1, "", "times"], [13, 1, 1, "", "units"]], "pysurfex.netcdf.NetCDFReadVariable": [[13, 1, 1, "", "__init__"]], "pysurfex.netcdf.Netcdf": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "field"], [13, 1, 1, "", "points"]], "pysurfex.obs": [[13, 0, 1, "", "JsonObservationSet"], [13, 0, 1, "", "MetFrostObservations"], [13, 0, 1, "", "NetatmoObservationSet"], [13, 0, 1, "", "ObsSetFromVobs"], [13, 0, 1, "", "ObservationFromTitanJsonFile"], [13, 0, 1, "", "ObservationSet"]], "pysurfex.obs.JsonObservationSet": [[13, 1, 1, "", "__init__"]], "pysurfex.obs.ObsSetFromVobs": [[13, 1, 1, "id2", "__init__"], [13, 1, 1, "", "read_vfld"]], "pysurfex.obs.ObservationFromTitanJsonFile": [[13, 1, 1, "", "__init__"]], "pysurfex.obs.ObservationSet": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_data_set"], [13, 1, 1, "", "get_obs"], [13, 1, 1, "", "get_pos_index"], [13, 1, 1, "", "get_stid_index"], [13, 1, 1, "", "matching_obs"], [13, 1, 1, "", "points"], [13, 1, 1, "", "write_json_file"]], "pysurfex.observation": [[13, 0, 1, "", "Observation"]], "pysurfex.observation.Observation": [[13, 1, 1, "", "format_lat"], [13, 1, 1, "", "format_lon"], [13, 1, 1, "", "get_posid"], [13, 1, 1, "", "obs2vectors"], [13, 1, 1, "", "print_obs"], [13, 1, 1, "", "vectors2obs"]], "pysurfex.obsmon": [[13, 2, 1, "", "absbias"], [13, 2, 1, "", "calculate_statistics"], [13, 2, 1, "", "close_db"], [13, 2, 1, "", "create_db"], [13, 2, 1, "", "mean"], [13, 2, 1, "", "open_db"], [13, 2, 1, "", "populate_obsmon_db"], [13, 2, 1, "", "populate_usage_db"], [13, 2, 1, "", "rmse"], [13, 2, 1, "", "write_obsmon_sqlite_file"]], "pysurfex.obsoul": [[13, 0, 1, "", "ObservationDataSetFromObsoul"], [13, 0, 1, "", "ObservationDataSetFromObsoulFile"]], "pysurfex.platform_deps": [[13, 0, 1, "", "SystemFilePaths"], [13, 0, 1, "", "SystemFilePathsFromFile"]], "pysurfex.platform_deps.SystemFilePaths": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "save_as"], [13, 1, 1, "", "substitute_string"]], "pysurfex.platform_deps.SystemFilePathsFromFile": [[13, 1, 1, "", "__init__"]], "pysurfex.pseudoobs": [[13, 0, 1, "", "CryoclimObservationSet"], [13, 0, 1, "", "SentinelObservationSet"]], "pysurfex.read": [[13, 0, 1, "", "ConstantValue"], [13, 0, 1, "", "ConvertedInput"], [13, 0, 1, "", "Converter"], [13, 0, 1, "", "ReadData"], [13, 2, 1, "", "get_multi_converters"], [13, 2, 1, "", "kwargs2converter"]], "pysurfex.read.ConstantValue": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "print_info"]], "pysurfex.read.ConvertedInput": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "print_info"], [13, 1, 1, "", "read_time_step"]], "pysurfex.read.Converter": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "create_variable"], [13, 1, 1, "", "mixing_ratio"], [13, 1, 1, "", "mixing_ratio_from_specific_humidity"], [13, 1, 1, "", "mslp2ps"], [13, 1, 1, "", "print_info"], [13, 1, 1, "", "read_time_step"], [13, 1, 1, "", "saturation_mixing_ratio"], [13, 1, 1, "", "saturation_vapor_pressure"], [13, 1, 1, "", "specific_humidity_from_dewpoint"], [13, 1, 1, "", "specific_humidity_from_mixing_ratio"]], "pysurfex.read.ReadData": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "print_info"], [13, 1, 1, "", "read_time_step"]], "pysurfex.run": [[13, 0, 1, "", "BatchJob"], [13, 0, 1, "", "Masterodb"], [13, 0, 1, "", "PerturbedOffline"], [13, 0, 1, "", "SURFEXBinary"], [13, 2, 1, "", "clean_working_dir"], [13, 2, 1, "", "create_working_dir"]], "pysurfex.run.BatchJob": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "run"]], "pysurfex.run.SURFEXBinary": [[13, 1, 1, "", "__init__"]], "pysurfex.timeseries": [[13, 0, 1, "", "TimeSeries"], [13, 0, 1, "", "TimeSeriesFromConverter"]], "pysurfex.timeseries.TimeSeries": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "write_json"]], "pysurfex.titan": [[13, 0, 1, "", "Blacklist"], [13, 0, 1, "", "Buddy"], [13, 0, 1, "", "Climatology"], [13, 0, 1, "", "Departure"], [13, 0, 1, "", "DomainCheck"], [13, 0, 1, "", "FirstGuess"], [13, 0, 1, "", "Fraction"], [13, 0, 1, "", "NoMeta"], [13, 0, 1, "", "Plausibility"], [13, 0, 1, "", "QCDataSet"], [13, 0, 1, "", "QualityControl"], [13, 0, 1, "", "Redundancy"], [13, 0, 1, "", "Sct"], [13, 0, 1, "", "TitanDataSet"], [13, 2, 1, "", "define_quality_control"], [13, 2, 1, "", "merge_json_qc_data_sets"]], "pysurfex.titan.Blacklist": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Buddy": [[13, 1, 1, "", "test"]], "pysurfex.titan.Climatology": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Departure": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_departure"], [13, 1, 1, "", "get_values"]], "pysurfex.titan.DomainCheck": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.FirstGuess": [[13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Fraction": [[13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.NoMeta": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Plausibility": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.QCDataSet": [[13, 1, 1, "", "get_pos_index"], [13, 1, 1, "", "get_stid_index"], [13, 1, 1, "", "perform_tests"], [13, 1, 1, "", "write_output"]], "pysurfex.titan.QualityControl": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_flags"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Redundancy": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.Sct": [[13, 1, 1, "", "set_input"], [13, 1, 1, "", "test"]], "pysurfex.titan.TitanDataSet": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "perform_tests"]], "pysurfex.util": [[13, 2, 1, "", "deep_update"], [13, 2, 1, "", "parse_filepattern"], [13, 2, 1, "", "remove_existing_file"]], "pysurfex.variable": [[13, 0, 1, "", "Variable"]], "pysurfex.variable.Variable": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "deaccumulate"], [13, 1, 1, "", "get_basetime"], [13, 1, 1, "", "get_filehandler"], [13, 1, 1, "", "get_filename"], [13, 1, 1, "", "print_variable_info"], [13, 1, 1, "", "read_var_field"], [13, 1, 1, "", "read_var_points"], [13, 1, 1, "", "read_variable"], [13, 1, 1, "", "rotate_geographic_wind"], [13, 1, 1, "", "set_var"], [13, 1, 1, "", "substitute_macros"]], "pysurfex.verification": [[13, 0, 1, "", "ObsDataFromSurfexConverter"], [13, 0, 1, "", "VerifDataFromFile"], [13, 0, 1, "", "VerifVariable"], [13, 2, 1, "", "concat_datasets"], [13, 2, 1, "", "concat_datasets_verif"], [13, 2, 1, "", "converter2ds"], [13, 2, 1, "", "converter2harp"], [13, 2, 1, "", "converter2harp_cli"], [13, 2, 1, "", "ds2verif"], [13, 2, 1, "", "parse_args_concat_datasets"], [13, 2, 1, "", "parse_args_converter2ds"], [13, 2, 1, "", "parse_args_converter2harp"], [13, 2, 1, "", "parse_args_ds2verif"], [13, 2, 1, "", "parse_args_vfld2ds"], [13, 2, 1, "", "vfld2ds"]], "pysurfex.verification.ObsDataFromSurfexConverter": [[13, 1, 1, "id3", "__init__"]], "pysurfex.verification.VerifDataFromFile": [[13, 1, 1, "", "__init__"]], "pysurfex.verification.VerifVariable": [[13, 1, 1, "id6", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [3, 12, 13], "0": [3, 12, 13], "01": 3, "04": [12, 13], "08": 3, "1": [3, 12, 13], "100": 13, "1000": [12, 13], "10000": 13, "1000000": 13, "101": 13, "102": 13, "103": 13, "104": 13, "105": 13, "108": 13, "115": 13, "12": [11, 13], "13": [12, 13], "15": [12, 13], "150000": 13, "151": 13, "199": 13, "1d": 13, "2": [3, 13], "20": 13, "200": 13, "200000": 13, "2001": 2, "2007": [3, 7], "2008": 7, "2010": 0, "2011": 0, "2016": 1, "2020": 0, "2021010103": [12, 13], "2023": [12, 13], "2023013010": [12, 13], "2023013011": [12, 13], "2023041306": [12, 13], "2023041307": [12, 13], "2024": 7, "21": 3, "23": 3, "25": 3, "2500": 13, "2d": 13, "3": [2, 3, 11, 13], "34": 3, "3600": 13, "4": [3, 13], "5": [3, 12, 13], "50": [12, 13], "5000": 13, "50000": 13, "55": 3, "61": [12, 13], "622": 13, "63": [12, 13], "69": 3, "8": [12, 13], "8910065241883678": [12, 13], "9": [12, 13], "91": 3, "999999": 3, "A": [0, 1, 7, 13], "AND": [0, 1, 7], "AS": [0, 1, 7], "AT": 4, "As": 3, "BE": [0, 1, 7], "BUT": [0, 1, 7], "BY": [0, 7], "But": 2, "By": 3, "FOR": [0, 1, 7], "For": [3, 11, 13], "IF": [0, 7], "IN": [0, 1, 7], "If": [2, 3, 11, 12, 13], "In": 3, "It": [12, 13], "NO": [0, 1, 7], "NOT": [0, 1, 7], "No": [3, 13], "OF": [0, 1, 7], "ON": [0, 7, 11, 13], "OR": [0, 1, 7], "SUCH": [0, 7], "THE": [0, 1, 7], "TO": [0, 1, 7], "The": [0, 3, 7, 11, 13], "To": [3, 11, 13], "WITH": 1, "With": 2, "__": 13, "__array_finalize__": 3, "__getattribute__": 3, "__init__": 13, "__new__": 3, "_check_san": 13, "_data": 3, "_define_forc": 13, "_description_": 13, "_mask": 3, "_parse_numpydoc_see_also_sect": 7, "_type_": 13, "abc": 13, "abov": [0, 1, 7, 12, 13], "abramowitz": 5, "abrisco": 5, "absbia": 13, "absolut": 13, "abstract": 13, "accept": 3, "account": 3, "accumul": 13, "achim": 6, "aci": 13, "action": 1, "activ": [11, 13], "actual": 3, "ad": 3, "adamantik": 5, "add": [11, 13], "add_data": 13, "addit": 3, "address": [12, 13], "adjust_for_elev_diff": 13, "advis": [0, 7], "after": [11, 13], "afterward": [11, 13], "again": 3, "air_temperature_2m": [12, 13], "albert": 5, "albnir_sat": [12, 13], "albnir_soil_dir": [12, 13], "albnir_veg_dir": [12, 13], "albvis_sat": [12, 13], "albvis_soil_dir": [12, 13], "albvis_veg_dir": [12, 13], "alec": 5, "alexand": 5, "all": [1, 2, 3, 7, 11, 12, 13], "allow": 13, "allow_different_basetim": 13, "along": 3, "alpha": 13, "alpha_grid_rot": 13, "alreadi": [11, 13], "also": [2, 3, 11, 12, 13], "altern": 3, "altitud": 13, "alwai": 3, "amjith": 4, "an": [1, 3, 11, 12, 13], "an_dep": 13, "an_tim": 13, "analysis_tim": 13, "ander": 5, "andr": 5, "andrei": 6, "andrew": 5, "ani": [0, 1, 2, 3, 7, 11, 13], "anom": 3, "anomali": 3, "anoth": 3, "anywai": 3, "apart": 3, "apptain": [12, 13], "ar": [0, 2, 3, 7, 11, 12, 13], "arbitrari": 13, "archiv": 13, "archive_data": 13, "archive_fil": 13, "archive_output_fil": 13, "area": 3, "arg": 13, "argpars": 13, "argu": 3, "arguemnt": 13, "argument": [11, 13], "argv": 13, "aris": [0, 1, 7], "armin": 0, "around": 13, "arpeg": 13, "arrai": 13, "as_datetim": 13, "as_datetime_arg": 13, "as_datetime_str": 13, "as_timedelta": 13, "ascii": 13, "asciioutput": 13, "asciisurfexfil": 13, "ashlei": 6, "assembl": [12, 13], "assemble_namelist": 13, "assembli": 13, "assimil": 13, "associ": 1, "assum": [12, 13], "atmospher": [11, 13], "ato": [12, 13], "att_obj": 13, "att_tim": 13, "attribut": [3, 13], "atugushev": 5, "author": [1, 7], "autmomat": [11, 13], "auto": 13, "avail": [3, 13], "averag": 3, "avoid": 3, "awar": 13, "axi": 13, "axis_typ": 13, "ayoub": 5, "background": 13, "banner": 2, "barrett": 6, "base": [0, 2, 3], "base_tim": 13, "basetim": [12, 13], "bash": [11, 13], "batch": 13, "batcheld": 5, "batchjob": 13, "baz\u00e1n": 5, "bboe": 6, "bbzbryce": 6, "becam": 3, "becom": 3, "been": 3, "beforehand": 3, "began": 2, "behav": 3, "behavior": 3, "below": [3, 7, 11, 12, 13], "ben": 5, "benchmark": 3, "benfield": 6, "berardo": 5, "bern\u00e1t": 5, "between": [11, 13], "bhrutledg": 5, "bia": 13, "bielawski": 5, "bilinear": 13, "bin": [11, 13], "binari": [0, 7, 11], "binary_input": 13, "bind": [12, 13], "blacklist": 13, "blame": 3, "blanc": 6, "block": [10, 13], "blog": 5, "bnavig": 5, "boe": 6, "bool": [3, 13], "boolean": [3, 13], "border": 13, "both": [3, 13], "boundari": 13, "bowman": 5, "box": 5, "branch": 3, "brian": 5, "brisco": 5, "bruhin": 5, "bryce": 6, "bsd": [2, 7], "buck": 5, "buddi": 13, "buddies_min": 13, "bufr": 13, "bufr2json": 13, "bufrfil": 13, "bufrobservationset": 13, "bukzor": 5, "bull": 6, "busi": [0, 7], "c": [0, 2, 7], "cach": 13, "caheck": 13, "calcaul": 13, "calcrain": [12, 13], "calcsnow": [12, 13], "calcul": 13, "calculate_statist": 13, "call": [12, 13], "calledprocesserror": 13, "caltech": 2, "can": [2, 3, 11, 12, 13], "cartesian": 13, "case": [3, 13], "catchment": 13, "caus": [0, 7], "cd": [12, 13], "cea": 6, "ceastapleton": 6, "ceratto": 5, "cf": 3, "cfunit": [11, 13], "cgrid": [12, 13], "chang": 2, "charact": 13, "charg": 1, "check": [3, 13], "check_pars": 13, "child": 13, "choic": 13, "chri": 5, "christian": 5, "cielquan": 5, "circl": 13, "claim": 1, "class": 3, "classed_value_c": 13, "classic": 3, "claus": [2, 7], "clay_dir": [12, 13], "clean": 13, "clean_working_dir": 13, "cleder": 5, "cli": 13, "cli_merge_qc_data": 13, "cli_modify_forc": 13, "cli_oi2soda": 13, "cli_set_domain_from_harmoni": 13, "cli_set_geo_from_obs_set": 13, "cli_set_geo_from_stationlist": 13, "cli_shape2ign": 13, "climat": [12, 13], "climatolog": 13, "climatologi": 13, "close": 13, "close_db": 13, "cmax": 13, "cmd": 13, "cmd_pars": 13, "cmin": 13, "co": [5, 6], "co2": [12, 13], "code": [0, 2, 7, 11, 13], "colin": 5, "colinodel": 5, "collect": 2, "column": 13, "com": [2, 4, 5, 6], "combin": [3, 13], "come": 3, "command": [3, 11, 13], "commit": 2, "comparison": 3, "compat": 3, "compil": 5, "comput": [3, 13], "concat_dataset": 13, "concat_datasets_verif": 13, "conda": [11, 13], "condit": [0, 1, 7], "conf": [12, 13], "config": 13, "configur": 13, "confproj": 13, "confprojfromharmoni": 13, "conn": 13, "connect": [1, 13], "consequenti": [0, 7], "consid": 3, "consist": [3, 11, 12, 13], "const": 13, "constant": [3, 12, 13], "constantvalu": 13, "construct": 13, "constuct": 13, "contain": 12, "content": 13, "contigu": 3, "contract": [0, 1, 7], "contribut": 2, "contributor": [0, 2, 6, 7], "control": [11, 13], "conveni": 3, "convers": 13, "convert": [12, 13], "convertedinput": 13, "converter2d": 13, "converter2harp": 13, "converter2harp_cli": 13, "converter_parse_opt": 13, "cookiestack": 5, "coord": 13, "coordin": [2, 13], "copi": [1, 3, 13], "copperleaf": 6, "copy_input": 13, "copyright": [0, 1, 7], "cordasco": 6, "core": 2, "cori": 6, "correspond": 3, "could": [3, 13], "coupl": 3, "cover": [12, 13], "cpgdfile": 13, "cprepfil": 13, "creat": 11, "create_db": 13, "create_forc": [12, 13], "create_lsm_file_assim": 13, "create_namelist": [12, 13], "create_vari": 13, "create_working_dir": 13, "creation": [3, 12, 13], "creech": 6, "cristian": 5, "crycoclim": 13, "cryo": 13, "cryo_varnam": 13, "cryoclim": 13, "cryoclim_pseudoob": 13, "cryoclimobservationset": 13, "csreesan": 5, "csurf_filetyp": 13, "csurffil": 13, "culprit": 3, "cumprod": 3, "cumsum": 3, "curl": [11, 13], "current": [3, 11, 13], "custom": 13, "cval": 13, "d": [3, 12, 13], "d1": 3, "d2": 3, "d3x": 5, "dai": 13, "damag": [0, 1, 7], "dan": 6, "daniel": 5, "danilo": 5, "danlipsitt": 6, "darrai": 13, "data": [0, 3, 7], "databas": 13, "dataset": 13, "datasourc": 13, "datatyp": 13, "date": 3, "datetim": 13, "datetime_util": 13, "david": 5, "davidszotten": 5, "dbname": 13, "dd": [12, 13], "de": [2, 5, 6], "deaccumul": 13, "dead": 3, "deal": 1, "decad": 13, "decid": 13, "deep_upd": 13, "def": [12, 13], "default": [3, 11, 13], "defin": [3, 12, 13], "define_quality_control": 13, "definit": 13, "delanoi": 6, "delgan": 5, "dell": 5, "delta": 13, "demonstr": [12, 13], "departur": 13, "depenc": [11, 13], "depth": 13, "der": 7, "deriv": [0, 7], "descript": 13, "dest": 13, "dev": 5, "develop": 3, "deviat": [3, 13], "dew": 13, "dewpoint": 13, "dict": 13, "dict_in": 13, "dictionari": 13, "did": 3, "diff": 13, "diff_elev_max": 13, "differ": 13, "dim_nam": 13, "dimens": 13, "dimension": 13, "dir": [12, 13], "direct": [0, 7], "directli": [12, 13], "directori": [3, 12, 13], "disappear": 3, "disciplin": 13, "disclaim": [0, 7], "diskless_writ": 13, "displai": [11, 12, 13], "distanc": 13, "distance_lim": 13, "distribut": [0, 1, 2, 7], "divid": 3, "divis": 3, "dm": 3, "do": [1, 13], "docker": [12, 13], "document": [0, 1, 3, 7, 11], "dodd": 5, "dodsc": [12, 13], "doe": [3, 13], "domain": [3, 12, 13], "domain_geo": 13, "domaincheck": 13, "done": [3, 13], "down": 3, "download": [11, 13], "downscal": 13, "drammen": [12, 13], "ds2verif": 13, "dsegan": 5, "dt": 13, "dtg": 13, "dtype": 3, "duboi": 3, "dugard": 3, "dum": 13, "dump": 13, "dump_environ": 13, "dure": 3, "e": [3, 11, 13], "each": [2, 3], "earlier": 3, "easi": [3, 11, 13], "ec": [12, 13], "ecc": [11, 13], "eccod": [11, 13], "ecmwf": [11, 12, 13], "ecoclimap": [12, 13], "ecoclimap_bin_dir": [12, 13], "ecoclimap_cover_dir": [12, 13], "ecoclimap_sg_cover_dir": [12, 13], "edu": 2, "elev": 13, "elev_gradi": 13, "elovskikh": 5, "els": 13, "empti": [12, 13], "en": [11, 13], "enable_python": [11, 13], "end": [3, 13], "endblock": 10, "endfor": 10, "endif": 10, "endors": 0, "ensembl": 13, "ensur": [11, 13], "enter": 13, "entir": 2, "entireti": 2, "entri": [3, 12, 13], "env": [11, 12, 13], "environ": [11, 12, 13], "epochtim": 13, "eps2": 13, "epsilon": 13, "epygram": [11, 13], "equival": [3, 13], "eras": 3, "eric": [3, 5], "error": 13, "esat": 13, "escap": [8, 9, 10], "eval": [11, 13], "evan": 5, "even": [0, 3, 7], "event": [0, 1, 7], "eventu": 3, "everyth": 3, "everywher": 3, "exampl": 3, "except": [3, 13], "exec": [12, 13], "execut": [11, 13], "exemplari": [0, 7], "exhaust": 3, "exist": 13, "expect": 3, "experiment": 3, "export": [11, 12, 13], "express": [0, 1, 7], "extend": [3, 13], "extend_macro": 13, "extens": 13, "extern": [3, 11, 13], "extract": [11, 13], "f": 3, "f90nml": [11, 13], "f_in": 13, "f_out": 13, "fa": [11, 13], "fail": 13, "falfilfa4pi": [11, 13], "fals": [3, 13], "familiar": 3, "faster": 3, "fasurfexfil": 13, "federico": 5, "fernando": 2, "fetzer": 5, "fetzerch": 5, "few": 3, "fg": 13, "fg_dep": 13, "fg_field": 13, "fg_geo": 13, "fg_threshold": 13, "fi": 7, "fichier": 13, "fiel": 13, "field": [3, 13], "field2d": 13, "field_tmp": 13, "fieldmask": 3, "file": [1, 2, 3, 7, 11, 12, 13], "file_handl": 13, "file_pattern": 13, "fileexistserror": 13, "fileformat": 13, "filehandl": 13, "filenam": [12, 13], "filenotfounderror": 13, "filepattern": 13, "filetyp": 13, "fill": 13, "fill_field": 13, "fill_valu": 3, "final": 13, "find": [3, 13], "find_num": 13, "fine": 3, "fire": 3, "firelet": 5, "first": [3, 12, 13], "first_guess": 13, "first_guess_for_oi": 13, "firstguess": 13, "fit": [0, 1, 7], "flag": [3, 13], "flake_dir": [12, 13], "flatten": 13, "flatten_list": 13, "flniu": 5, "flo": 6, "float": [3, 13], "float_": 3, "florenc": 6, "florian": 5, "fmt": 13, "fnam": 13, "fname": 13, "folder": [11, 13], "follow": [0, 1, 2, 3, 7, 11, 13], "forc": [3, 11], "forcier": 0, "forcingfilenetcdf": 13, "forecast": 13, "form": [0, 7], "format": 13, "format_lat": 13, "format_lon": 13, "formula": 13, "fortran": 13, "found": [2, 13], "fr": 5, "fraction": 13, "fraction_field": 13, "fraction_geo": 13, "franci": 5, "free": 1, "frequenc": 13, "from": [0, 1, 2, 3, 7], "from_json": 13, "froma": 13, "fromtimestamp": 13, "frost": [11, 13], "frustrat": 3, "ftype": 13, "full": 13, "fullnam": [8, 9, 10], "function": 3, "furnish": 1, "g": [3, 11, 12, 13], "gaborbernat": 5, "gait\u00e1n": 5, "gambl": 5, "ganden": 5, "gelev": 13, "gelevs_fg": 13, "generate_grib_id": 13, "geo": 13, "geo_in": 13, "geo_out": 13, "geo_to_check": 13, "geometri": 13, "geometry_": 13, "gerard": 3, "get": [11, 13], "get_basetim": 13, "get_coord": 13, "get_data_set": 13, "get_datasourc": 13, "get_decad": 13, "get_departur": 13, "get_filehandl": 13, "get_filenam": 13, "get_geo": 13, "get_geo_object": 13, "get_geo_object_from_json_fil": 13, "get_multi_convert": 13, "get_namelist": 13, "get_nml_valu": 13, "get_nml_value2": 13, "get_nml_value_from_str": 13, "get_ob": 13, "get_obs_valu": 13, "get_pos_index": 13, "get_posid": 13, "get_stid_index": 13, "get_valu": 13, "getmask": 3, "ghcr": [11, 12, 13], "gid": 13, "giffard": 5, "github": [2, 5, 6, 11, 13], "give": 3, "given": 13, "glaf": 13, "global": 13, "global_flag": 13, "gmail": [4, 6], "gmted_carra2": [12, 13], "good": [0, 7], "got": 3, "gradient": 13, "grai": 2, "grainger": 5, "graingert": 5, "grant": 1, "grau": 6, "great": 13, "greatestap": 6, "greiner": 5, "grib": [11, 13], "grib1": 13, "grib2": 13, "grib2vari": 13, "gribvar": 13, "gribvariable1": 13, "grid": 13, "grid2point": 13, "grid_lat": 13, "grid_lon": 13, "grid_sm_fg": 13, "grid_snow_class": 13, "grid_valu": 13, "gridpp": [11, 13], "gschaffner": 5, "guess": 13, "guess_file_format": 13, "guillaum": 5, "g\u00e1bor": 5, "g\u00f3rny": 5, "ha": 3, "hahler": 5, "handler": 13, "harmonui": 13, "harp": 13, "hatfield": 5, "hattem": 5, "hauk": 6, "hauser": 2, "have": [2, 3, 12, 13], "haversin": 13, "hd": 5, "help": 13, "here": [2, 3, 12, 13], "herebi": 1, "herwig": 6, "hh": [12, 13], "hiebert": 5, "hlam": [12, 13], "holder": [0, 1, 7], "home": [11, 13], "honl": 5, "hook": [11, 13], "hour": 13, "hovm\u00f6ller": 5, "how": [3, 12, 13], "howev": [0, 7], "hpcperm": [12, 13], "ht": [12, 13], "html": [11, 13], "http": [2, 3, 5, 6, 11, 12, 13], "hugo": 5, "hugovk": 5, "humid": 13, "humidii": 13, "i": [0, 1, 2, 3, 6, 7, 11, 12, 13], "ian": 6, "id": 13, "idea": 3, "ident": 13, "identifi": [3, 13], "ign": 13, "ign_mask": 13, "iki": 7, "implement": [3, 7, 13], "impli": [0, 1, 7], "import": [2, 3], "improv": 3, "incident": [0, 7], "includ": [0, 1, 2, 3, 7], "increasingli": 3, "indent": 13, "index": 13, "indic": [2, 3, 7], "indirect": [0, 7], "individu": 2, "inexperi": 3, "inf": 3, "infil": 13, "info": 13, "inform": [3, 13], "initi": [3, 11, 13], "initial_basetim": 13, "initial_tim": 13, "inner_radiu": 13, "input": [3, 11, 12, 13], "input_data": 13, "input_fil": 13, "input_method": 13, "inputdatafromnamelist": 13, "inputdatatosurfexbinari": 13, "inputfil": [12, 13], "inputtyp": [12, 13], "inputyp": 13, "insid": [11, 12, 13], "inside_grid": 13, "inside_window": 13, "instal": 12, "instanc": 3, "instant": 13, "instead": [2, 3, 13], "institut": 2, "int": [11, 13], "interact": [11, 13], "interest": 3, "interfac": 13, "intern": 13, "interpoalt": 13, "interpol": [11, 12, 13], "interpolate_field": 13, "interpolated_field": 13, "interrupt": [0, 7], "interv": 13, "intrpol": 13, "involv": 3, "io": [5, 11, 12, 13], "iofil": 13, "ionel": 5, "ionelmc": 5, "iqt": 6, "is_accumul": 13, "is_ident": 13, "is_in_grid": 13, "is_level": 13, "isadirectoryerror": 13, "isdatetim": 13, "issu": 3, "itanlib": 13, "item": 10, "its": [2, 3], "jai": 6, "janko": 2, "janni": 5, "jeff": 0, "jeremi": 5, "jezdez": 5, "jhauser": 2, "jmbowman": 5, "job": 13, "jonathan": [4, 5], "josh": 5, "json": [12, 13], "jsoninputdata": 13, "jsoninputdatafromfil": 13, "jsonobservationset": 13, "jsonoutputdata": 13, "jsonoutputdatafromfil": 13, "jstewmon": 5, "juanjo": 5, "just": 3, "justanr": 5, "kalderimi": 5, "keep": 3, "kei": 13, "kelvin": 13, "kemenad": 5, "kenneth": [0, 6], "kennethreitz": 6, "keyerror": 13, "keys1": 13, "keys2": 13, "keys3": 13, "keys4": 13, "keyword": 13, "kind": [1, 13], "kluyver": 5, "known": [2, 13], "kozma": 5, "kozmaz87": 5, "kumar": 5, "kwarg": 13, "kwargs2convert": 13, "l": [11, 13], "label": 13, "lacabra": 6, "laf": 13, "laf_threshold": 13, "lai_dir": [12, 13], "lai_sat": [12, 13], "lambert": [6, 12, 13], "land": 13, "lannigan": 5, "lanoi": 6, "larger": 13, "larson": 5, "lat": 13, "lat1": 13, "lat2": 13, "later": 3, "latest": [11, 12, 13], "latitud": 13, "latrang": 13, "layer": 13, "lead": 2, "learn": 3, "least": [3, 13], "ledermann": 5, "leidel": 5, "length": 13, "lev": 13, "level": 13, "leveltyp": 13, "lfagmap": 13, "li": 13, "liabil": [0, 1, 7], "liabl": [0, 1, 7], "lib": [12, 13], "licenc": 7, "like": [3, 11, 13], "limit": [0, 1, 3, 7], "line": [3, 13], "link": 3, "lipsitt": 6, "list": [0, 3, 7, 13], "load": [12, 13], "loadfromfil": 13, "local": [11, 12, 13], "locat": [11, 13], "logical_or": 3, "lon": 13, "lon1": 13, "lon2": 13, "longitud": 13, "lonlatreg": 13, "lonlatv": 13, "lonrang": 13, "loop": [3, 13], "loss": [0, 7], "lost": 3, "lower": 13, "lower_case_namelist_dict": 13, "luo": 6, "luozhaoyu90": 6, "lustr": [12, 13], "lw": [12, 13], "m": 3, "macro": 13, "macro_def": 13, "made": 3, "mai": [0, 3], "main": 13, "maintain": [2, 6], "major": 3, "make": [3, 13], "malform": 13, "mamba": [11, 13], "manag": [11, 13], "manba": [11, 13], "manganiello": 5, "mani": 3, "map": 13, "mapped_data": 13, "marc": 5, "marchant": 3, "margin": 3, "marku": 6, "marsoft": 5, "mart\u00edn": 5, "mask": 13, "mask_or": 3, "masked_arrai": 3, "maskedrecord": 3, "masterodb": 13, "match": 13, "matching_ob": 13, "matching_valu": 13, "materi": [0, 7], "mateu": 5, "matplotlib": [11, 12, 13], "matplotlibrc": 3, "matterra": 5, "matthew": 5, "max": 13, "max_dist": 13, "maximum": 13, "maxval": 13, "mca": 5, "me": [3, 6], "mean": 13, "measur": 3, "member": 13, "mentat": 7, "meps25epsarch": [12, 13], "meps_det_2_5km_20230413t06z": [12, 13], "merchant": [0, 1, 7], "merg": [1, 13], "merge_json_qc_data_set": 13, "messag": 2, "met": [0, 7, 11], "met_analysis_1_0km_nordic_": [12, 13], "meta": 13, "metavar": 13, "meter": 13, "metfrostobserv": 13, "method": 3, "metno": [11, 12, 13], "metpparchivev3": [12, 13], "metproduct": [12, 13], "mgaitan": 5, "mgorni": 5, "michael": 5, "micha\u0142": 5, "micro": [11, 13], "micromamba": [11, 13], "might": 3, "mike": 6, "mikelambert": 6, "mimic": 3, "min": 13, "min_elev_diff": 13, "min_horizonal_scal": 13, "mind": 2, "miniconda": [11, 13], "minimum": 13, "minut": 13, "minval": 13, "mismatch": 13, "miss": [3, 13], "missing_elev_to_zero": 13, "mix": 13, "mixing_ratio": 13, "mixing_ratio_from_specific_humid": 13, "mkdir": [12, 13], "mm": [12, 13], "mode": 13, "model": [2, 11, 13], "modif": [0, 3, 7], "modifi": [1, 2, 12, 13], "modify_forc": 13, "modul": [3, 10, 12, 13], "modulenotfounderror": 13, "moistur": 13, "molecular": 13, "molecular_weight_ratio": 13, "monitor": [11, 13], "month": 13, "more": 3, "moreov": 3, "most": 3, "move": 3, "mr_": 3, "mrecord": 3, "mslp": 13, "mslp2p": [12, 13], "multi": 13, "multivar": 13, "mulugruntz": 5, "murrai": 5, "must": [0, 7, 13], "mwgambl": 5, "my": 3, "my_ob": 13, "my_run": [12, 13], "myself": 3, "m\u0103rie\u0219": 5, "n": [12, 13], "n8grai": 2, "na": 13, "nam_conf_proj": [12, 13], "nam_conf_proj_grid": [12, 13], "nam_nml": 13, "nam_offlin": [12, 13], "nam_pgd": [12, 13], "nam_pgd_grid": [12, 13], "nam_prep": [12, 13], "name": [0, 13], "namelist": [11, 12, 13], "namelistgener": 13, "namelistgeneratorassembl": 13, "namelistgeneratorassemblefromfil": 13, "namelistgeneratorfromnamelistfil": 13, "nan": [3, 13], "narg": 13, "nathaniel": 2, "nc": [12, 13], "ncsurfexfil": 13, "ndarrai": [3, 13], "nearest": 13, "ned": 5, "nedbatcheld": 5, "need": [3, 11, 13], "needd": 13, "neg": 13, "neg_dt": 13, "negdiff": 13, "neglig": [0, 7], "negpert": 13, "neighbour": 13, "neighbourhood": 13, "nest": 13, "net": [5, 6, 7], "netatmo": 13, "netatmoobservationset": 13, "netcdf": [11, 12, 13], "netcdf4": [11, 13], "netcdffilevari": 13, "netcdfoutput": 13, "netcdfreadvari": 13, "netcdfsurfexfil": 13, "netdf": 13, "never": 3, "new": [2, 13], "new_ma": 3, "new_snow_depth": 13, "nikola": 5, "nimax": [12, 13], "niu": 5, "njmax": [12, 13], "nlat": 13, "nlon": 13, "nlre": 13, "nml": 13, "nml_file": 13, "nmlf90": 13, "nomask": 3, "nometa": 13, "non": [3, 11, 13], "none": [12, 13], "noninfring": 1, "normal": 13, "norwai": 13, "notabl": 3, "note": 2, "noth": 13, "notic": [0, 1, 7], "notimplementederror": 13, "now": [3, 11, 13], "np": 13, "ntime": 13, "nulti": 5, "num_iter": 13, "num_max": 13, "num_min": 13, "num_min_prof": 13, "num_tri": 13, "number": 13, "numer": 3, "numpi": [11, 13], "numpydocstr": 7, "o": [3, 5, 12, 13], "ob": 13, "obj": 13, "object": [3, 13], "obnumb": 13, "obs2json": 13, "obs2vector": 13, "obs_dtg": 13, "obs_tim": 13, "obs_to_check": 13, "obsdatafromsurfexconvert": 13, "observ": [11, 13], "observationdatasetfromobsoul": 13, "observationdatasetfromobsoulfil": 13, "observationfromtitanjsonfil": 13, "observationset": 13, "obsmon": 13, "obsoper": 13, "obsoul": 13, "obssetfromvob": 13, "obstim": 13, "obtain": 1, "obtyp": 13, "offlin": [11, 12, 13], "offset": 13, "offsetawar": 13, "oi": 13, "oi2soda": 13, "old": 3, "old_ma": 3, "oliph": 3, "omp_num_thread": [12, 13], "one": [2, 3, 12, 13], "ones": [11, 13], "onli": [2, 3, 12, 13], "onlin": [11, 13], "open": 13, "open_db": 13, "openmp": [12, 13], "oper": [3, 11, 13], "optim": [11, 13], "option": [3, 12, 13], "option_str": 13, "order": 13, "org": [3, 5, 6], "origin": [0, 3], "oro_dir": [12, 13], "other": [0, 1, 7], "otherwis": [0, 1, 7], "ouput": 13, "out": [0, 1, 3, 7], "outer_radiu": 13, "output": [11, 12, 13], "outputdatafromsurfexbinari": 13, "over": 2, "overrid": 13, "owner": 0, "p": [12, 13], "p_lat": 13, "p_lon": 13, "page": [3, 13], "pagl": 6, "pamela": 5, "pamelam": 5, "paramet": 13, "parametercatergori": 13, "parameternumb": 13, "parent_pars": 13, "pars": 13, "parse_args_bufr2json": 13, "parse_args_concat_dataset": 13, "parse_args_converter2d": 13, "parse_args_converter2harp": 13, "parse_args_create_forc": 13, "parse_args_create_namelist": 13, "parse_args_ds2verif": 13, "parse_args_dump_environ": 13, "parse_args_first_guess_for_oi": 13, "parse_args_gridpp": 13, "parse_args_lsm_file_assim": 13, "parse_args_merge_qc_data": 13, "parse_args_modify_forc": 13, "parse_args_obs2json": 13, "parse_args_oi2soda": 13, "parse_args_plot_point": 13, "parse_args_qc2obsmon": 13, "parse_args_set_geo_from_obs_set": 13, "parse_args_set_geo_from_stationlist": 13, "parse_args_shape2ign": 13, "parse_args_surfex_binari": 13, "parse_args_titan": 13, "parse_args_vari": 13, "parse_args_vfld2d": 13, "parse_cryoclim_pseudoob": 13, "parse_filepattern": 13, "parse_sentinel_ob": 13, "parse_set_domain": 13, "parse_timeseries2json": 13, "parser": 13, "part": 3, "partial": 13, "partial_press": 13, "particular": [0, 1, 3, 7], "passed_test": 13, "patch": 13, "path": [11, 12, 13], "patrick": [5, 6], "pattern": 13, "paul": 3, "pauli": 7, "pav": 7, "pca": 13, "pcreech": 6, "pdin": 13, "per": 3, "percent": 13, "perez": 2, "perform": [3, 13], "perform_test": 13, "perm": [12, 13], "perm_snow": 13, "perm_snow_geo": 13, "perman": [11, 13], "permiss": [0, 1], "permit": [0, 1, 7], "person": [1, 2], "pert_numb": 13, "pertub": 13, "perturbed_offlin": 13, "perturbedofflin": 13, "petrov": 6, "pfannschmidt": 5, "pgd": [11, 12, 13], "pgdfile": 13, "ph": 5, "pictur": 3, "pierr": 3, "pin": 13, "pip3": [11, 13], "place": [3, 13], "plain": 13, "plannigan": 5, "platform": 13, "platform_dep": 13, "plausibilti": 13, "plausibl": 13, "pleas": 3, "plot": 11, "plot_point": [12, 13], "pm": [11, 13], "pnr": 13, "po": 13, "podman": [11, 12, 13], "poetri": [11, 12, 13], "point": [3, 12, 13], "popul": 13, "populate_obsmon_db": 13, "populate_usage_db": 13, "portion": 1, "pos_decim": 13, "pos_dt": 13, "posdiff": 13, "posit": 13, "possibl": [0, 3, 7, 12, 13], "possibli": 13, "predict": 13, "prefer": 13, "prefer_forecast": 13, "prefil": 3, "prefix": 13, "prep": [12, 13], "prepar": [3, 11, 13], "prepare_input": 13, "prepfil": 13, "present": 3, "preserv": 3, "pressur": 13, "previou": 13, "previous_field": 13, "previoustim": 13, "print": [3, 13], "print_info": 13, "print_kei": 13, "print_namelist": 13, "print_ob": 13, "print_var": 13, "print_variable_info": 13, "prior": 0, "prioriti": 13, "probabl": 13, "problem": 3, "process": 13, "process_data": 13, "process_macro": 13, "procur": [0, 7], "product": [0, 12, 13], "profit": [0, 7], "program": 13, "proj": [12, 13], "project": [2, 7, 12, 13], "promot": 0, "propag": 3, "properli": 13, "properti": 3, "provid": [0, 1, 7, 13], "pseudo": 13, "pseudoob": 13, "publish": 1, "pull": [12, 13], "purpos": [0, 1, 3, 7, 13], "put": 3, "putmask": 3, "pwd": [12, 13], "pxall": 13, "py": 3, "pyall": 13, "pyproj": [11, 13], "pysurfex": 12, "pytest": [11, 13], "python": [3, 6], "pyyaml": [11, 13], "q": 13, "qa": [12, 13], "qc": 13, "qc2obsmon": 13, "qc_flag": 13, "qcdataset": 13, "qt_x11_no_mitshm": [12, 13], "qualiti": [11, 13], "qualitycontrol": 13, "qualnam": 13, "quick": 3, "quickli": 3, "quot": 13, "r": 4, "r_": 3, "radarher": 5, "radiu": 13, "rain": [12, 13], "rais": [3, 13], "ramanujam": 4, "rashlei": 6, "ratio": 13, "rcparam": 3, "re": 13, "read": [11, 13], "read_cryoclim_nc": 13, "read_field": 13, "read_field_in_messag": 13, "read_first_guess_netcdf_fil": 13, "read_geo_info": 13, "read_macro_set": 13, "read_par": 13, "read_sentinel_nc": 13, "read_til": 13, "read_time_step": 13, "read_var_field": 13, "read_var_point": 13, "read_vari": 13, "read_vfld": 13, "readdata": 13, "readm": 13, "readthedoc": [11, 13], "realiz": [3, 13], "realli": 3, "recarrai": 3, "recipi": [11, 13], "recommend": [11, 12, 13], "record": 2, "recreat": 13, "recurs": 13, "redhat": 6, "redistribut": [0, 7], "redund": 13, "ref": 13, "ref_proj": 13, "reggi": 3, "registri": [11, 13], "regular": 3, "regularli": 3, "reiter": 5, "reitz": [0, 6], "rel": 13, "releas": [11, 13], "rememb": 3, "remov": 13, "remove_existing_fil": 13, "remove_invalid_elev": 13, "renaud": 6, "repositori": 2, "reproduc": [0, 3, 7], "request": [11, 13], "requir": [3, 13], "res4": [12, 13], "reserv": [0, 7], "restart": 13, "restrict": 1, "result": 3, "retain": [0, 7], "return": [3, 13], "revis": 2, "rewrit": 3, "rh2m": 13, "rh2q_mslp": [12, 13], "rick": 5, "rid": 3, "riedel": 5, "right": [0, 1, 7], "rmse": 13, "ro": 5, "ronach": 0, "ronni": 5, "ronnypfannschmidt": 5, "root": [12, 13], "rotat": 13, "rotate_geographic_wind": 13, "rte": [12, 13], "rubric": 10, "run_gridpp": 13, "run_oi2soda": 13, "run_surfex_binari": 13, "run_time_loop": 13, "run_titan": 13, "runtimeerror": 13, "rutledg": 5, "rw": [12, 13], "ryan": [5, 6], "ryanhiebert": 5, "s_d": 13, "s_m": 13, "sam": 6, "same": [3, 13], "samuel": 5, "sand_dir": [12, 13], "sandbox": 3, "sasha": 3, "sat": 13, "satur": 13, "saturation_mixing_ratio": 13, "saturation_vapor_pressur": 13, "saurabh": 5, "save": 13, "save_a": 13, "sbarnea": 5, "sbu": [12, 13], "sca": [12, 13], "schaffner": 5, "schlaich": 5, "schlamar": 5, "scikit": 3, "scipi": 3, "scratch": [12, 13], "screen": [12, 13], "script": 3, "sct": 13, "sea": 13, "search": 13, "second": 13, "section": 3, "see": [2, 3, 7, 11, 13], "select": 3, "self": 3, "sell": 1, "sens": 13, "sentinel": 13, "sentinel_ob": 13, "sentinelobservationset": 13, "sep": 13, "separ": 13, "seri": [3, 13], "serrat": 6, "servic": [0, 7], "session": [11, 13], "set": [2, 3, 11, 12, 13], "set_flag": 13, "set_forcing_config": 13, "set_geo_from_stationlist": 13, "set_input": 13, "set_var": 13, "sever": 13, "sfx_data": [12, 13], "sg": [12, 13], "sh": [11, 13], "shadchin": 5, "shall": [0, 1, 7], "shape": 13, "shape2ign": 13, "share": 2, "share_mask": 3, "shazow": 6, "shell": [11, 13], "shibukawa": 1, "should": 2, "shouldn": 3, "show": 3, "sif": [12, 13], "sigmao": 13, "similar": [12, 13], "simple_plot": 3, "singl": 2, "singular": [12, 13], "size": 13, "skip": 13, "skip_flag": 13, "slender": 4, "slope": 13, "slope_geo": 13, "slow": 3, "slower": 3, "snarf": 6, "snow": [12, 13], "snow_fg": 13, "so": [1, 3], "soc_sub_dir": [12, 13], "soc_top_dir": [12, 13], "soda": [12, 13], "softwar": [0, 1, 11, 13], "soil": 13, "soilgrid_carra2": [12, 13], "soilgrid_dir": [12, 13], "some": [0, 3], "sorin": 5, "sourc": [0, 2, 7, 11, 13], "souza": 5, "spatial": 13, "special": [0, 3, 7], "specif": [0, 2, 13], "specifi": [11, 13], "specific_humid": 13, "specific_humidity_from_dewpoint": 13, "specific_humidity_from_mixing_ratio": 13, "speed": 3, "sqlite": 13, "sqlite3": 13, "squar": 13, "sreesangkom": 5, "ssbarnea": 5, "standard": [11, 13], "stapleton": 6, "start": [3, 13], "stat_col": 13, "static": 13, "station": 13, "stationlist": 13, "statist": 13, "staurat": 13, "stefan": 7, "step": [3, 13], "stewmon": 5, "stid": 13, "stids_fil": 13, "still": [2, 3], "store": 3, "storeb": [12, 13], "stori": 3, "str": 13, "strict": [0, 7], "string": 13, "subarrai": 3, "subclass": 3, "subject": 1, "sublicens": 1, "subproject": 2, "subset": 13, "subst": 13, "substanti": [1, 3], "substitut": [0, 7, 13], "substitute_macro": 13, "substitute_str": 13, "subtyp": 13, "sudo": [12, 13], "suggest": 3, "suitabl": [11, 13], "sum": 13, "sum_neighbour_point": 13, "sure": 3, "surf": 13, "surfac": [11, 13], "surfex_namelist": [12, 13], "surfexbinari": 13, "surfexfil": 13, "surfexfilevari": 13, "surfexforc": 13, "surfexgeo": 13, "surfexio": 13, "surfexnetcdfforc": 13, "surfexoutputforc": 13, "surfexsurfio": 13, "surffil": 13, "surffiletypeextens": 13, "surfout": [12, 13], "surfx": 13, "surpris": 3, "svn": 3, "sw": [12, 13], "symlink": 13, "symlink_input": 13, "system": 12, "system_file_path": 13, "system_vari": 13, "systemfilepath": 13, "systemfilepathsfromfil": 13, "szotten": 5, "t": [3, 12, 13], "t2m": 13, "t_d": 13, "take": 3, "takluyv": 5, "target": 13, "target_tim": 13, "task": 13, "td": 13, "td2rh": 13, "team": 7, "temp": 13, "temperatur": 13, "temperature_kelvin": 13, "temporari": 3, "terenc": 5, "terencehonl": 5, "terra": 5, "test": [3, 11, 13], "test_default": [12, 13], "test_flag": 13, "test_list": 13, "text": 13, "textesurfexfil": 13, "than": [3, 13], "thauk": 6, "thei": [2, 3, 12, 13], "theme": 0, "theori": [0, 7], "theskumar": 5, "thi": [0, 1, 2, 3, 7, 11, 12, 13], "thing": 3, "third": 3, "this_tim": 13, "thoma": [5, 6], "thread": [12, 13], "threshold": 13, "through": 13, "thu": 2, "tile": 13, "tiletyp": 13, "time": [12, 13], "time_step": 13, "time_step_interval": 13, "timedelta": 13, "timeseri": [3, 13], "timeseriesfromconvert": 13, "timestamp": 13, "titan": 13, "titandataset": 13, "titanlib": [11, 13], "tmp": [12, 13], "toolbelt": 6, "tort": [0, 1, 7], "total": 13, "total_press": 13, "travi": 3, "tree_height_dir": [12, 13], "tri": 3, "trigger": [11, 13], "true": [3, 13], "try": [3, 13], "tsp": 13, "tugushev": 5, "tupl": 13, "tutori": [12, 13], "two": [3, 7, 13], "twodfield": 13, "txt": 13, "typ": 13, "type": [3, 13], "typeofstatisticalprocess": 13, "typic": 2, "ufunc": 3, "uk": 5, "un": 13, "uncom": 3, "undefin": 13, "under": [2, 7], "underlin": [8, 9, 10], "understand": 3, "understood": 3, "underwai": 3, "unfortun": 3, "unit": 13, "unix": [12, 13], "unknown": 13, "unless": 7, "unpickl": 3, "unpleas": 3, "unterwaditz": 6, "until": 3, "up": [3, 11, 13], "updat": [3, 11, 13], "update_namelist": 13, "upward": 3, "uref": [12, 13], "us": [0, 1, 2, 7, 11, 12, 13], "usag": [11, 13], "use_first": 13, "user": [3, 11, 12, 13], "utcfromtimestamp": 13, "util": 13, "v": [12, 13], "val": 13, "valid": 13, "valid_dtg": 13, "valid_rang": 13, "validtim": [12, 13], "valu": [3, 12, 13], "valueerror": [3, 13], "van": [5, 7], "vapor": 13, "var": 13, "var_dict": 13, "var_nam": 13, "var_obj": 13, "var_typ": 13, "variabl": [12, 13], "variable_parse_opt": 13, "variou": 6, "varnam": 13, "vector": 13, "vectors2ob": 13, "verif": 13, "verifdata": 13, "verifdatafromfil": 13, "verifvari": 13, "version": [3, 12, 13], "vertical_scal": 13, "vfld": 13, "vfld2d": 13, "victor": 6, "view": 3, "virtanen": 7, "vob": 13, "volum": [12, 13], "w": 3, "wa": [3, 7, 13], "wai": [0, 3, 7], "walt": 7, "want": [2, 3, 12, 13], "warranti": [0, 1, 7], "we": 3, "weight": 13, "well": 3, "went": 3, "were": [3, 13], "what": [2, 3, 13], "when": [2, 3, 13], "whether": [0, 1, 3, 7], "which": [3, 11, 13], "while": 3, "whom": 1, "why": 3, "wide": [12, 13], "wiki": [3, 11, 13], "wind": [12, 13], "window": 13, "wish": [3, 13], "without": [0, 1, 3, 7, 11, 12, 13], "wmo": 13, "wodca": 6, "wol": 5, "wonder": 3, "word": 13, "work": [0, 3, 12, 13], "workdir": 13, "worth": 3, "would": 3, "wouldn": 3, "wrapper": 13, "write": [3, 13], "write_forc": 13, "write_formatted_arrai": 13, "write_json": 13, "write_json_fil": 13, "write_obsmon_sqlite_fil": 13, "write_output": 13, "write_proj_info": 13, "written": [0, 6], "wronglink": 5, "www": [3, 5, 6], "x": 3, "x11": [12, 13], "xbeta": [12, 13], "xdx": [12, 13], "xdy": [12, 13], "xlat0": [12, 13], "xlatcen": [12, 13], "xlon0": [12, 13], "xloncen": [12, 13], "xprovid": 13, "xrpk": [12, 13], "xuanxu": 5, "xxx": 13, "y": 3, "yabz": 5, "ye": 3, "year": 13, "yet": [12, 13], "yml": [12, 13], "yorgo": 6, "yoshiki": 1, "you": [3, 11, 12, 13], "your": [3, 11, 12, 13], "yr_short": [12, 13], "yyi": 13, "yyyi": [12, 13], "z": [12, 13], "za": 7, "zac": 5, "zero": 3, "zerodivisionerror": 13, "zhaoyu": 6, "zhd": 5, "zoltan": 5, "zref": [12, 13], "zscout": 2, "\u0161egan": 5, "\u043c\u0430\u0440\u044c\u044f\u0441\u0438\u043d": 5, "\u0441\u0435\u043c\u0451\u043d": 5}, "titles": ["&lt;no title&gt;", "The MIT License (MIT)", "The IPython licensing terms", "A Guide to Masked Arrays in NumPy", "Authors", "Authors", "Development Lead", "License for Sphinx", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Python API to SURFEX (pysurfex)", "Examples", "PYSURFEX documentation"], "titleterms": {"A": 3, "The": [1, 2], "about": 2, "analysi": [12, 13], "api": [11, 13], "applic": [11, 13], "arrai": 3, "author": [4, 5], "base": [11, 13], "befor": 3, "binari": [12, 13], "built": [11, 13], "class": 13, "client": [11, 13], "contain": [11, 13], "content": 3, "contributor": 4, "copyright": 2, "core": 3, "creat": [12, 13], "creator": 4, "data": [12, 13], "debian": [11, 13], "depend": [11, 13], "develop": [2, 6], "differ": 3, "document": 13, "exampl": [11, 12, 13], "featur": 3, "fill": 3, "forc": [12, 13], "from": [11, 12, 13], "gener": [11, 13], "guid": 3, "histori": 3, "incorpor": 7, "indic": 13, "instal": [11, 13], "ipython": 2, "lead": 6, "licens": [1, 2, 7], "linux": [11, 13], "ma": 3, "main": 3, "mask": 3, "maskedarrai": 3, "matplotlib": 3, "mep": [12, 13], "met": [12, 13], "method": 13, "mit": 1, "new": 3, "nordic": [12, 13], "note": 3, "numpi": 3, "optim": 3, "our": 2, "packag": [3, 11, 13], "patch": 6, "pip": [11, 13], "plot": [12, 13], "polici": 2, "pre": [11, 13], "pregener": [11, 13], "process": 3, "pypi": [11, 13], "pysurfex": [11, 13], "python": [11, 13], "record": 3, "request": 6, "revis": 3, "run": [11, 12, 13], "should": 3, "softwar": 7, "sphinx": 7, "suggest": 6, "surfex": [11, 12, 13], "system": [11, 13], "tabl": 13, "team": 2, "term": 2, "thank": 3, "thredd": [12, 13], "urllib3": 6, "us": 3}})
Search.setIndex({"docnames": [".venv/lib/python3.8/site-packages/Jinja2-3.1.2.dist-info/LICENSE", ".venv/lib/python3.8/site-packages/MarkupSafe-2.1.2.dist-info/LICENSE", ".venv/lib/python3.8/site-packages/imagesize-1.4.1.dist-info/LICENSE", ".venv/lib/python3.8/site-packages/pytest_cov-3.0.0.dist-info/AUTHORS", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/base", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/class", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/module", "README", "docs/example", "index"], "filenames": [".venv/lib/python3.8/site-packages/Jinja2-3.1.2.dist-info/LICENSE.rst", ".venv/lib/python3.8/site-packages/MarkupSafe-2.1.2.dist-info/LICENSE.rst", ".venv/lib/python3.8/site-packages/imagesize-1.4.1.dist-info/LICENSE.rst", ".venv/lib/python3.8/site-packages/pytest_cov-3.0.0.dist-info/AUTHORS.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/base.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/class.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/module.rst", "README.rst", "docs/example.rst", "index.rst"], "titles": ["&lt;no title&gt;", "&lt;no title&gt;", "The MIT License (MIT)", "Authors", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Python API to SURFEX (pysurfex)", "Examples", "PYSURFEX documentation"], "terms": {"copyright": [0, 1, 2], "2007": 0, "pallet": [0, 1], "redistribut": [0, 1], "us": [0, 1, 2, 8, 9], "sourc": [0, 1, 7, 9], "binari": [0, 1, 7], "form": [0, 1], "without": [0, 1, 2, 7, 8, 9], "modif": [0, 1], "ar": [0, 1, 7, 8, 9], "permit": [0, 1, 2], "provid": [0, 1, 2, 9], "follow": [0, 1, 2, 7, 9], "condit": [0, 1, 2], "met": [0, 1, 7], "code": [0, 1, 7, 9], "must": [0, 1, 9], "retain": [0, 1], "abov": [0, 1, 2, 8, 9], "notic": [0, 1, 2], "thi": [0, 1, 2, 7, 8, 9], "list": [0, 1, 9], "disclaim": [0, 1], "reproduc": [0, 1], "document": [0, 1, 2, 7], "other": [0, 1, 2], "materi": [0, 1], "distribut": [0, 1, 2], "neither": [0, 1], "name": [0, 1, 9], "holder": [0, 1, 2], "nor": [0, 1], "its": [0, 1], "contributor": [0, 1], "mai": [0, 1], "endors": [0, 1], "promot": [0, 1], "product": [0, 1, 8, 9], "deriv": [0, 1], "from": [0, 1, 2], "softwar": [0, 1, 2, 7, 9], "specif": [0, 1, 9], "prior": [0, 1], "written": [0, 1], "permiss": [0, 1, 2], "i": [0, 1, 2, 7, 8, 9], "BY": [0, 1], "THE": [0, 1, 2], "AND": [0, 1, 2], "AS": [0, 1, 2], "ani": [0, 1, 2, 7, 9], "express": [0, 1, 2], "OR": [0, 1, 2], "impli": [0, 1, 2, 9], "warranti": [0, 1, 2], "includ": [0, 1, 2], "BUT": [0, 1, 2], "NOT": [0, 1, 2], "limit": [0, 1, 2], "TO": [0, 1, 2], "OF": [0, 1, 2], "merchant": [0, 1, 2], "fit": [0, 1, 2], "FOR": [0, 1, 2], "A": [0, 1, 2, 9], "particular": [0, 1, 2], "purpos": [0, 1, 2], "IN": [0, 1, 2], "NO": [0, 1, 2], "event": [0, 1, 2], "shall": [0, 1, 2], "BE": [0, 1, 2], "liabl": [0, 1, 2], "direct": [0, 1, 9], "indirect": [0, 1], "incident": [0, 1], "special": [0, 1, 9], "exemplari": [0, 1], "consequenti": [0, 1], "damag": [0, 1, 2], "procur": [0, 1], "substitut": [0, 1, 9], "good": [0, 1], "servic": [0, 1], "loss": [0, 1], "data": [0, 1], "profit": [0, 1], "busi": [0, 1], "interrupt": [0, 1], "howev": [0, 1], "caus": [0, 1], "ON": [0, 1, 7, 9], "theori": [0, 1], "liabil": [0, 1, 2], "whether": [0, 1, 2], "contract": [0, 1, 2], "strict": [0, 1], "tort": [0, 1, 2], "neglig": [0, 1], "otherwis": [0, 1, 2], "aris": [0, 1, 2], "wai": [0, 1], "out": [0, 1, 2], "even": [0, 1], "IF": [0, 1], "advis": [0, 1], "possibl": [0, 1, 8, 9], "SUCH": [0, 1], "2010": 1, "2016": 2, "yoshiki": 2, "shibukawa": 2, "herebi": 2, "grant": 2, "free": 2, "charg": 2, "person": 2, "obtain": 2, "copi": [2, 9], "associ": 2, "file": [2, 7, 8, 9], "deal": 2, "restrict": 2, "right": 2, "modifi": [2, 8, 9], "merg": [2, 9], "publish": 2, "sublicens": 2, "sell": 2, "whom": 2, "furnish": 2, "do": [2, 9], "so": 2, "subject": 2, "all": [2, 7, 8, 9], "substanti": 2, "portion": 2, "kind": [2, 9], "noninfring": 2, "author": 2, "claim": 2, "an": [2, 7, 8, 9], "action": 2, "connect": [2, 9], "WITH": 2, "marc": 3, "schlaich": 3, "http": [3, 7, 8, 9], "www": 3, "schlamar": 3, "org": 3, "rick": 3, "van": 3, "hattem": 3, "wol": 3, "ph": 3, "buck": 3, "evan": 3, "github": [3, 7, 9], "com": 3, "bukzor": 3, "eric": 3, "larson": 3, "abramowitz": 3, "thoma": 3, "kluyver": 3, "takluyv": 3, "guillaum": 3, "ayoub": 3, "yabz": 3, "fr": 3, "federico": 3, "ceratto": 3, "firelet": 3, "net": 3, "josh": 3, "kalderimi": 3, "blog": 3, "cookiestack": 3, "ionel": 3, "cristian": 3, "m\u0103rie\u0219": 3, "ionelmc": 3, "ro": 3, "christian": 3, "ledermann": 3, "cleder": 3, "alec": 3, "nikola": 3, "reiter": 3, "justanr": 3, "patrick": 3, "lannigan": 3, "plannigan": 3, "david": 3, "szotten": 3, "davidszotten": 3, "michael": 3, "elovskikh": 3, "wronglink": 3, "saurabh": 3, "kumar": 3, "theskumar": 3, "daniel": 3, "hahler": 3, "de": 3, "florian": 3, "bruhin": 3, "compil": 3, "zoltan": 3, "kozma": 3, "kozmaz87": 3, "franci": 3, "niu": 3, "flniu": 3, "io": [3, 7, 8, 9], "janni": 3, "leidel": 3, "jezdez": 3, "ryan": 3, "hiebert": 3, "ryanhiebert": 3, "terenc": 3, "honl": 3, "terencehonl": 3, "jeremi": 3, "bowman": 3, "jmbowman": 3, "samuel": 3, "giffard": 3, "mulugruntz": 3, "\u0441\u0435\u043c\u0451\u043d": 3, "\u043c\u0430\u0440\u044c\u044f\u0441\u0438\u043d": 3, "marsoft": 3, "alexand": 3, "shadchin": 3, "grainger": 3, "graingert": 3, "co": 3, "uk": 3, "juanjo": 3, "baz\u00e1n": 3, "xuanxu": 3, "andrew": 3, "murrai": 3, "radarher": 3, "ned": 3, "batcheld": 3, "nedbatcheld": 3, "albert": 3, "tugushev": 3, "atugushev": 3, "mart\u00edn": 3, "gait\u00e1n": 3, "mgaitan": 3, "hugo": 3, "kemenad": 3, "hugovk": 3, "manganiello": 3, "adamantik": 3, "ander": 3, "hovm\u00f6ller": 3, "box": 3, "zac": 3, "hatfield": 3, "dodd": 3, "zhd": 3, "dev": [3, 7, 9], "mateu": 3, "berardo": 3, "souza": 3, "terra": 3, "matterra": 3, "ganden": 3, "schaffner": 3, "gschaffner": 3, "micha\u0142": 3, "g\u00f3rny": 3, "mgorni": 3, "bern\u00e1t": 3, "g\u00e1bor": 3, "gaborbernat": 3, "pamela": 3, "mca": 3, "nulti": 3, "pamelam": 3, "riedel": 3, "cielquan": 3, "chri": 3, "sreesangkom": 3, "csreesan": 3, "sorin": 3, "sbarnea": 3, "ssbarnea": 3, "brian": 3, "rutledg": 3, "bhrutledg": 3, "danilo": 3, "\u0161egan": 3, "dsegan": 3, "bielawski": 3, "d3x": 3, "fullnam": [4, 5, 6], "escap": [4, 5, 6], "underlin": [4, 5, 6], "block": [6, 9], "modul": [6, 8, 9], "rubric": 6, "item": 6, "endfor": 6, "endif": 6, "endblock": 6, "extern": [7, 9], "surfac": [7, 9], "model": [7, 9], "prepar": [7, 9], "input": [7, 8, 9], "namelist": [7, 8, 9], "creat": 7, "atmospher": [7, 9], "forc": 7, "offlin": [7, 8, 9], "read": [7, 9], "output": [7, 9], "qualiti": [7, 9], "control": [7, 9], "observ": [7, 9], "titanlib": [7, 9], "optim": [7, 9], "interpol": [7, 8, 9], "gridpp": [7, 9], "monitor": [7, 9], "usag": [7, 9], "see": [7, 9], "onlin": [7, 9], "metno": [7, 8, 9], "releas": [7, 9], "trigger": [7, 9], "autmomat": [7, 9], "which": [7, 9], "can": [7, 8, 9], "pip3": [7, 9], "user": [7, 8, 9], "also": [7, 8, 9], "updat": [7, 9], "registri": [7, 9], "below": [7, 8, 9], "pgd": [7, 8, 9], "argument": [7, 9], "podman": [7, 8, 9], "ghcr": [7, 8, 9], "latest": [7, 8, 9], "poetri": [7, 8, 9], "requir": [7, 9], "pacakg": [7, 9], "some": [7, 9], "might": [7, 9], "obsolet": [7, 9], "need": [7, 9], "deped": [7, 9], "sudo": [7, 8, 9], "apt": [7, 9], "get": [7, 9], "y": [7, 9], "libudunits2": [7, 9], "libproj": [7, 9], "libeccodes0": [7, 9], "libeccod": [7, 9], "libnetcdf": [7, 9], "netcdf": [7, 8, 9], "bin": [7, 9], "ca": [7, 9], "certif": [7, 9], "The": [7, 9], "depenc": [7, 9], "non": [7, 9], "standard": [7, 9], "ones": [7, 9], "e": [7, 9], "g": [7, 8, 9], "your": [7, 8, 9], "numpi": [7, 9], "pyproj": [7, 9], "pyyaml": [7, 9], "toml": [7, 8, 9], "f90nml": [7, 9], "To": [7, 9], "netcdf4": [7, 9], "cfunit": [7, 9], "grib": [7, 9], "eccod": [7, 9], "ecmwf": [7, 8, 9], "int": [7, 9], "wiki": [7, 9], "displai": [7, 8, 9], "ecc": [7, 9], "enable_python": [7, 9], "plot": 7, "matplotlib": [7, 8, 9], "frost": [7, 9], "request": [7, 9], "For": [7, 9], "oper": [7, 9], "test": [7, 9], "pytest": [7, 9], "download": [7, 9], "execut": [7, 9], "insid": [7, 8, 9], "extract": [7, 9], "folder": [7, 9], "environ": [7, 8, 9], "activ": [7, 9], "interact": [7, 9], "shell": [7, 9], "command": [7, 9], "import": [7, 9], "sy": [7, 9], "cli": [7, 9], "parse_args_surfex_binari": [7, 9], "run_surfex_binari": [7, 9], "argv": [7, 9], "1": [7, 8, 9], "kwarg": [7, 9], "here": [8, 9], "assum": [8, 9], "you": [8, 9], "have": [8, 9], "instal": 8, "work": [8, 9], "pysurfex": 8, "contain": 8, "set": [8, 9], "variabl": [8, 9], "If": [8, 9], "system": 8, "wide": [8, 9], "entri": [8, 9], "point": [8, 9], "directli": [8, 9], "empti": [8, 9], "env": [8, 9], "export": [8, 9], "local": [8, 9], "how": [8, 9], "apptain": [8, 9], "ato": [8, 9], "load": [8, 9], "singular": [8, 9], "8": [8, 9], "first": [8, 9], "time": [8, 9], "creation": [8, 9], "pull": [8, 9], "scratch": [8, 9], "sif": [8, 9], "docker": [8, 9], "exec": [8, 9], "bind": [8, 9], "x11": [8, 9], "yet": [8, 9], "qt_x11_no_mitshm": [8, 9], "tmp": [8, 9], "unix": [8, 9], "rw": [8, 9], "recommend": [8, 9], "root": [8, 9], "v": [8, 9], "volum": [8, 9], "address": [8, 9], "lustr": [8, 9], "storeb": [8, 9], "project": [8, 9], "metproduct": [8, 9], "yr_short": [8, 9], "met_analysis_1_0km_nordic_": [8, 9], "yyyi": [8, 9], "mm": [8, 9], "dd": [8, 9], "t": [8, 9], "hh": [8, 9], "z": [8, 9], "nc": [8, 9], "dodsc": [8, 9], "metpparchivev3": [8, 9], "create_forc": [8, 9], "p": [8, 9], "2023013010": [8, 9], "2023013011": [8, 9], "d": [8, 9], "domain": [8, 9], "drammen": [8, 9], "json": [8, 9], "rain_convert": [8, 9], "calcrain": [8, 9], "snow_convert": [8, 9], "calcsnow": [8, 9], "zref": [8, 9], "screen": [8, 9], "uref": [8, 9], "qa_convert": [8, 9], "rh2q_mslp": [8, 9], "co2": [8, 9], "constant": [8, 9], "dir_sw_convert": [8, 9], "sca_sw": [8, 9], "lw_convert": [8, 9], "wind_convert": [8, 9], "none": [8, 9], "wind_dir_convert": [8, 9], "ps_convert": [8, 9], "mslp2p": [8, 9], "lambert": [8, 9], "conf": [8, 9], "proj": [8, 9], "nam_pgd_grid": [8, 9], "cgrid": [8, 9], "nam_conf_proj": [8, 9], "xbeta": [8, 9], "0": [8, 9], "xlat0": [8, 9], "63": [8, 9], "xlon0": [8, 9], "15": [8, 9], "xrpk": [8, 9], "8910065241883678": [8, 9], "nam_conf_proj_grid": [8, 9], "nimax": [8, 9], "50": [8, 9], "njmax": [8, 9], "xdx": [8, 9], "1000": [8, 9], "xdy": [8, 9], "xlatcen": [8, 9], "61": [8, 9], "5": [8, 9], "xloncen": [8, 9], "9": [8, 9], "sand_dir": [8, 9], "perm": [8, 9], "sbu": [8, 9], "soilgrid_carra2": [8, 9], "clay_dir": [8, 9], "soilgrid_dir": [8, 9], "soc_top_dir": [8, 9], "ec": [8, 9], "res4": [8, 9], "hpcperm": [8, 9], "hlam": [8, 9], "climat": [8, 9], "soc_sub_dir": [8, 9], "ecoclimap_cover_dir": [8, 9], "ecoclimap_bin_dir": [8, 9], "sfx_data": [8, 9], "test_default": [8, 9], "lib": [8, 9], "my_run": [8, 9], "ecoclimap": [8, 9], "flake_dir": [8, 9], "ecoclimap_sg_cover_dir": [8, 9], "sg": [8, 9], "cover": [8, 9], "albnir_soil_dir": [8, 9], "albnir_sat": [8, 9], "albvis_soil_dir": [8, 9], "albvis_sat": [8, 9], "albnir_veg_dir": [8, 9], "albvis_veg_dir": [8, 9], "tree_height_dir": [8, 9], "ht": [8, 9], "lai_dir": [8, 9], "lai_sat": [8, 9], "oro_dir": [8, 9], "gmted_carra2": [8, 9], "path": [8, 9], "thei": [8, 9], "call": [8, 9], "prep": [8, 9], "soda": [8, 9], "defin": [8, 9], "directori": [8, 9], "consist": [8, 9], "version": [8, 9], "want": [8, 9], "similar": [8, 9], "rte": [8, 9], "mkdir": [8, 9], "tutori": [8, 9], "cd": [8, 9], "open": [8, 9], "nam_dir": [8, 9], "nam_open_surfex_8_1": [8, 9], "cy43": [8, 9], "nam_cy43_dev": [8, 9], "cy46": [8, 9], "nam_hm_cy46": [8, 9], "onli": [8, 9], "one": [8, 9], "openmp": [8, 9], "thread": [8, 9], "omp_num_thread": [8, 9], "dump": [8, 9], "dump_environ": [8, 9], "o": [8, 9], "c": [8, 9], "cfg": [8, 9], "config_exp_surfex": [8, 9], "r": [8, 9], "": [8, 9], "n": [8, 9], "valu": [8, 9], "prep_fil": [8, 9], "prep_from_namelist_valu": [8, 9], "prep_filetyp": [8, 9], "dtg": [8, 9], "2021010103": [8, 9], "surfout": [8, 9], "pwd": [8, 9], "It": [8, 9], "demonstr": [8, 9], "plot_point": [8, 9], "air_temperature_2m": [8, 9], "meps25epsarch": [8, 9], "2023": [8, 9], "04": [8, 9], "13": [8, 9], "meps_det_2_5km_20230413t06z": [8, 9], "2023041307": [8, 9], "titan": 9, "qualitycontrol": 9, "abstract": 9, "plausibl": 9, "minval": 9, "maxval": 9, "plausibilti": 9, "firstguess": 9, "geo_in": 9, "fg_field": 9, "negdiff": 9, "posdiff": 9, "max_dist": 9, "5000": 9, "bilinear": 9, "guess": 9, "check": 9, "fraction": 9, "fraction_field": 9, "sct": 9, "num_min": 9, "num_max": 9, "100": 9, "inner_radiu": 9, "50000": 9, "outer_radiu": 9, "150000": 9, "num_iter": 9, "num_min_prof": 9, "20": 9, "min_elev_diff": 9, "200": 9, "min_horizonal_scal": 9, "10000": 9, "vertical_scal": 9, "po": 9, "4": 9, "neg": 9, "eps2": 9, "cmin": 9, "cmax": 9, "missing_elev_to_zero": 9, "fals": 9, "spatial": 9, "buddi": 9, "diff_elev_max": 9, "200000": 9, "adjust_for_elev_diff": 9, "true": 9, "distance_lim": 9, "1000000": 9, "prioriti": 9, "buddies_min": 9, "threshold": 9, "obs_to_check": 9, "climatologi": 9, "an_tim": 9, "offset": 9, "qc": 9, "redund": 9, "blacklist": 9, "domaincheck": 9, "domain_geo": 9, "nometa": 9, "miss": 9, "meta": 9, "qcdataset": 9, "analysis_tim": 9, "flag": 9, "ci": 9, "laf": 9, "passed_test": 9, "fg_dep": 9, "an_dep": 9, "remove_invalid_elev": 9, "titandataset": 9, "var": 9, "datasourc": 9, "corep": 9, "test_flag": 9, "departur": 9, "geo": 9, "dataset": 9, "grid_valu": 9, "mode": 9, "differ": 9, "between": 9, "obstim": 9, "lon": 9, "lat": 9, "elev": 9, "nan": 9, "stid": 9, "na": 9, "varnam": 9, "externalsurfexinputfil": 9, "system_file_path": 9, "wrapper": 9, "around": 9, "treatment": 9, "each": 9, "format": 9, "intern": 9, "systemfilepath": 9, "config": 9, "ecoclimapsg": 9, "veg_typ": 9, "decad": 9, "36": 9, "var_typ": 9, "var_dict": 9, "initial_basetim": 9, "prefer_forecast": 9, "new": 9, "combin": 9, "surfexio": 9, "filenam": 9, "extens": 9, "surfexsurfio": 9, "surfexfil": 9, "csurf_filetyp": 9, "input_fil": 9, "symlink": 9, "archive_fil": 9, "surf": 9, "restart": 9, "pgdfile": 9, "cpgdfile": 9, "lfagmap": 9, "masterodb": 9, "prepfil": 9, "cprepfil": 9, "surffil": 9, "csurffil": 9, "surfexfilevari": 9, "validtim": 9, "patch": 9, "layer": 9, "basetim": 9, "interv": 9, "datatyp": 9, "float": 9, "tiletyp": 9, "full": 9, "asciisurfexfil": 9, "ascii": 9, "txt": 9, "ncsurfexfil": 9, "type": 9, "fasurfexfil": 9, "fa": 9, "surffiletypeextens": 9, "netcdfsurfexfil": 9, "seri": 9, "textesurfexfil": 9, "text": 9, "forcingfilenetcdf": 9, "fname": 9, "obsoul": 9, "observationdatasetfromobsoul": 9, "content": 9, "label": 9, "obnumb": 9, "obtyp": 9, "subtyp": 9, "neg_dt": 9, "pos_dt": 9, "observationdatasetfromobsoulfil": 9, "axi": 9, "netcdfreadvari": 9, "level": 9, "unit": 9, "member": 9, "netcdffilevari": 9, "file_handl": 9, "var_nam": 9, "netdf": 9, "configur": 9, "configurationfromharmoni": 9, "harmoni": 9, "up": 9, "correspond": 9, "sever": 9, "chang": 9, "configurationfromharmonieandconfigfil": 9, "conf_fil": 9, "initi": 9, "envrion": 9, "configurationfromtomlfil": 9, "readdata": 9, "convertedinput": 9, "convert": 9, "paramet": 9, "geometri": 9, "str": 9, "constantvalu": 9, "initial_tim": 9, "def": 9, "fileformat": 9, "main": 9, "interfac": 9, "field": 9, "done": 9, "through": 9, "default": 9, "plain": 9, "convers": 9, "surfexforc": 9, "surfexnetcdfforc": 9, "surfexoutputforc": 9, "base_tim": 9, "ntime": 9, "var_obj": 9, "time_step_interval": 9, "netcdfoutput": 9, "att_obj": 9, "att_tim": 9, "cach": 9, "time_step": 9, "fmt": 9, "asciioutput": 9, "surfexgeo": 9, "abc": 9, "_type_": 9, "_description_": 9, "confproj": 9, "from_json": 9, "lonlatv": 9, "cartesian": 9, "lonlatreg": 9, "ign": 9, "recreat": 9, "bufr": 9, "bufrobservationset": 9, "bufrfil": 9, "valid_dtg": 9, "valid_rang": 9, "lonrang": 9, "latrang": 9, "use_first": 9, "grib2vari": 9, "disciplin": 9, "pca": 9, "pnr": 9, "typ": 9, "lev": 9, "tsp": 9, "grib2": 9, "binary_input": 9, "inputdatatosurfexbinari": 9, "outputdatafromsurfexbinari": 9, "jsonoutputdata": 9, "jsonoutputdatafromfil": 9, "jsoninputdata": 9, "jsoninputdatafromfil": 9, "pgdinputdata": 9, "check_exist": 9, "prepinputdata": 9, "prep_pgdfil": 9, "offlineinputdata": 9, "inlineforecastinputdata": 9, "inlin": 9, "forecast": 9, "sodainputdata": 9, "perturbed_file_pattern": 9, "timeseri": 9, "stids_fil": 9, "timeseriesfromconvert": 9, "start": 9, "end": 9, "3600": 9, "geo_out": 9, "obsoper": 9, "ob": 9, "fichier": 9, "arpeg": 9, "observationset": 9, "netatmoobservationset": 9, "target_tim": 9, "dt": 9, "re": 9, "netatmo": 9, "metfrostobserv": 9, "station": 9, "num_tri": 9, "3": 9, "wmo": 9, "xprovid": 9, "norwai": 9, "jsonobservationset": 9, "observationfromtitanjsonfil": 9, "platform": 9, "match": 9, "possibli": 9, "dir": 9, "nest": 9, "systemfilepathsfromfil": 9, "batchjob": 9, "batch": 9, "job": 9, "surfexbinari": 9, "iofil": 9, "input_data": 9, "perturbedofflin": 9, "pert_numb": 9, "archive_data": 9, "print_namelist": 9, "negpert": 9, "pertub": 9, "basenamelist": 9, "program": 9, "input_path": 9, "forc_z": 9, "prep_pgdfiletyp": 9, "fcint": 9, "cmd_pars": 9, "loadfromfil": 9, "option_str": 9, "dest": 9, "narg": 9, "const": 9, "choic": 9, "help": 9, "metavar": 9, "__init__": 9, "construct": 9, "set_input": 9, "size": 9, "number": 9, "rais": 9, "notimplementederror": 9, "implement": 9, "child": 9, "mask": 9, "perform": 9, "option": 9, "static": 9, "set_flag": 9, "global_flag": 9, "global": 9, "return": 9, "minimum": 9, "maximum": 9, "runtimeerror": 9, "102": 9, "modulenotfounderror": 9, "wa": 9, "properli": 9, "posit": 9, "diff": 9, "108": 9, "min": 9, "max": 9, "151": 9, "epsilon": 9, "2": 9, "105": 9, "longitud": 9, "latitud": 9, "104": 9, "fail": 9, "datetim": 9, "103": 9, "__": 9, "115": 9, "dict": 9, "same": 9, "length": 9, "both": 9, "distanc": 9, "grid": 9, "border": 9, "199": 9, "101": 9, "get_stid_index": 9, "id": 9, "index": 9, "get_pos_index": 9, "found": 9, "els": 9, "perform_test": 9, "write_output": 9, "indent": 9, "normalize_ci": 9, "normal": 9, "cross": 9, "correl": 9, "corel": 9, "correalt": 9, "object": 9, "np": 9, "darrai": 9, "what": 9, "first_guess": 9, "allow": 9, "deviat": 9, "meter": 9, "get_departur": 9, "get_valu": 9, "equival": 9, "print_ob": 9, "print": 9, "vectors2ob": 9, "vector": 9, "obs2vector": 9, "my_ob": 9, "format_lon": 9, "format_lat": 9, "get_pos_from_stid": 9, "except": 9, "get_stid_from_stationlist": 9, "stationlist": 9, "map": 9, "structur": 9, "look": 9, "inut": 9, "bool": 9, "set_bin_fil": 9, "exist": 9, "parse_fnam": 9, "filepattern": 9, "pars": 9, "definit": 9, "prefer": 9, "instead": 9, "No": 9, "attribut": 9, "larger": 9, "than": 9, "frequenc": 9, "get_filenam": 9, "previoustim": 9, "valid": 9, "previou": 9, "get_filehandl": 9, "handler": 9, "filehandl": 9, "tupl": 9, "read_var_point": 9, "accumul": 9, "arrai": 9, "set_var": 9, "instant": 9, "read_vari": 9, "print_variable_info": 9, "deaccumul": 9, "previous_field": 9, "get_basetim": 9, "allow_different_basetim": 9, "rotate_geographic_wind": 9, "rotat": 9, "wind": 9, "nearest": 9, "interpolate_field": 9, "target": 9, "symlink_input": 9, "copy_input": 9, "archive_output_fil": 9, "archiv": 9, "print_var": 9, "inform": 9, "get_geo": 9, "filenotfounderror": 9, "read_par": 9, "read_til": 9, "tile": 9, "could": 9, "mismatch": 9, "2d": 9, "valueerror": 9, "dimens": 9, "doe": 9, "line": 9, "read_field": 9, "realiz": 9, "datetime_util": 9, "as_datetim": 9, "surfx": 9, "axis_typ": 9, "dim_nam": 9, "1d": 9, "ensembl": 9, "is_level": 9, "aci": 9, "encapsul": 9, "dictionari": 9, "determinist": 9, "individu": 9, "actual": 9, "psyurfex": 9, "dump_json": 9, "update_set": 9, "sep": 9, "constuct": 9, "soil_textur": 9, "read_time_step": 9, "print_info": 9, "step": 9, "info": 9, "keyerror": 9, "create_vari": 9, "mslp": 9, "altitud": 9, "temp": 9, "calcaul": 9, "ndarrai": 9, "mean": 9, "sea": 9, "pressur": 9, "temperatur": 9, "geometry_": 9, "climatolog": 9, "month": 9, "_check_san": 9, "write_forc": 9, "this_tim": 9, "write": 9, "_define_forc": 9, "final": 9, "close": 9, "identifi": 9, "is_ident": 9, "geo_to_check": 9, "ident": 9, "write_proj_info": 9, "noth": 9, "now": 9, "string": 9, "update_namelist": 9, "nml": 9, "subset": 9, "find": 9, "keys1": 9, "keys2": 9, "keys3": 9, "keys4": 9, "descript": 9, "kei": 9, "zerodivisionerror": 9, "nlon": 9, "nlat": 9, "get_coord": 9, "pin": 9, "pdin": 9, "coord": 9, "coordin": 9, "ign_mask": 9, "pxall": 9, "pyall": 9, "xxx": 9, "yyi": 9, "td2rh": 9, "t_d": 9, "kelvin": 9, "dew": 9, "probabl": 9, "rel": 9, "humid": 9, "percent": 9, "inside_window": 9, "obs_dtg": 9, "window": 9, "as_timedelta": 9, "gribvar": 9, "gribvariable1": 9, "avail": 9, "read_geo_info": 9, "gid": 9, "read_field_in_messag": 9, "parametercatergori": 9, "parameternumb": 9, "leveltyp": 9, "typeofstatisticalprocess": 9, "is_accumul": 9, "print_kei": 9, "generate_grib_id": 9, "prepare_input": 9, "add_data": 9, "add": 9, "pd": 9, "filetyp": 9, "set_input_observ": 9, "obsset": 9, "set_input_sea_assimil": 9, "assimil": 9, "sea_set": 9, "set_input_vertical_soil_oi": 9, "oi": 9, "soil": 9, "oi_set": 9, "write_json": 9, "intrpol": 9, "specifi": 9, "field2d": 9, "undefin": 9, "two": 9, "dimension": 9, "ouput": 9, "try": 9, "interpolated_field": 9, "rotate_wind_to_geograph": 9, "Not": 9, "lon1": 9, "lat1": 9, "lon2": 9, "lat2": 9, "comput": 9, "great": 9, "circl": 9, "haversin": 9, "formula": 9, "cval": 9, "alpha_grid_rot": 9, "calcul": 9, "alpha": 9, "get_obs_valu": 9, "is_in_grid": 9, "epygram": 9, "interpoalt": 9, "get_ob": 9, "matching_ob": 9, "write_json_fil": 9, "substitute_str": 9, "system_vari": 9, "subst": 9, "arbitrari": 9, "cmd": 9, "calledprocesserror": 9, "task": 9, "fortran": 9, "word": 9, "archive_output": 9, "prolog": 9, "check_pars": 9, "set_pgd_namelist": 9, "set_offline_namelist": 9, "nnco": 9, "cobs_m": 9, "set_soda_namelist": 9, "xerrobs_m": 9, "when": 9, "snow": 9, "nncv": 9, "cvar_m": 9, "xsigma_m": 9, "xtprt_m": 9, "epilog": 9, "overrid": 9, "overid": 9, "set_direct_data_namelist": 9, "lnamelist_sect": 9, "ldtype": 9, "ldname": 9, "linput_path": 9, "capitalize_namelist_dict": 9, "dict_in": 9, "capit": 9, "lower_case_namelist_dict": 9, "lower": 9, "case": 9, "merge_namelist_dict": 9, "old_dict": 9, "new_dict": 9, "old": 9, "ascii2nml": 9, "ascii_file2nml": 9, "input_fnam": 9, "input_fmt": 9, "wih": 9, "filnam": 9, "nml2ascii": 9, "output_fil": 9, "output_fmt": 9, "yaml": 9, "merge_json_namelist_fil": 9, "my_fil": 9, "existist": 9, "get_namelist": 9, "merged_dict": 9, "ok": 9, "prepare_offline_perturb": 9, "set_ob": 9, "sub": 9, "nam_block": 9, "vtype": 9, "veg": 9, "delet": 9, "get_filetype_from_suffix": 9, "suffix": 9, "__call__": 9, "parser": 9, "namespac": 9, "define_quality_control": 9, "test_list": 9, "needd": 9, "fg": 9, "fraction_geo": 9, "fg_geo": 9, "merge_json_qc_data_set": 9, "qc_flag": 9, "skip_flag": 9, "skip": 9, "guess_file_format": 9, "ftype": 9, "known": 9, "wish": 9, "auto": 9, "decid": 9, "read_first_guess_netcdf_fil": 9, "background": 9, "glaf": 9, "gelev": 9, "oi2soda": 9, "t2m": 9, "rh2m": 9, "s_d": 9, "s_m": 9, "humidii": 9, "depth": 9, "moistur": 9, "least": 9, "read_cryoclim_nc": 9, "infil": 9, "crycoclim": 9, "were": 9, "grid_lon": 9, "grid_lat": 9, "grid_snow_class": 9, "read_sentinel_nc": 9, "sentinel": 9, "write_formatted_arrai": 9, "column": 9, "run_time_loop": 9, "loop": 9, "set_forcing_config": 9, "modify_forc": 9, "input_method": 9, "get_datasourc": 9, "obs_tim": 9, "unknown": 9, "obsmon": 9, "open_db": 9, "dbname": 9, "databas": 9, "sqlite": 9, "sqlite3": 9, "close_db": 9, "conn": 9, "create_db": 9, "stat_col": 9, "populate_usage_db": 9, "popul": 9, "rmse": 9, "predict": 9, "squar": 9, "error": 9, "bia": 9, "absbia": 9, "absolut": 9, "calculate_statist": 9, "statist": 9, "populate_obsmon_db": 9, "write_obsmon_sqlite_fil": 9, "get_geo_object": 9, "set_domain": 9, "hm_mode": 9, "should": 9, "shape2ign": 9, "catchment": 9, "ref_proj": 9, "shape": 9, "get_geo_and_config_from_cmd": 9, "run_first_guess_for_oi": 9, "run_masterodb": 9, "run_create_namelist": 9, "run_gridpp": 9, "run_titan": 9, "run_oi2soda": 9, "run_hm2pysurfex": 9, "run_plot_point": 9, "set_geo_from_stationlist": 9, "sentinel_ob": 9, "qc2obsmon": 9, "perturbed_offlin": 9, "cli_oi2soda": 9, "cli_modify_forc": 9, "cli_merge_qc_data": 9, "hm2pysurfex": 9, "first_guess_for_oi": 9, "cryoclim_pseudoob": 9, "create_namelist": 9, "create_lsm_file_assim": 9, "bufr2json": 9, "obs2json": 9, "cli_set_domain": 9, "cli_set_geo_from_obs_set": 9, "cli_set_geo_from_stationlist": 9, "cli_shape2ign": 9, "as_datetime_str": 9, "second": 9, "timedelta": 9, "fromtimestamp": 9, "timestamp": 9, "utcfromtimestamp": 9, "epochtim": 9, "isdatetim": 9, "obj": 9, "as_datetime_arg": 9, "year": 9, "dai": 9, "hour": 9, "minut": 9, "arg": 9, "fill_field": 9, "field_tmp": 9, "radiu": 9, "fill": 9, "grid2point": 9, "elev_gradi": 9, "gradient": 9, "downscal": 9, "inside_grid": 9, "p_lon": 9, "p_lat": 9, "2500": 9, "neighbour": 9, "boolean": 9, "util": 9, "merge_toml_env": 9, "old_env": 9, "mod": 9, "merge_toml_env_from_fil": 9, "toml_fil": 9, "deep_upd": 9, "place": 9, "delta": 9, "remove_existing_fil": 9, "f_in": 9, "f_out": 9, "remov": 9, "isadirectoryerror": 9, "parse_filepattern": 9, "file_pattern": 9, "pattern": 9, "create_working_dir": 9, "workdir": 9, "enter": 9, "clean_working_dir": 9, "clean": 9, "parse_args_create_forc": 9, "parse_args_modify_forc": 9, "parse_args_qc2obsmon": 9, "parse_args_dump_environ": 9, "dum": 9, "parse_args_first_guess_for_oi": 9, "firstguess4oi": 9, "parse_args_masterodb": 9, "parse_args_create_namelist": 9, "parse_args_gridpp": 9, "parse_args_titan": 9, "parse_args_oi2soda": 9, "parse_args_lsm_file_assim": 9, "land": 9, "parse_args_hm2pysurfex": 9, "parse_args_bufr2json": 9, "parse_args_obs2json": 9, "parse_args_plot_point": 9, "parse_args_set_geo_from_obs_set": 9, "parse_args_set_geo_from_stationlist": 9, "parse_args_merge_qc_data": 9, "parse_timeseries2json": 9, "parse_cryoclim_pseudoob": 9, "cryoclim": 9, "pseudo": 9, "parse_sentinel_ob": 9, "parse_args_shape2ign": 9, "fiel": 9, "parse_set_domain": 9, "ref": 9, "readm": 9, "search": 9, "page": 9}, "objects": {"pysurfex.binary_input": [[9, 0, 1, "", "InlineForecastInputData"], [9, 0, 1, "", "InputDataToSurfexBinaries"], [9, 0, 1, "", "JsonInputData"], [9, 0, 1, "", "JsonInputDataFromFile"], [9, 0, 1, "", "JsonOutputData"], [9, 0, 1, "", "JsonOutputDataFromFile"], [9, 0, 1, "", "OfflineInputData"], [9, 0, 1, "", "OutputDataFromSurfexBinaries"], [9, 0, 1, "", "PgdInputData"], [9, 0, 1, "", "PrepInputData"], [9, 0, 1, "", "SodaInputData"]], "pysurfex.binary_input.InlineForecastInputData": [[9, 1, 1, "", "__init__"]], "pysurfex.binary_input.InputDataToSurfexBinaries": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputData": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "add_data"], [9, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputDataFromFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonOutputData": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "archive_files"]], "pysurfex.binary_input.JsonOutputDataFromFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "archive_files"]], "pysurfex.binary_input.OfflineInputData": [[9, 1, 1, "", "__init__"]], "pysurfex.binary_input.OutputDataFromSurfexBinaries": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "archive_files"]], "pysurfex.binary_input.PgdInputData": [[9, 1, 1, "", "__init__"]], "pysurfex.binary_input.SodaInputData": [[9, 1, 1, "", "set_input_observations"], [9, 1, 1, "", "set_input_sea_assimilation"], [9, 1, 1, "", "set_input_vertical_soil_oi"]], "pysurfex.bufr": [[9, 0, 1, "", "BufrObservationSet"]], "pysurfex.bufr.BufrObservationSet": [[9, 1, 1, "", "inside_window"], [9, 1, 1, "", "td2rh"]], "pysurfex.cli": [[9, 2, 1, "", "bufr2json"], [9, 2, 1, "", "cli_merge_qc_data"], [9, 2, 1, "", "cli_modify_forcing"], [9, 2, 1, "", "cli_oi2soda"], [9, 2, 1, "", "cli_set_domain"], [9, 2, 1, "", "cli_set_geo_from_obs_set"], [9, 2, 1, "", "cli_set_geo_from_stationlist"], [9, 2, 1, "", "cli_shape2ign"], [9, 2, 1, "", "create_forcing"], [9, 2, 1, "", "create_lsm_file_assim"], [9, 2, 1, "", "create_namelist"], [9, 2, 1, "", "cryoclim_pseudoobs"], [9, 2, 1, "", "dump_environ"], [9, 2, 1, "", "first_guess_for_oi"], [9, 2, 1, "", "get_geo_and_config_from_cmd"], [9, 2, 1, "", "gridpp"], [9, 2, 1, "", "hm2pysurfex"], [9, 2, 1, "", "masterodb"], [9, 2, 1, "", "obs2json"], [9, 2, 1, "", "offline"], [9, 2, 1, "", "perturbed_offline"], [9, 2, 1, "", "pgd"], [9, 2, 1, "", "plot_points"], [9, 2, 1, "", "prep"], [9, 2, 1, "", "qc2obsmon"], [9, 2, 1, "", "run_create_namelist"], [9, 2, 1, "", "run_first_guess_for_oi"], [9, 2, 1, "", "run_gridpp"], [9, 2, 1, "", "run_hm2pysurfex"], [9, 2, 1, "", "run_masterodb"], [9, 2, 1, "", "run_oi2soda"], [9, 2, 1, "", "run_plot_points"], [9, 2, 1, "", "run_surfex_binary"], [9, 2, 1, "", "run_titan"], [9, 2, 1, "", "sentinel_obs"], [9, 2, 1, "", "set_geo_from_stationlist"], [9, 2, 1, "", "soda"], [9, 2, 1, "", "titan"]], "pysurfex.cmd_parsing": [[9, 0, 1, "", "LoadFromFile"], [9, 2, 1, "", "parse_args_bufr2json"], [9, 2, 1, "", "parse_args_create_forcing"], [9, 2, 1, "", "parse_args_create_namelist"], [9, 2, 1, "", "parse_args_dump_environ"], [9, 2, 1, "", "parse_args_first_guess_for_oi"], [9, 2, 1, "", "parse_args_gridpp"], [9, 2, 1, "", "parse_args_hm2pysurfex"], [9, 2, 1, "", "parse_args_lsm_file_assim"], [9, 2, 1, "", "parse_args_masterodb"], [9, 2, 1, "", "parse_args_merge_qc_data"], [9, 2, 1, "", "parse_args_modify_forcing"], [9, 2, 1, "", "parse_args_obs2json"], [9, 2, 1, "", "parse_args_oi2soda"], [9, 2, 1, "", "parse_args_plot_points"], [9, 2, 1, "", "parse_args_qc2obsmon"], [9, 2, 1, "", "parse_args_set_geo_from_obs_set"], [9, 2, 1, "", "parse_args_set_geo_from_stationlist"], [9, 2, 1, "", "parse_args_shape2ign"], [9, 2, 1, "", "parse_args_surfex_binary"], [9, 2, 1, "", "parse_args_titan"], [9, 2, 1, "", "parse_cryoclim_pseudoobs"], [9, 2, 1, "", "parse_sentinel_obs"], [9, 2, 1, "", "parse_set_domain"], [9, 2, 1, "", "parse_timeseries2json"]], "pysurfex.cmd_parsing.LoadFromFile": [[9, 1, 1, "", "__call__"]], "pysurfex.configuration": [[9, 0, 1, "", "Configuration"], [9, 0, 1, "", "ConfigurationFromHarmonie"], [9, 0, 1, "", "ConfigurationFromHarmonieAndConfigFile"], [9, 0, 1, "", "ConfigurationFromTomlFile"]], "pysurfex.configuration.Configuration": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "dump_json"], [9, 1, 1, "", "update_setting"]], "pysurfex.configuration.ConfigurationFromHarmonie": [[9, 1, 1, "", "__init__"]], "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile": [[9, 1, 1, "", "__init__"]], "pysurfex.configuration.ConfigurationFromTomlFile": [[9, 1, 1, "", "__init__"]], "pysurfex.datetime_utils": [[9, 2, 1, "", "as_datetime"], [9, 2, 1, "", "as_datetime_args"], [9, 2, 1, "", "as_datetime_string"], [9, 2, 1, "", "as_timedelta"], [9, 2, 1, "", "fromtimestamp"], [9, 2, 1, "", "isdatetime"], [9, 2, 1, "", "utcfromtimestamp"]], "pysurfex.ecoclimap": [[9, 0, 1, "", "Ecoclimap"], [9, 0, 1, "", "EcoclimapSG"], [9, 0, 1, "", "ExternalSurfexInputFile"]], "pysurfex.ecoclimap.Ecoclimap": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_bin_files"], [9, 1, 1, "", "set_input"]], "pysurfex.ecoclimap.EcoclimapSG": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "parse_fnames"], [9, 1, 1, "", "set_bin_files"], [9, 1, 1, "", "set_input"]], "pysurfex.ecoclimap.ExternalSurfexInputFile": [[9, 1, 1, "", "__init__"]], "pysurfex.fa": [[9, 0, 1, "", "Fa"]], "pysurfex.fa.Fa": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"]], "pysurfex.file": [[9, 0, 1, "", "AsciiSurfexFile"], [9, 0, 1, "", "FaSurfexFile"], [9, 0, 1, "", "ForcingFileNetCDF"], [9, 0, 1, "", "NCSurfexFile"], [9, 0, 1, "", "NetCDFSurfexFile"], [9, 0, 1, "", "PGDFile"], [9, 0, 1, "", "PREPFile"], [9, 0, 1, "", "SURFFile"], [9, 0, 1, "", "SurfFileTypeExtension"], [9, 0, 1, "", "SurfexFileVariable"], [9, 0, 1, "", "SurfexIO"], [9, 0, 1, "", "SurfexSurfIO"], [9, 0, 1, "", "TexteSurfexFile"], [9, 2, 1, "", "guess_file_format"]], "pysurfex.file.AsciiSurfexFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "get_geo"], [9, 1, 1, "", "points"], [9, 1, 1, "", "read"]], "pysurfex.file.FaSurfexFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"]], "pysurfex.file.ForcingFileNetCDF": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"], [9, 1, 1, "", "read_field"]], "pysurfex.file.NCSurfexFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "get_geo"], [9, 1, 1, "", "points"]], "pysurfex.file.NetCDFSurfexFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"], [9, 1, 1, "", "read"]], "pysurfex.file.SurfFileTypeExtension": [[9, 1, 1, "", "__init__"]], "pysurfex.file.SurfexFileVariable": [[9, 1, 1, "", "print_var"]], "pysurfex.file.SurfexIO": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "interpolate_field"], [9, 1, 1, "", "points"]], "pysurfex.file.SurfexSurfIO": [[9, 1, 1, "", "archive_output_file"], [9, 1, 1, "", "copy_input"], [9, 1, 1, "", "symlink_input"]], "pysurfex.file.TexteSurfexFile": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"], [9, 1, 1, "", "read"]], "pysurfex.forcing": [[9, 0, 1, "", "AsciiOutput"], [9, 0, 1, "", "NetCDFOutput"], [9, 0, 1, "", "SurfexForcing"], [9, 0, 1, "", "SurfexNetCDFForcing"], [9, 0, 1, "", "SurfexOutputForcing"], [9, 2, 1, "", "modify_forcing"], [9, 2, 1, "", "run_time_loop"], [9, 2, 1, "", "set_forcing_config"], [9, 2, 1, "", "write_formatted_array"]], "pysurfex.forcing.AsciiOutput": [[9, 1, 1, "", "_define_forcing"], [9, 1, 1, "", "finalize"], [9, 1, 1, "", "write_forcing"]], "pysurfex.forcing.NetCDFOutput": [[9, 1, 1, "", "_define_forcing"], [9, 1, 1, "", "finalize"], [9, 1, 1, "", "write_forcing"]], "pysurfex.forcing.SurfexForcing": [[9, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexNetCDFForcing": [[9, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexOutputForcing": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "_check_sanity"], [9, 1, 1, "", "write_forcing"]], "pysurfex.geo": [[9, 0, 1, "", "Cartesian"], [9, 0, 1, "", "ConfProj"], [9, 0, 1, "", "Geo"], [9, 0, 1, "", "IGN"], [9, 0, 1, "", "LonLatReg"], [9, 0, 1, "", "LonLatVal"], [9, 0, 1, "", "SurfexGeo"], [9, 2, 1, "", "get_geo_object"], [9, 2, 1, "", "set_domain"], [9, 2, 1, "", "shape2ign"]], "pysurfex.geo.Cartesian": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.geo.ConfProj": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.geo.Geo": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "identifier"], [9, 1, 1, "", "is_identical"], [9, 1, 1, "", "write_proj_info"]], "pysurfex.geo.IGN": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_coord"], [9, 1, 1, "", "ign_mask"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatReg": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatVal": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.geo.SurfexGeo": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "subset"], [9, 1, 1, "", "update_namelist"]], "pysurfex.grib": [[9, 0, 1, "", "Grib"], [9, 0, 1, "", "Grib2Variable"]], "pysurfex.grib.Grib": [[9, 1, 1, "id0", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"], [9, 1, 1, "", "read_field_in_message"], [9, 1, 1, "", "read_geo_info"]], "pysurfex.grib.Grib2Variable": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "generate_grib_id"], [9, 1, 1, "", "is_accumulated"], [9, 1, 1, "", "matches"], [9, 1, 1, "", "print_keys"]], "pysurfex.input_methods": [[9, 2, 1, "", "get_datasources"]], "pysurfex.interpolation": [[9, 0, 1, "", "Interpolation"], [9, 0, 1, "", "ObsOperator"], [9, 2, 1, "", "fill_field"], [9, 2, 1, "", "grid2points"], [9, 2, 1, "", "inside_grid"]], "pysurfex.interpolation.Interpolation": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "alpha_grid_rot"], [9, 1, 1, "", "distance"], [9, 1, 1, "", "interpolate"], [9, 1, 1, "", "rotate_wind_to_geographic"]], "pysurfex.interpolation.ObsOperator": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_obs_value"], [9, 1, 1, "", "is_in_grid"]], "pysurfex.namelist": [[9, 0, 1, "", "BaseNamelist"], [9, 0, 1, "", "Namelist"]], "pysurfex.namelist.BaseNamelist": [[9, 1, 1, "", "ascii2nml"], [9, 1, 1, "", "ascii_file2nml"], [9, 1, 1, "", "capitalize_namelist_dict"], [9, 1, 1, "", "epilog"], [9, 1, 1, "", "get_namelist"], [9, 1, 1, "", "lower_case_namelist_dict"], [9, 1, 1, "", "merge_json_namelist_file"], [9, 1, 1, "", "merge_namelist_dicts"], [9, 1, 1, "", "nml2ascii"], [9, 1, 1, "", "override"], [9, 1, 1, "", "prolog"], [9, 1, 1, "", "set_direct_data_namelist"], [9, 1, 1, "", "set_offline_namelist"], [9, 1, 1, "", "set_pgd_namelist"], [9, 1, 1, "", "set_soda_namelist"]], "pysurfex.namelist.Namelist": [[9, 1, 1, "", "ascii2nml"], [9, 1, 1, "", "ascii_file2nml"], [9, 1, 1, "", "capitalize_namelist_dict"], [9, 1, 1, "", "delete"], [9, 1, 1, "", "epilog"], [9, 1, 1, "", "get_filetype_from_suffix"], [9, 1, 1, "", "get_namelist"], [9, 1, 1, "", "lower_case_namelist_dict"], [9, 1, 1, "", "merge_json_namelist_file"], [9, 1, 1, "", "merge_namelist_dicts"], [9, 1, 1, "", "nml2ascii"], [9, 1, 1, "", "override"], [9, 1, 1, "", "prepare_offline_perturbation"], [9, 1, 1, "", "prolog"], [9, 1, 1, "", "set_direct_data_namelist"], [9, 1, 1, "", "set_obs"], [9, 1, 1, "", "set_offline_namelist"], [9, 1, 1, "", "set_pgd_namelist"], [9, 1, 1, "", "set_soda_namelist"], [9, 1, 1, "", "sub"]], "pysurfex.netcdf": [[9, 0, 1, "", "Axis"], [9, 0, 1, "", "NetCDFFileVariable"], [9, 0, 1, "", "NetCDFReadVariable"], [9, 0, 1, "", "Netcdf"], [9, 2, 1, "", "oi2soda"], [9, 2, 1, "", "read_cryoclim_nc"], [9, 2, 1, "", "read_first_guess_netcdf_file"], [9, 2, 1, "", "read_sentinel_nc"]], "pysurfex.netcdf.NetCDFFileVariable": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "axis_types"], [9, 1, 1, "", "datetimes"], [9, 1, 1, "", "dim_names"], [9, 1, 1, "", "is_level"], [9, 1, 1, "", "lats"], [9, 1, 1, "", "levels"], [9, 1, 1, "", "lons"], [9, 1, 1, "", "members"], [9, 1, 1, "", "times"], [9, 1, 1, "", "units"]], "pysurfex.netcdf.NetCDFReadVariable": [[9, 1, 1, "", "__init__"]], "pysurfex.netcdf.Netcdf": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "field"], [9, 1, 1, "", "points"]], "pysurfex.obs": [[9, 0, 1, "", "JsonObservationSet"], [9, 0, 1, "", "MetFrostObservations"], [9, 0, 1, "", "NetatmoObservationSet"], [9, 0, 1, "", "ObservationFromTitanJsonFile"], [9, 0, 1, "", "ObservationSet"]], "pysurfex.obs.JsonObservationSet": [[9, 1, 1, "", "__init__"]], "pysurfex.obs.ObservationFromTitanJsonFile": [[9, 1, 1, "", "__init__"]], "pysurfex.obs.ObservationSet": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_obs"], [9, 1, 1, "", "get_pos_index"], [9, 1, 1, "", "get_stid_index"], [9, 1, 1, "", "matching_obs"], [9, 1, 1, "", "points"], [9, 1, 1, "", "write_json_file"]], "pysurfex.observation": [[9, 0, 1, "", "Observation"]], "pysurfex.observation.Observation": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "format_lat"], [9, 1, 1, "", "format_lon"], [9, 1, 1, "", "get_pos_from_stid"], [9, 1, 1, "", "get_stid_from_stationlist"], [9, 1, 1, "", "obs2vectors"], [9, 1, 1, "", "print_obs"], [9, 1, 1, "", "vectors2obs"]], "pysurfex.obsmon": [[9, 2, 1, "", "absbias"], [9, 2, 1, "", "bias"], [9, 2, 1, "", "calculate_statistics"], [9, 2, 1, "", "close_db"], [9, 2, 1, "", "create_db"], [9, 2, 1, "", "mean"], [9, 2, 1, "", "open_db"], [9, 2, 1, "", "populate_obsmon_db"], [9, 2, 1, "", "populate_usage_db"], [9, 2, 1, "", "rmse"], [9, 2, 1, "", "write_obsmon_sqlite_file"]], "pysurfex.obsoul": [[9, 0, 1, "", "ObservationDataSetFromObsoul"], [9, 0, 1, "", "ObservationDataSetFromObsoulFile"]], "pysurfex.platform": [[9, 0, 1, "", "SystemFilePaths"], [9, 0, 1, "", "SystemFilePathsFromFile"]], "pysurfex.platform.SystemFilePaths": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "substitute_string"]], "pysurfex.platform.SystemFilePathsFromFile": [[9, 1, 1, "", "__init__"]], "pysurfex.read": [[9, 0, 1, "", "ConstantValue"], [9, 0, 1, "", "ConvertedInput"], [9, 0, 1, "", "Converter"], [9, 0, 1, "", "ReadData"]], "pysurfex.read.ConstantValue": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "print_info"], [9, 1, 1, "", "read_time_step"]], "pysurfex.read.ConvertedInput": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "print_info"], [9, 1, 1, "", "read_time_step"]], "pysurfex.read.Converter": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "create_variable"], [9, 1, 1, "", "mslp2ps"], [9, 1, 1, "", "print_info"], [9, 1, 1, "", "read_time_step"]], "pysurfex.read.ReadData": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "print_info"], [9, 1, 1, "", "read_time_step"]], "pysurfex.run": [[9, 0, 1, "", "BatchJob"], [9, 0, 1, "", "Masterodb"], [9, 0, 1, "", "PerturbedOffline"], [9, 0, 1, "", "SURFEXBinary"], [9, 2, 1, "", "clean_working_dir"], [9, 2, 1, "", "create_working_dir"]], "pysurfex.run.BatchJob": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "run"]], "pysurfex.run.Masterodb": [[9, 1, 1, "", "archive_output"]], "pysurfex.run.SURFEXBinary": [[9, 1, 1, "", "__init__"]], "pysurfex.timeseries": [[9, 0, 1, "", "TimeSeries"], [9, 0, 1, "", "TimeSeriesFromConverter"]], "pysurfex.timeseries.TimeSeries": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "write_json"]], "pysurfex.titan": [[9, 0, 1, "", "Blacklist"], [9, 0, 1, "", "Buddy"], [9, 0, 1, "", "Climatology"], [9, 0, 1, "", "Departure"], [9, 0, 1, "", "DomainCheck"], [9, 0, 1, "", "FirstGuess"], [9, 0, 1, "", "Fraction"], [9, 0, 1, "", "NoMeta"], [9, 0, 1, "", "Plausibility"], [9, 0, 1, "", "QCDataSet"], [9, 0, 1, "", "QualityControl"], [9, 0, 1, "", "Redundancy"], [9, 0, 1, "", "Sct"], [9, 0, 1, "", "TitanDataSet"], [9, 2, 1, "", "define_quality_control"], [9, 2, 1, "", "merge_json_qc_data_sets"]], "pysurfex.titan.Blacklist": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Buddy": [[9, 1, 1, "", "test"]], "pysurfex.titan.Climatology": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Departure": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_departure"], [9, 1, 1, "", "get_values"]], "pysurfex.titan.DomainCheck": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.FirstGuess": [[9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Fraction": [[9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.NoMeta": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Plausibility": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.QCDataSet": [[9, 1, 1, "", "get_pos_index"], [9, 1, 1, "", "get_stid_index"], [9, 1, 1, "", "normalize_ci"], [9, 1, 1, "", "perform_tests"], [9, 1, 1, "", "write_output"]], "pysurfex.titan.QualityControl": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_flags"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Redundancy": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.Sct": [[9, 1, 1, "", "set_input"], [9, 1, 1, "", "test"]], "pysurfex.titan.TitanDataSet": [[9, 1, 1, "", "perform_tests"]], "pysurfex.util": [[9, 2, 1, "", "deep_update"], [9, 2, 1, "", "merge_toml_env"], [9, 2, 1, "", "merge_toml_env_from_files"], [9, 2, 1, "", "parse_filepattern"], [9, 2, 1, "", "remove_existing_file"]], "pysurfex.variable": [[9, 0, 1, "", "Variable"]], "pysurfex.variable.Variable": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "deaccumulate"], [9, 1, 1, "", "get_basetime"], [9, 1, 1, "", "get_filehandler"], [9, 1, 1, "", "get_filename"], [9, 1, 1, "", "print_variable_info"], [9, 1, 1, "", "read_var_points"], [9, 1, 1, "", "read_variable"], [9, 1, 1, "", "rotate_geographic_wind"], [9, 1, 1, "", "set_var"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"The": 2, "mit": 2, "licens": 2, "author": 3, "python": [7, 9], "api": [7, 9], "surfex": [7, 8, 9], "pysurfex": [7, 9], "instal": [7, 9], "pregener": [7, 9], "packag": [7, 9], "from": [7, 8, 9], "pypi": [7, 9], "pip": [7, 9], "run": [7, 8, 9], "pre": [7, 9], "built": [7, 9], "contain": [7, 9], "debian": [7, 9], "base": [7, 9], "linux": [7, 9], "system": [7, 9], "gener": [7, 9], "depend": [7, 9], "client": [7, 9], "applic": [7, 9], "exampl": [7, 8, 9], "creat": [8, 9], "forc": [8, 9], "met": [8, 9], "nordic": [8, 9], "analysi": [8, 9], "binari": [8, 9], "plot": [8, 9], "mep": [8, 9], "data": [8, 9], "thredd": [8, 9], "document": 9, "class": 9, "method": 9, "indic": 9, "tabl": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"The MIT License (MIT)": [[2, "the-mit-license-mit"]], "Authors": [[3, "authors"]], "Python API to SURFEX (pysurfex)": [[7, "python-api-to-surfex-pysurfex"], [9, "python-api-to-surfex-pysurfex"]], "Installation of pregenerated packages from pypi (pip)": [[7, "installation-of-pregenerated-packages-from-pypi-pip"], [9, "installation-of-pregenerated-packages-from-pypi-pip"]], "Run pysurfex from pre-built container": [[7, "run-pysurfex-from-pre-built-container"], [9, "run-pysurfex-from-pre-built-container"]], "Installation on debian based Linux system": [[7, "installation-on-debian-based-linux-system"], [9, "installation-on-debian-based-linux-system"]], "General dependencies (from pypi)": [[7, "general-dependencies-from-pypi"], [9, "general-dependencies-from-pypi"]], "Install pysurfex": [[7, "install-pysurfex"], [9, "install-pysurfex"]], "Run pysurfex client applications": [[7, "run-pysurfex-client-applications"], [7, "id1"], [9, "run-pysurfex-client-applications"], [9, "id1"]], "Examples": [[7, "examples"], [8, "examples"], [9, "examples"], [9, "id2"]], "Create forcing from MET-Nordic analysis": [[8, "create-forcing-from-met-nordic-analysis"], [9, "create-forcing-from-met-nordic-analysis"]], "Run SURFEX binaries": [[8, "run-surfex-binaries"], [9, "run-surfex-binaries"]], "Plot MEPS data from thredds": [[8, "plot-meps-data-from-thredds"], [9, "plot-meps-data-from-thredds"]], "PYSURFEX documentation": [[9, "pysurfex-documentation"]], "Classes": [[9, "classes"]], "Class methods": [[9, "class-methods"]], "Methods": [[9, "methods"]], "Indices and tables": [[9, "indices-and-tables"]]}, "indexentries": {"asciioutput (class in pysurfex.forcing)": [[9, "pysurfex.forcing.AsciiOutput"]], "asciisurfexfile (class in pysurfex.file)": [[9, "pysurfex.file.AsciiSurfexFile"]], "axis (class in pysurfex.netcdf)": [[9, "pysurfex.netcdf.Axis"]], "basenamelist (class in pysurfex.namelist)": [[9, "pysurfex.namelist.BaseNamelist"]], "batchjob (class in pysurfex.run)": [[9, "pysurfex.run.BatchJob"]], "blacklist (class in pysurfex.titan)": [[9, "pysurfex.titan.Blacklist"]], "buddy (class in pysurfex.titan)": [[9, "pysurfex.titan.Buddy"]], "bufrobservationset (class in pysurfex.bufr)": [[9, "pysurfex.bufr.BufrObservationSet"]], "cartesian (class in pysurfex.geo)": [[9, "pysurfex.geo.Cartesian"]], "climatology (class in pysurfex.titan)": [[9, "pysurfex.titan.Climatology"]], "confproj (class in pysurfex.geo)": [[9, "pysurfex.geo.ConfProj"]], "configuration (class in pysurfex.configuration)": [[9, "pysurfex.configuration.Configuration"]], "configurationfromharmonie (class in pysurfex.configuration)": [[9, "pysurfex.configuration.ConfigurationFromHarmonie"]], "configurationfromharmonieandconfigfile (class in pysurfex.configuration)": [[9, "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile"]], "configurationfromtomlfile (class in pysurfex.configuration)": [[9, "pysurfex.configuration.ConfigurationFromTomlFile"]], "constantvalue (class in pysurfex.read)": [[9, "pysurfex.read.ConstantValue"]], "convertedinput (class in pysurfex.read)": [[9, "pysurfex.read.ConvertedInput"]], "converter (class in pysurfex.read)": [[9, "pysurfex.read.Converter"]], "departure (class in pysurfex.titan)": [[9, "pysurfex.titan.Departure"]], "domaincheck (class in pysurfex.titan)": [[9, "pysurfex.titan.DomainCheck"]], "ecoclimap (class in pysurfex.ecoclimap)": [[9, "pysurfex.ecoclimap.Ecoclimap"]], "ecoclimapsg (class in pysurfex.ecoclimap)": [[9, "pysurfex.ecoclimap.EcoclimapSG"]], "externalsurfexinputfile (class in pysurfex.ecoclimap)": [[9, "pysurfex.ecoclimap.ExternalSurfexInputFile"]], "fa (class in pysurfex.fa)": [[9, "pysurfex.fa.Fa"]], "fasurfexfile (class in pysurfex.file)": [[9, "pysurfex.file.FaSurfexFile"]], "firstguess (class in pysurfex.titan)": [[9, "pysurfex.titan.FirstGuess"]], "forcingfilenetcdf (class in pysurfex.file)": [[9, "pysurfex.file.ForcingFileNetCDF"]], "fraction (class in pysurfex.titan)": [[9, "pysurfex.titan.Fraction"]], "geo (class in pysurfex.geo)": [[9, "pysurfex.geo.Geo"]], "grib (class in pysurfex.grib)": [[9, "pysurfex.grib.Grib"]], "grib2variable (class in pysurfex.grib)": [[9, "pysurfex.grib.Grib2Variable"]], "ign (class in pysurfex.geo)": [[9, "pysurfex.geo.IGN"]], "inlineforecastinputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.InlineForecastInputData"]], "inputdatatosurfexbinaries (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.InputDataToSurfexBinaries"]], "interpolation (class in pysurfex.interpolation)": [[9, "pysurfex.interpolation.Interpolation"]], "jsoninputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.JsonInputData"]], "jsoninputdatafromfile (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.JsonInputDataFromFile"]], "jsonobservationset (class in pysurfex.obs)": [[9, "pysurfex.obs.JsonObservationSet"]], "jsonoutputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.JsonOutputData"]], "jsonoutputdatafromfile (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.JsonOutputDataFromFile"]], "loadfromfile (class in pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.LoadFromFile"]], "lonlatreg (class in pysurfex.geo)": [[9, "pysurfex.geo.LonLatReg"]], "lonlatval (class in pysurfex.geo)": [[9, "pysurfex.geo.LonLatVal"]], "masterodb (class in pysurfex.run)": [[9, "pysurfex.run.Masterodb"]], "metfrostobservations (class in pysurfex.obs)": [[9, "pysurfex.obs.MetFrostObservations"]], "ncsurfexfile (class in pysurfex.file)": [[9, "pysurfex.file.NCSurfexFile"]], "namelist (class in pysurfex.namelist)": [[9, "pysurfex.namelist.Namelist"]], "netcdffilevariable (class in pysurfex.netcdf)": [[9, "pysurfex.netcdf.NetCDFFileVariable"]], "netcdfoutput (class in pysurfex.forcing)": [[9, "pysurfex.forcing.NetCDFOutput"]], "netcdfreadvariable (class in pysurfex.netcdf)": [[9, "pysurfex.netcdf.NetCDFReadVariable"]], "netcdfsurfexfile (class in pysurfex.file)": [[9, "pysurfex.file.NetCDFSurfexFile"]], "netatmoobservationset (class in pysurfex.obs)": [[9, "pysurfex.obs.NetatmoObservationSet"]], "netcdf (class in pysurfex.netcdf)": [[9, "pysurfex.netcdf.Netcdf"]], "nometa (class in pysurfex.titan)": [[9, "pysurfex.titan.NoMeta"]], "obsoperator (class in pysurfex.interpolation)": [[9, "pysurfex.interpolation.ObsOperator"]], "observation (class in pysurfex.observation)": [[9, "pysurfex.observation.Observation"]], "observationdatasetfromobsoul (class in pysurfex.obsoul)": [[9, "pysurfex.obsoul.ObservationDataSetFromObsoul"]], "observationdatasetfromobsoulfile (class in pysurfex.obsoul)": [[9, "pysurfex.obsoul.ObservationDataSetFromObsoulFile"]], "observationfromtitanjsonfile (class in pysurfex.obs)": [[9, "pysurfex.obs.ObservationFromTitanJsonFile"]], "observationset (class in pysurfex.obs)": [[9, "pysurfex.obs.ObservationSet"]], "offlineinputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.OfflineInputData"]], "outputdatafromsurfexbinaries (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.OutputDataFromSurfexBinaries"]], "pgdfile (class in pysurfex.file)": [[9, "pysurfex.file.PGDFile"]], "prepfile (class in pysurfex.file)": [[9, "pysurfex.file.PREPFile"]], "perturbedoffline (class in pysurfex.run)": [[9, "pysurfex.run.PerturbedOffline"]], "pgdinputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.PgdInputData"]], "plausibility (class in pysurfex.titan)": [[9, "pysurfex.titan.Plausibility"]], "prepinputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.PrepInputData"]], "qcdataset (class in pysurfex.titan)": [[9, "pysurfex.titan.QCDataSet"]], "qualitycontrol (class in pysurfex.titan)": [[9, "pysurfex.titan.QualityControl"]], "readdata (class in pysurfex.read)": [[9, "pysurfex.read.ReadData"]], "redundancy (class in pysurfex.titan)": [[9, "pysurfex.titan.Redundancy"]], "surfexbinary (class in pysurfex.run)": [[9, "pysurfex.run.SURFEXBinary"]], "surffile (class in pysurfex.file)": [[9, "pysurfex.file.SURFFile"]], "sct (class in pysurfex.titan)": [[9, "pysurfex.titan.Sct"]], "sodainputdata (class in pysurfex.binary_input)": [[9, "pysurfex.binary_input.SodaInputData"]], "surffiletypeextension (class in pysurfex.file)": [[9, "pysurfex.file.SurfFileTypeExtension"]], "surfexfilevariable (class in pysurfex.file)": [[9, "pysurfex.file.SurfexFileVariable"]], "surfexforcing (class in pysurfex.forcing)": [[9, "pysurfex.forcing.SurfexForcing"]], "surfexgeo (class in pysurfex.geo)": [[9, "pysurfex.geo.SurfexGeo"]], "surfexio (class in pysurfex.file)": [[9, "pysurfex.file.SurfexIO"]], "surfexnetcdfforcing (class in pysurfex.forcing)": [[9, "pysurfex.forcing.SurfexNetCDFForcing"]], "surfexoutputforcing (class in pysurfex.forcing)": [[9, "pysurfex.forcing.SurfexOutputForcing"]], "surfexsurfio (class in pysurfex.file)": [[9, "pysurfex.file.SurfexSurfIO"]], "systemfilepaths (class in pysurfex.platform)": [[9, "pysurfex.platform.SystemFilePaths"]], "systemfilepathsfromfile (class in pysurfex.platform)": [[9, "pysurfex.platform.SystemFilePathsFromFile"]], "textesurfexfile (class in pysurfex.file)": [[9, "pysurfex.file.TexteSurfexFile"]], "timeseries (class in pysurfex.timeseries)": [[9, "pysurfex.timeseries.TimeSeries"]], "timeseriesfromconverter (class in pysurfex.timeseries)": [[9, "pysurfex.timeseries.TimeSeriesFromConverter"]], "titandataset (class in pysurfex.titan)": [[9, "pysurfex.titan.TitanDataSet"]], "variable (class in pysurfex.variable)": [[9, "pysurfex.variable.Variable"]], "__call__() (pysurfex.cmd_parsing.loadfromfile method)": [[9, "pysurfex.cmd_parsing.LoadFromFile.__call__"]], "__init__() (pysurfex.binary_input.inlineforecastinputdata method)": [[9, "pysurfex.binary_input.InlineForecastInputData.__init__"]], "__init__() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[9, "pysurfex.binary_input.InputDataToSurfexBinaries.__init__"]], "__init__() (pysurfex.binary_input.jsoninputdata method)": [[9, "pysurfex.binary_input.JsonInputData.__init__"]], "__init__() (pysurfex.binary_input.jsoninputdatafromfile method)": [[9, "pysurfex.binary_input.JsonInputDataFromFile.__init__"]], "__init__() (pysurfex.binary_input.jsonoutputdata method)": [[9, "pysurfex.binary_input.JsonOutputData.__init__"]], "__init__() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[9, "pysurfex.binary_input.JsonOutputDataFromFile.__init__"]], "__init__() (pysurfex.binary_input.offlineinputdata method)": [[9, "pysurfex.binary_input.OfflineInputData.__init__"]], "__init__() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[9, "pysurfex.binary_input.OutputDataFromSurfexBinaries.__init__"]], "__init__() (pysurfex.binary_input.pgdinputdata method)": [[9, "pysurfex.binary_input.PgdInputData.__init__"]], "__init__() (pysurfex.configuration.configuration method)": [[9, "pysurfex.configuration.Configuration.__init__"]], "__init__() (pysurfex.configuration.configurationfromharmonie method)": [[9, "pysurfex.configuration.ConfigurationFromHarmonie.__init__"]], "__init__() (pysurfex.configuration.configurationfromharmonieandconfigfile method)": [[9, "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile.__init__"]], "__init__() (pysurfex.configuration.configurationfromtomlfile method)": [[9, "pysurfex.configuration.ConfigurationFromTomlFile.__init__"]], "__init__() (pysurfex.ecoclimap.ecoclimap method)": [[9, "pysurfex.ecoclimap.Ecoclimap.__init__"]], "__init__() (pysurfex.ecoclimap.ecoclimapsg method)": [[9, "pysurfex.ecoclimap.EcoclimapSG.__init__"]], "__init__() (pysurfex.ecoclimap.externalsurfexinputfile method)": [[9, "pysurfex.ecoclimap.ExternalSurfexInputFile.__init__"]], "__init__() (pysurfex.fa.fa method)": [[9, "pysurfex.fa.Fa.__init__"]], "__init__() (pysurfex.file.asciisurfexfile method)": [[9, "pysurfex.file.AsciiSurfexFile.__init__"]], "__init__() (pysurfex.file.fasurfexfile method)": [[9, "pysurfex.file.FaSurfexFile.__init__"]], "__init__() (pysurfex.file.forcingfilenetcdf method)": [[9, "pysurfex.file.ForcingFileNetCDF.__init__"]], "__init__() (pysurfex.file.ncsurfexfile method)": [[9, "pysurfex.file.NCSurfexFile.__init__"]], "__init__() (pysurfex.file.netcdfsurfexfile method)": [[9, "pysurfex.file.NetCDFSurfexFile.__init__"]], "__init__() (pysurfex.file.surffiletypeextension method)": [[9, "pysurfex.file.SurfFileTypeExtension.__init__"]], "__init__() (pysurfex.file.surfexio method)": [[9, "pysurfex.file.SurfexIO.__init__"]], "__init__() (pysurfex.file.textesurfexfile method)": [[9, "pysurfex.file.TexteSurfexFile.__init__"]], "__init__() (pysurfex.forcing.surfexforcing method)": [[9, "pysurfex.forcing.SurfexForcing.__init__"]], "__init__() (pysurfex.forcing.surfexnetcdfforcing method)": [[9, "pysurfex.forcing.SurfexNetCDFForcing.__init__"]], "__init__() (pysurfex.forcing.surfexoutputforcing method)": [[9, "pysurfex.forcing.SurfexOutputForcing.__init__"]], "__init__() (pysurfex.geo.cartesian method)": [[9, "pysurfex.geo.Cartesian.__init__"]], "__init__() (pysurfex.geo.confproj method)": [[9, "pysurfex.geo.ConfProj.__init__"]], "__init__() (pysurfex.geo.geo method)": [[9, "pysurfex.geo.Geo.__init__"]], "__init__() (pysurfex.geo.ign method)": [[9, "pysurfex.geo.IGN.__init__"]], "__init__() (pysurfex.geo.lonlatreg method)": [[9, "pysurfex.geo.LonLatReg.__init__"]], "__init__() (pysurfex.geo.lonlatval method)": [[9, "pysurfex.geo.LonLatVal.__init__"]], "__init__() (pysurfex.geo.surfexgeo method)": [[9, "pysurfex.geo.SurfexGeo.__init__"]], "__init__() (pysurfex.grib.grib method)": [[9, "id0"], [9, "pysurfex.grib.Grib.__init__"]], "__init__() (pysurfex.grib.grib2variable method)": [[9, "pysurfex.grib.Grib2Variable.__init__"]], "__init__() (pysurfex.interpolation.interpolation method)": [[9, "pysurfex.interpolation.Interpolation.__init__"]], "__init__() (pysurfex.interpolation.obsoperator method)": [[9, "pysurfex.interpolation.ObsOperator.__init__"]], "__init__() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.__init__"]], "__init__() (pysurfex.netcdf.netcdfreadvariable method)": [[9, "pysurfex.netcdf.NetCDFReadVariable.__init__"]], "__init__() (pysurfex.netcdf.netcdf method)": [[9, "pysurfex.netcdf.Netcdf.__init__"]], "__init__() (pysurfex.obs.jsonobservationset method)": [[9, "pysurfex.obs.JsonObservationSet.__init__"]], "__init__() (pysurfex.obs.observationfromtitanjsonfile method)": [[9, "pysurfex.obs.ObservationFromTitanJsonFile.__init__"]], "__init__() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.__init__"]], "__init__() (pysurfex.observation.observation method)": [[9, "pysurfex.observation.Observation.__init__"]], "__init__() (pysurfex.platform.systemfilepaths method)": [[9, "pysurfex.platform.SystemFilePaths.__init__"]], "__init__() (pysurfex.platform.systemfilepathsfromfile method)": [[9, "pysurfex.platform.SystemFilePathsFromFile.__init__"]], "__init__() (pysurfex.read.constantvalue method)": [[9, "pysurfex.read.ConstantValue.__init__"]], "__init__() (pysurfex.read.convertedinput method)": [[9, "pysurfex.read.ConvertedInput.__init__"]], "__init__() (pysurfex.read.converter method)": [[9, "pysurfex.read.Converter.__init__"]], "__init__() (pysurfex.read.readdata method)": [[9, "pysurfex.read.ReadData.__init__"]], "__init__() (pysurfex.run.batchjob method)": [[9, "pysurfex.run.BatchJob.__init__"]], "__init__() (pysurfex.run.surfexbinary method)": [[9, "pysurfex.run.SURFEXBinary.__init__"]], "__init__() (pysurfex.timeseries.timeseries method)": [[9, "pysurfex.timeseries.TimeSeries.__init__"]], "__init__() (pysurfex.titan.blacklist method)": [[9, "pysurfex.titan.Blacklist.__init__"]], "__init__() (pysurfex.titan.climatology method)": [[9, "pysurfex.titan.Climatology.__init__"]], "__init__() (pysurfex.titan.departure method)": [[9, "pysurfex.titan.Departure.__init__"]], "__init__() (pysurfex.titan.domaincheck method)": [[9, "pysurfex.titan.DomainCheck.__init__"]], "__init__() (pysurfex.titan.nometa method)": [[9, "pysurfex.titan.NoMeta.__init__"]], "__init__() (pysurfex.titan.plausibility method)": [[9, "pysurfex.titan.Plausibility.__init__"]], "__init__() (pysurfex.titan.qualitycontrol method)": [[9, "pysurfex.titan.QualityControl.__init__"]], "__init__() (pysurfex.titan.redundancy method)": [[9, "pysurfex.titan.Redundancy.__init__"]], "__init__() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.__init__"]], "_check_sanity() (pysurfex.forcing.surfexoutputforcing method)": [[9, "pysurfex.forcing.SurfexOutputForcing._check_sanity"]], "_define_forcing() (pysurfex.forcing.asciioutput method)": [[9, "pysurfex.forcing.AsciiOutput._define_forcing"]], "_define_forcing() (pysurfex.forcing.netcdfoutput method)": [[9, "pysurfex.forcing.NetCDFOutput._define_forcing"]], "absbias() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.absbias"]], "add_data() (pysurfex.binary_input.jsoninputdata method)": [[9, "pysurfex.binary_input.JsonInputData.add_data"]], "alpha_grid_rot() (pysurfex.interpolation.interpolation method)": [[9, "pysurfex.interpolation.Interpolation.alpha_grid_rot"]], "archive_files() (pysurfex.binary_input.jsonoutputdata method)": [[9, "pysurfex.binary_input.JsonOutputData.archive_files"]], "archive_files() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[9, "pysurfex.binary_input.JsonOutputDataFromFile.archive_files"]], "archive_files() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[9, "pysurfex.binary_input.OutputDataFromSurfexBinaries.archive_files"]], "archive_output() (pysurfex.run.masterodb method)": [[9, "pysurfex.run.Masterodb.archive_output"]], "archive_output_file() (pysurfex.file.surfexsurfio method)": [[9, "pysurfex.file.SurfexSurfIO.archive_output_file"]], "as_datetime() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.as_datetime"]], "as_datetime_args() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.as_datetime_args"]], "as_datetime_string() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.as_datetime_string"]], "as_timedelta() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.as_timedelta"]], "ascii2nml() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.ascii2nml"]], "ascii2nml() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.ascii2nml"]], "ascii_file2nml() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.ascii_file2nml"]], "ascii_file2nml() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.ascii_file2nml"]], "axis_types() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.axis_types"]], "bias() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.bias"]], "bufr2json() (in module pysurfex.cli)": [[9, "pysurfex.cli.bufr2json"]], "calculate_statistics() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.calculate_statistics"]], "capitalize_namelist_dict() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.capitalize_namelist_dict"]], "capitalize_namelist_dict() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.capitalize_namelist_dict"]], "clean_working_dir() (in module pysurfex.run)": [[9, "pysurfex.run.clean_working_dir"]], "cli_merge_qc_data() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_merge_qc_data"]], "cli_modify_forcing() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_modify_forcing"]], "cli_oi2soda() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_oi2soda"]], "cli_set_domain() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_set_domain"]], "cli_set_geo_from_obs_set() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_set_geo_from_obs_set"]], "cli_set_geo_from_stationlist() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_set_geo_from_stationlist"]], "cli_shape2ign() (in module pysurfex.cli)": [[9, "pysurfex.cli.cli_shape2ign"]], "close_db() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.close_db"]], "copy_input() (pysurfex.file.surfexsurfio method)": [[9, "pysurfex.file.SurfexSurfIO.copy_input"]], "create_db() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.create_db"]], "create_forcing() (in module pysurfex.cli)": [[9, "pysurfex.cli.create_forcing"]], "create_lsm_file_assim() (in module pysurfex.cli)": [[9, "pysurfex.cli.create_lsm_file_assim"]], "create_namelist() (in module pysurfex.cli)": [[9, "pysurfex.cli.create_namelist"]], "create_variable() (pysurfex.read.converter method)": [[9, "pysurfex.read.Converter.create_variable"]], "create_working_dir() (in module pysurfex.run)": [[9, "pysurfex.run.create_working_dir"]], "cryoclim_pseudoobs() (in module pysurfex.cli)": [[9, "pysurfex.cli.cryoclim_pseudoobs"]], "datetimes() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.datetimes"]], "deaccumulate() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.deaccumulate"]], "deep_update() (in module pysurfex.util)": [[9, "pysurfex.util.deep_update"]], "define_quality_control() (in module pysurfex.titan)": [[9, "pysurfex.titan.define_quality_control"]], "delete() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.delete"]], "dim_names() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.dim_names"]], "distance() (pysurfex.interpolation.interpolation static method)": [[9, "pysurfex.interpolation.Interpolation.distance"]], "dump_environ() (in module pysurfex.cli)": [[9, "pysurfex.cli.dump_environ"]], "dump_json() (pysurfex.configuration.configuration method)": [[9, "pysurfex.configuration.Configuration.dump_json"]], "epilog() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.epilog"]], "epilog() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.epilog"]], "field() (pysurfex.fa.fa method)": [[9, "pysurfex.fa.Fa.field"]], "field() (pysurfex.file.asciisurfexfile method)": [[9, "pysurfex.file.AsciiSurfexFile.field"]], "field() (pysurfex.file.fasurfexfile method)": [[9, "pysurfex.file.FaSurfexFile.field"]], "field() (pysurfex.file.forcingfilenetcdf method)": [[9, "pysurfex.file.ForcingFileNetCDF.field"]], "field() (pysurfex.file.ncsurfexfile method)": [[9, "pysurfex.file.NCSurfexFile.field"]], "field() (pysurfex.file.netcdfsurfexfile method)": [[9, "pysurfex.file.NetCDFSurfexFile.field"]], "field() (pysurfex.file.surfexio method)": [[9, "pysurfex.file.SurfexIO.field"]], "field() (pysurfex.file.textesurfexfile method)": [[9, "pysurfex.file.TexteSurfexFile.field"]], "field() (pysurfex.grib.grib method)": [[9, "pysurfex.grib.Grib.field"]], "field() (pysurfex.netcdf.netcdf method)": [[9, "pysurfex.netcdf.Netcdf.field"]], "fill_field() (in module pysurfex.interpolation)": [[9, "pysurfex.interpolation.fill_field"]], "finalize() (pysurfex.forcing.asciioutput method)": [[9, "pysurfex.forcing.AsciiOutput.finalize"]], "finalize() (pysurfex.forcing.netcdfoutput method)": [[9, "pysurfex.forcing.NetCDFOutput.finalize"]], "first_guess_for_oi() (in module pysurfex.cli)": [[9, "pysurfex.cli.first_guess_for_oi"]], "format_lat() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.format_lat"]], "format_lon() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.format_lon"]], "fromtimestamp() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.fromtimestamp"]], "generate_grib_id() (pysurfex.grib.grib2variable method)": [[9, "pysurfex.grib.Grib2Variable.generate_grib_id"]], "get_basetime() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.get_basetime"]], "get_coord() (pysurfex.geo.ign static method)": [[9, "pysurfex.geo.IGN.get_coord"]], "get_datasources() (in module pysurfex.input_methods)": [[9, "pysurfex.input_methods.get_datasources"]], "get_departure() (pysurfex.titan.departure method)": [[9, "pysurfex.titan.Departure.get_departure"]], "get_filehandler() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.get_filehandler"]], "get_filename() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.get_filename"]], "get_filetype_from_suffix() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.get_filetype_from_suffix"]], "get_geo() (pysurfex.file.asciisurfexfile method)": [[9, "pysurfex.file.AsciiSurfexFile.get_geo"]], "get_geo() (pysurfex.file.ncsurfexfile method)": [[9, "pysurfex.file.NCSurfexFile.get_geo"]], "get_geo_and_config_from_cmd() (in module pysurfex.cli)": [[9, "pysurfex.cli.get_geo_and_config_from_cmd"]], "get_geo_object() (in module pysurfex.geo)": [[9, "pysurfex.geo.get_geo_object"]], "get_namelist() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.get_namelist"]], "get_namelist() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.get_namelist"]], "get_obs() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.get_obs"]], "get_obs_value() (pysurfex.interpolation.obsoperator method)": [[9, "pysurfex.interpolation.ObsOperator.get_obs_value"]], "get_pos_from_stid() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.get_pos_from_stid"]], "get_pos_index() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.get_pos_index"]], "get_pos_index() (pysurfex.titan.qcdataset method)": [[9, "pysurfex.titan.QCDataSet.get_pos_index"]], "get_stid_from_stationlist() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.get_stid_from_stationlist"]], "get_stid_index() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.get_stid_index"]], "get_stid_index() (pysurfex.titan.qcdataset method)": [[9, "pysurfex.titan.QCDataSet.get_stid_index"]], "get_values() (pysurfex.titan.departure method)": [[9, "pysurfex.titan.Departure.get_values"]], "grid2points() (in module pysurfex.interpolation)": [[9, "pysurfex.interpolation.grid2points"]], "gridpp() (in module pysurfex.cli)": [[9, "pysurfex.cli.gridpp"]], "guess_file_format() (in module pysurfex.file)": [[9, "pysurfex.file.guess_file_format"]], "hm2pysurfex() (in module pysurfex.cli)": [[9, "pysurfex.cli.hm2pysurfex"]], "identifier() (pysurfex.geo.geo method)": [[9, "pysurfex.geo.Geo.identifier"]], "ign_mask() (pysurfex.geo.ign static method)": [[9, "pysurfex.geo.IGN.ign_mask"]], "inside_grid() (in module pysurfex.interpolation)": [[9, "pysurfex.interpolation.inside_grid"]], "inside_window() (pysurfex.bufr.bufrobservationset static method)": [[9, "pysurfex.bufr.BufrObservationSet.inside_window"]], "interpolate() (pysurfex.interpolation.interpolation method)": [[9, "pysurfex.interpolation.Interpolation.interpolate"]], "interpolate_field() (pysurfex.file.surfexio static method)": [[9, "pysurfex.file.SurfexIO.interpolate_field"]], "is_accumulated() (pysurfex.grib.grib2variable method)": [[9, "pysurfex.grib.Grib2Variable.is_accumulated"]], "is_identical() (pysurfex.geo.geo method)": [[9, "pysurfex.geo.Geo.is_identical"]], "is_in_grid() (pysurfex.interpolation.obsoperator method)": [[9, "pysurfex.interpolation.ObsOperator.is_in_grid"]], "is_level() (pysurfex.netcdf.netcdffilevariable static method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.is_level"]], "isdatetime() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.isdatetime"]], "lats() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.lats"]], "levels() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.levels"]], "lons() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.lons"]], "lower_case_namelist_dict() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.lower_case_namelist_dict"]], "lower_case_namelist_dict() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.lower_case_namelist_dict"]], "masterodb() (in module pysurfex.cli)": [[9, "pysurfex.cli.masterodb"]], "matches() (pysurfex.grib.grib2variable method)": [[9, "pysurfex.grib.Grib2Variable.matches"]], "matching_obs() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.matching_obs"]], "mean() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.mean"]], "members() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.members"]], "merge_json_namelist_file() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.merge_json_namelist_file"]], "merge_json_namelist_file() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.merge_json_namelist_file"]], "merge_json_qc_data_sets() (in module pysurfex.titan)": [[9, "pysurfex.titan.merge_json_qc_data_sets"]], "merge_namelist_dicts() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.merge_namelist_dicts"]], "merge_namelist_dicts() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.merge_namelist_dicts"]], "merge_toml_env() (in module pysurfex.util)": [[9, "pysurfex.util.merge_toml_env"]], "merge_toml_env_from_files() (in module pysurfex.util)": [[9, "pysurfex.util.merge_toml_env_from_files"]], "modify_forcing() (in module pysurfex.forcing)": [[9, "pysurfex.forcing.modify_forcing"]], "mslp2ps() (pysurfex.read.converter static method)": [[9, "pysurfex.read.Converter.mslp2ps"]], "nml2ascii() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.nml2ascii"]], "nml2ascii() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.nml2ascii"]], "normalize_ci() (pysurfex.titan.qcdataset method)": [[9, "pysurfex.titan.QCDataSet.normalize_ci"]], "obs2json() (in module pysurfex.cli)": [[9, "pysurfex.cli.obs2json"]], "obs2vectors() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.obs2vectors"]], "offline() (in module pysurfex.cli)": [[9, "pysurfex.cli.offline"]], "oi2soda() (in module pysurfex.netcdf)": [[9, "pysurfex.netcdf.oi2soda"]], "open_db() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.open_db"]], "override() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.override"]], "override() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.override"]], "parse_args_bufr2json() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_bufr2json"]], "parse_args_create_forcing() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_create_forcing"]], "parse_args_create_namelist() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_create_namelist"]], "parse_args_dump_environ() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_dump_environ"]], "parse_args_first_guess_for_oi() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_first_guess_for_oi"]], "parse_args_gridpp() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_gridpp"]], "parse_args_hm2pysurfex() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_hm2pysurfex"]], "parse_args_lsm_file_assim() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_lsm_file_assim"]], "parse_args_masterodb() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_masterodb"]], "parse_args_merge_qc_data() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_merge_qc_data"]], "parse_args_modify_forcing() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_modify_forcing"]], "parse_args_obs2json() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_obs2json"]], "parse_args_oi2soda() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_oi2soda"]], "parse_args_plot_points() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_plot_points"]], "parse_args_qc2obsmon() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_qc2obsmon"]], "parse_args_set_geo_from_obs_set() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_set_geo_from_obs_set"]], "parse_args_set_geo_from_stationlist() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_set_geo_from_stationlist"]], "parse_args_shape2ign() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_shape2ign"]], "parse_args_surfex_binary() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_surfex_binary"]], "parse_args_titan() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_args_titan"]], "parse_cryoclim_pseudoobs() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_cryoclim_pseudoobs"]], "parse_filepattern() (in module pysurfex.util)": [[9, "pysurfex.util.parse_filepattern"]], "parse_fnames() (pysurfex.ecoclimap.ecoclimapsg static method)": [[9, "pysurfex.ecoclimap.EcoclimapSG.parse_fnames"]], "parse_sentinel_obs() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_sentinel_obs"]], "parse_set_domain() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_set_domain"]], "parse_timeseries2json() (in module pysurfex.cmd_parsing)": [[9, "pysurfex.cmd_parsing.parse_timeseries2json"]], "perform_tests() (pysurfex.titan.qcdataset method)": [[9, "pysurfex.titan.QCDataSet.perform_tests"]], "perform_tests() (pysurfex.titan.titandataset method)": [[9, "pysurfex.titan.TitanDataSet.perform_tests"]], "perturbed_offline() (in module pysurfex.cli)": [[9, "pysurfex.cli.perturbed_offline"]], "pgd() (in module pysurfex.cli)": [[9, "pysurfex.cli.pgd"]], "plot_points() (in module pysurfex.cli)": [[9, "pysurfex.cli.plot_points"]], "points() (pysurfex.fa.fa method)": [[9, "pysurfex.fa.Fa.points"]], "points() (pysurfex.file.asciisurfexfile method)": [[9, "pysurfex.file.AsciiSurfexFile.points"]], "points() (pysurfex.file.fasurfexfile method)": [[9, "pysurfex.file.FaSurfexFile.points"]], "points() (pysurfex.file.forcingfilenetcdf method)": [[9, "pysurfex.file.ForcingFileNetCDF.points"]], "points() (pysurfex.file.ncsurfexfile method)": [[9, "pysurfex.file.NCSurfexFile.points"]], "points() (pysurfex.file.netcdfsurfexfile method)": [[9, "pysurfex.file.NetCDFSurfexFile.points"]], "points() (pysurfex.file.surfexio method)": [[9, "pysurfex.file.SurfexIO.points"]], "points() (pysurfex.file.textesurfexfile method)": [[9, "pysurfex.file.TexteSurfexFile.points"]], "points() (pysurfex.grib.grib method)": [[9, "pysurfex.grib.Grib.points"]], "points() (pysurfex.netcdf.netcdf method)": [[9, "pysurfex.netcdf.Netcdf.points"]], "points() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.points"]], "populate_obsmon_db() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.populate_obsmon_db"]], "populate_usage_db() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.populate_usage_db"]], "prep() (in module pysurfex.cli)": [[9, "pysurfex.cli.prep"]], "prepare_input() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[9, "pysurfex.binary_input.InputDataToSurfexBinaries.prepare_input"]], "prepare_input() (pysurfex.binary_input.jsoninputdata method)": [[9, "pysurfex.binary_input.JsonInputData.prepare_input"]], "prepare_input() (pysurfex.binary_input.jsoninputdatafromfile method)": [[9, "pysurfex.binary_input.JsonInputDataFromFile.prepare_input"]], "prepare_offline_perturbation() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.prepare_offline_perturbation"]], "print_info() (pysurfex.read.constantvalue method)": [[9, "pysurfex.read.ConstantValue.print_info"]], "print_info() (pysurfex.read.convertedinput method)": [[9, "pysurfex.read.ConvertedInput.print_info"]], "print_info() (pysurfex.read.converter method)": [[9, "pysurfex.read.Converter.print_info"]], "print_info() (pysurfex.read.readdata method)": [[9, "pysurfex.read.ReadData.print_info"]], "print_keys() (pysurfex.grib.grib2variable method)": [[9, "pysurfex.grib.Grib2Variable.print_keys"]], "print_obs() (pysurfex.observation.observation method)": [[9, "pysurfex.observation.Observation.print_obs"]], "print_var() (pysurfex.file.surfexfilevariable method)": [[9, "pysurfex.file.SurfexFileVariable.print_var"]], "print_variable_info() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.print_variable_info"]], "prolog() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.prolog"]], "prolog() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.prolog"]], "qc2obsmon() (in module pysurfex.cli)": [[9, "pysurfex.cli.qc2obsmon"]], "read() (pysurfex.file.asciisurfexfile method)": [[9, "pysurfex.file.AsciiSurfexFile.read"]], "read() (pysurfex.file.netcdfsurfexfile method)": [[9, "pysurfex.file.NetCDFSurfexFile.read"]], "read() (pysurfex.file.textesurfexfile method)": [[9, "pysurfex.file.TexteSurfexFile.read"]], "read_cryoclim_nc() (in module pysurfex.netcdf)": [[9, "pysurfex.netcdf.read_cryoclim_nc"]], "read_field() (pysurfex.file.forcingfilenetcdf method)": [[9, "pysurfex.file.ForcingFileNetCDF.read_field"]], "read_field_in_message() (pysurfex.grib.grib static method)": [[9, "pysurfex.grib.Grib.read_field_in_message"]], "read_first_guess_netcdf_file() (in module pysurfex.netcdf)": [[9, "pysurfex.netcdf.read_first_guess_netcdf_file"]], "read_geo_info() (pysurfex.grib.grib static method)": [[9, "pysurfex.grib.Grib.read_geo_info"]], "read_sentinel_nc() (in module pysurfex.netcdf)": [[9, "pysurfex.netcdf.read_sentinel_nc"]], "read_time_step() (pysurfex.read.constantvalue method)": [[9, "pysurfex.read.ConstantValue.read_time_step"]], "read_time_step() (pysurfex.read.convertedinput method)": [[9, "pysurfex.read.ConvertedInput.read_time_step"]], "read_time_step() (pysurfex.read.converter method)": [[9, "pysurfex.read.Converter.read_time_step"]], "read_time_step() (pysurfex.read.readdata method)": [[9, "pysurfex.read.ReadData.read_time_step"]], "read_var_points() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.read_var_points"]], "read_variable() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.read_variable"]], "remove_existing_file() (in module pysurfex.util)": [[9, "pysurfex.util.remove_existing_file"]], "rmse() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.rmse"]], "rotate_geographic_wind() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.rotate_geographic_wind"]], "rotate_wind_to_geographic() (pysurfex.interpolation.interpolation method)": [[9, "pysurfex.interpolation.Interpolation.rotate_wind_to_geographic"]], "run() (pysurfex.run.batchjob method)": [[9, "pysurfex.run.BatchJob.run"]], "run_create_namelist() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_create_namelist"]], "run_first_guess_for_oi() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_first_guess_for_oi"]], "run_gridpp() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_gridpp"]], "run_hm2pysurfex() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_hm2pysurfex"]], "run_masterodb() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_masterodb"]], "run_oi2soda() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_oi2soda"]], "run_plot_points() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_plot_points"]], "run_surfex_binary() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_surfex_binary"]], "run_time_loop() (in module pysurfex.forcing)": [[9, "pysurfex.forcing.run_time_loop"]], "run_titan() (in module pysurfex.cli)": [[9, "pysurfex.cli.run_titan"]], "sentinel_obs() (in module pysurfex.cli)": [[9, "pysurfex.cli.sentinel_obs"]], "set_bin_files() (pysurfex.ecoclimap.ecoclimap method)": [[9, "pysurfex.ecoclimap.Ecoclimap.set_bin_files"]], "set_bin_files() (pysurfex.ecoclimap.ecoclimapsg method)": [[9, "pysurfex.ecoclimap.EcoclimapSG.set_bin_files"]], "set_direct_data_namelist() (pysurfex.namelist.basenamelist static method)": [[9, "pysurfex.namelist.BaseNamelist.set_direct_data_namelist"]], "set_direct_data_namelist() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.set_direct_data_namelist"]], "set_domain() (in module pysurfex.geo)": [[9, "pysurfex.geo.set_domain"]], "set_flags() (pysurfex.titan.qualitycontrol static method)": [[9, "pysurfex.titan.QualityControl.set_flags"]], "set_forcing_config() (in module pysurfex.forcing)": [[9, "pysurfex.forcing.set_forcing_config"]], "set_geo_from_stationlist() (in module pysurfex.cli)": [[9, "pysurfex.cli.set_geo_from_stationlist"]], "set_input() (pysurfex.ecoclimap.ecoclimap method)": [[9, "pysurfex.ecoclimap.Ecoclimap.set_input"]], "set_input() (pysurfex.ecoclimap.ecoclimapsg method)": [[9, "pysurfex.ecoclimap.EcoclimapSG.set_input"]], "set_input() (pysurfex.titan.blacklist method)": [[9, "pysurfex.titan.Blacklist.set_input"]], "set_input() (pysurfex.titan.climatology method)": [[9, "pysurfex.titan.Climatology.set_input"]], "set_input() (pysurfex.titan.domaincheck method)": [[9, "pysurfex.titan.DomainCheck.set_input"]], "set_input() (pysurfex.titan.firstguess method)": [[9, "pysurfex.titan.FirstGuess.set_input"]], "set_input() (pysurfex.titan.fraction method)": [[9, "pysurfex.titan.Fraction.set_input"]], "set_input() (pysurfex.titan.nometa method)": [[9, "pysurfex.titan.NoMeta.set_input"]], "set_input() (pysurfex.titan.plausibility method)": [[9, "pysurfex.titan.Plausibility.set_input"]], "set_input() (pysurfex.titan.qualitycontrol method)": [[9, "pysurfex.titan.QualityControl.set_input"]], "set_input() (pysurfex.titan.redundancy method)": [[9, "pysurfex.titan.Redundancy.set_input"]], "set_input() (pysurfex.titan.sct method)": [[9, "pysurfex.titan.Sct.set_input"]], "set_input_observations() (pysurfex.binary_input.sodainputdata method)": [[9, "pysurfex.binary_input.SodaInputData.set_input_observations"]], "set_input_sea_assimilation() (pysurfex.binary_input.sodainputdata method)": [[9, "pysurfex.binary_input.SodaInputData.set_input_sea_assimilation"]], "set_input_vertical_soil_oi() (pysurfex.binary_input.sodainputdata method)": [[9, "pysurfex.binary_input.SodaInputData.set_input_vertical_soil_oi"]], "set_obs() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.set_obs"]], "set_offline_namelist() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.set_offline_namelist"]], "set_offline_namelist() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.set_offline_namelist"]], "set_pgd_namelist() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.set_pgd_namelist"]], "set_pgd_namelist() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.set_pgd_namelist"]], "set_soda_namelist() (pysurfex.namelist.basenamelist method)": [[9, "pysurfex.namelist.BaseNamelist.set_soda_namelist"]], "set_soda_namelist() (pysurfex.namelist.namelist method)": [[9, "pysurfex.namelist.Namelist.set_soda_namelist"]], "set_var() (pysurfex.variable.variable method)": [[9, "pysurfex.variable.Variable.set_var"]], "shape2ign() (in module pysurfex.geo)": [[9, "pysurfex.geo.shape2ign"]], "soda() (in module pysurfex.cli)": [[9, "pysurfex.cli.soda"]], "sub() (pysurfex.namelist.namelist static method)": [[9, "pysurfex.namelist.Namelist.sub"]], "subset() (pysurfex.geo.cartesian method)": [[9, "pysurfex.geo.Cartesian.subset"]], "subset() (pysurfex.geo.confproj method)": [[9, "pysurfex.geo.ConfProj.subset"]], "subset() (pysurfex.geo.ign method)": [[9, "pysurfex.geo.IGN.subset"]], "subset() (pysurfex.geo.lonlatreg method)": [[9, "pysurfex.geo.LonLatReg.subset"]], "subset() (pysurfex.geo.lonlatval method)": [[9, "pysurfex.geo.LonLatVal.subset"]], "subset() (pysurfex.geo.surfexgeo method)": [[9, "pysurfex.geo.SurfexGeo.subset"]], "substitute_string() (pysurfex.platform.systemfilepaths static method)": [[9, "pysurfex.platform.SystemFilePaths.substitute_string"]], "symlink_input() (pysurfex.file.surfexsurfio method)": [[9, "pysurfex.file.SurfexSurfIO.symlink_input"]], "td2rh() (pysurfex.bufr.bufrobservationset static method)": [[9, "pysurfex.bufr.BufrObservationSet.td2rh"]], "test() (pysurfex.titan.blacklist method)": [[9, "pysurfex.titan.Blacklist.test"]], "test() (pysurfex.titan.buddy method)": [[9, "pysurfex.titan.Buddy.test"]], "test() (pysurfex.titan.climatology method)": [[9, "pysurfex.titan.Climatology.test"]], "test() (pysurfex.titan.domaincheck method)": [[9, "pysurfex.titan.DomainCheck.test"]], "test() (pysurfex.titan.firstguess method)": [[9, "pysurfex.titan.FirstGuess.test"]], "test() (pysurfex.titan.fraction method)": [[9, "pysurfex.titan.Fraction.test"]], "test() (pysurfex.titan.nometa method)": [[9, "pysurfex.titan.NoMeta.test"]], "test() (pysurfex.titan.plausibility method)": [[9, "pysurfex.titan.Plausibility.test"]], "test() (pysurfex.titan.qualitycontrol method)": [[9, "pysurfex.titan.QualityControl.test"]], "test() (pysurfex.titan.redundancy method)": [[9, "pysurfex.titan.Redundancy.test"]], "test() (pysurfex.titan.sct method)": [[9, "pysurfex.titan.Sct.test"]], "times() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.times"]], "titan() (in module pysurfex.cli)": [[9, "pysurfex.cli.titan"]], "units() (pysurfex.netcdf.netcdffilevariable method)": [[9, "pysurfex.netcdf.NetCDFFileVariable.units"]], "update_namelist() (pysurfex.geo.cartesian method)": [[9, "pysurfex.geo.Cartesian.update_namelist"]], "update_namelist() (pysurfex.geo.confproj method)": [[9, "pysurfex.geo.ConfProj.update_namelist"]], "update_namelist() (pysurfex.geo.ign method)": [[9, "pysurfex.geo.IGN.update_namelist"]], "update_namelist() (pysurfex.geo.lonlatreg method)": [[9, "pysurfex.geo.LonLatReg.update_namelist"]], "update_namelist() (pysurfex.geo.lonlatval method)": [[9, "pysurfex.geo.LonLatVal.update_namelist"]], "update_namelist() (pysurfex.geo.surfexgeo method)": [[9, "pysurfex.geo.SurfexGeo.update_namelist"]], "update_setting() (pysurfex.configuration.configuration method)": [[9, "pysurfex.configuration.Configuration.update_setting"]], "utcfromtimestamp() (in module pysurfex.datetime_utils)": [[9, "pysurfex.datetime_utils.utcfromtimestamp"]], "vectors2obs() (pysurfex.observation.observation static method)": [[9, "pysurfex.observation.Observation.vectors2obs"]], "write_forcing() (pysurfex.forcing.asciioutput method)": [[9, "pysurfex.forcing.AsciiOutput.write_forcing"]], "write_forcing() (pysurfex.forcing.netcdfoutput method)": [[9, "pysurfex.forcing.NetCDFOutput.write_forcing"]], "write_forcing() (pysurfex.forcing.surfexoutputforcing method)": [[9, "pysurfex.forcing.SurfexOutputForcing.write_forcing"]], "write_formatted_array() (in module pysurfex.forcing)": [[9, "pysurfex.forcing.write_formatted_array"]], "write_json() (pysurfex.timeseries.timeseries method)": [[9, "pysurfex.timeseries.TimeSeries.write_json"]], "write_json_file() (pysurfex.obs.observationset method)": [[9, "pysurfex.obs.ObservationSet.write_json_file"]], "write_obsmon_sqlite_file() (in module pysurfex.obsmon)": [[9, "pysurfex.obsmon.write_obsmon_sqlite_file"]], "write_output() (pysurfex.titan.qcdataset method)": [[9, "pysurfex.titan.QCDataSet.write_output"]], "write_proj_info() (pysurfex.geo.geo method)": [[9, "pysurfex.geo.Geo.write_proj_info"]]}})
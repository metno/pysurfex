Search.setIndex({"docnames": [".venv/lib/python3.8/site-packages/MarkupSafe-2.1.5.dist-info/LICENSE", ".venv/lib/python3.8/site-packages/imagesize-1.4.1.dist-info/LICENSE", ".venv/lib/python3.8/site-packages/pytest_cov-3.0.0.dist-info/AUTHORS", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/base", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/class", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/module", "README", "docs/example", "index"], "filenames": [".venv/lib/python3.8/site-packages/MarkupSafe-2.1.5.dist-info/LICENSE.rst", ".venv/lib/python3.8/site-packages/imagesize-1.4.1.dist-info/LICENSE.rst", ".venv/lib/python3.8/site-packages/pytest_cov-3.0.0.dist-info/AUTHORS.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/base.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/class.rst", ".venv/lib/python3.8/site-packages/sphinx/ext/autosummary/templates/autosummary/module.rst", "README.rst", "docs/example.rst", "index.rst"], "titles": ["&lt;no title&gt;", "The MIT License (MIT)", "Authors", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Python API to SURFEX (pysurfex)", "Examples", "PYSURFEX documentation"], "terms": {"copyright": [0, 1], "2010": 0, "pallet": 0, "redistribut": 0, "us": [0, 1, 7, 8], "sourc": [0, 6, 8], "binari": [0, 6], "form": 0, "without": [0, 1, 6, 7, 8], "modif": 0, "ar": [0, 6, 7, 8], "permit": [0, 1], "provid": [0, 1, 8], "follow": [0, 1, 6, 8], "condit": [0, 1], "met": [0, 6], "code": [0, 6, 8], "must": [0, 8], "retain": 0, "abov": [0, 1, 7, 8], "notic": [0, 1], "thi": [0, 1, 6, 7, 8], "list": [0, 8], "disclaim": 0, "reproduc": 0, "document": [0, 1, 6], "other": [0, 1], "materi": 0, "distribut": [0, 1], "neither": 0, "name": [0, 8], "holder": [0, 1], "nor": 0, "its": 0, "contributor": 0, "mai": 0, "endors": 0, "promot": 0, "product": [0, 7, 8], "deriv": 0, "from": [0, 1], "softwar": [0, 1, 6, 8], "specif": [0, 8], "prior": 0, "written": 0, "permiss": [0, 1], "i": [0, 1, 6, 7, 8], "BY": 0, "THE": [0, 1], "AND": [0, 1], "AS": [0, 1], "ani": [0, 1, 6, 8], "express": [0, 1], "OR": [0, 1], "impli": [0, 1, 8], "warranti": [0, 1], "includ": [0, 1], "BUT": [0, 1], "NOT": [0, 1], "limit": [0, 1], "TO": [0, 1], "OF": [0, 1], "merchant": [0, 1], "fit": [0, 1], "FOR": [0, 1], "A": [0, 1, 8], "particular": [0, 1], "purpos": [0, 1, 8], "IN": [0, 1], "NO": [0, 1], "event": [0, 1], "shall": [0, 1], "BE": [0, 1], "liabl": [0, 1], "direct": [0, 8], "indirect": 0, "incident": 0, "special": [0, 8], "exemplari": 0, "consequenti": 0, "damag": [0, 1], "procur": 0, "substitut": [0, 8], "good": 0, "servic": 0, "loss": 0, "data": 0, "profit": 0, "busi": 0, "interrupt": 0, "howev": 0, "caus": 0, "ON": [0, 6, 8], "theori": 0, "liabil": [0, 1], "whether": [0, 1], "contract": [0, 1], "strict": 0, "tort": [0, 1], "neglig": 0, "otherwis": [0, 1], "aris": [0, 1], "wai": 0, "out": [0, 1], "even": 0, "IF": 0, "advis": 0, "possibl": [0, 7, 8], "SUCH": 0, "2016": 1, "yoshiki": 1, "shibukawa": 1, "herebi": 1, "grant": 1, "free": 1, "charg": 1, "person": 1, "obtain": 1, "copi": [1, 8], "associ": 1, "file": [1, 6, 7, 8], "deal": 1, "restrict": 1, "right": 1, "modifi": [1, 7, 8], "merg": [1, 8], "publish": 1, "sublicens": 1, "sell": 1, "whom": 1, "furnish": 1, "do": [1, 8], "so": 1, "subject": 1, "all": [1, 6, 7, 8], "substanti": 1, "portion": 1, "kind": [1, 8], "noninfring": 1, "author": 1, "claim": 1, "an": [1, 6, 7, 8], "action": 1, "connect": [1, 8], "WITH": 1, "marc": 2, "schlaich": 2, "http": [2, 6, 7, 8], "www": 2, "schlamar": 2, "org": 2, "rick": 2, "van": 2, "hattem": 2, "wol": 2, "ph": 2, "buck": 2, "evan": 2, "github": [2, 6, 8], "com": 2, "bukzor": 2, "eric": 2, "larson": 2, "abramowitz": 2, "thoma": 2, "kluyver": 2, "takluyv": 2, "guillaum": 2, "ayoub": 2, "yabz": 2, "fr": 2, "federico": 2, "ceratto": 2, "firelet": 2, "net": 2, "josh": 2, "kalderimi": 2, "blog": 2, "cookiestack": 2, "ionel": 2, "cristian": 2, "m\u0103rie\u0219": 2, "ionelmc": 2, "ro": 2, "christian": 2, "ledermann": 2, "cleder": 2, "alec": 2, "nikola": 2, "reiter": 2, "justanr": 2, "patrick": 2, "lannigan": 2, "plannigan": 2, "david": 2, "szotten": 2, "davidszotten": 2, "michael": 2, "elovskikh": 2, "wronglink": 2, "saurabh": 2, "kumar": 2, "theskumar": 2, "daniel": 2, "hahler": 2, "de": 2, "florian": 2, "bruhin": 2, "compil": 2, "zoltan": 2, "kozma": 2, "kozmaz87": 2, "franci": 2, "niu": 2, "flniu": 2, "io": [2, 6, 7, 8], "janni": 2, "leidel": 2, "jezdez": 2, "ryan": 2, "hiebert": 2, "ryanhiebert": 2, "terenc": 2, "honl": 2, "terencehonl": 2, "jeremi": 2, "bowman": 2, "jmbowman": 2, "samuel": 2, "giffard": 2, "mulugruntz": 2, "\u0441\u0435\u043c\u0451\u043d": 2, "\u043c\u0430\u0440\u044c\u044f\u0441\u0438\u043d": 2, "marsoft": 2, "alexand": 2, "shadchin": 2, "grainger": 2, "graingert": 2, "co": 2, "uk": 2, "juanjo": 2, "baz\u00e1n": 2, "xuanxu": 2, "andrew": 2, "murrai": 2, "radarher": 2, "ned": 2, "batcheld": 2, "nedbatcheld": 2, "albert": 2, "tugushev": 2, "atugushev": 2, "mart\u00edn": 2, "gait\u00e1n": 2, "mgaitan": 2, "hugo": 2, "kemenad": 2, "hugovk": 2, "manganiello": 2, "adamantik": 2, "ander": 2, "hovm\u00f6ller": 2, "box": 2, "zac": 2, "hatfield": 2, "dodd": 2, "zhd": 2, "dev": [2, 6, 8], "mateu": 2, "berardo": 2, "souza": 2, "terra": 2, "matterra": 2, "ganden": 2, "schaffner": 2, "gschaffner": 2, "micha\u0142": 2, "g\u00f3rny": 2, "mgorni": 2, "bern\u00e1t": 2, "g\u00e1bor": 2, "gaborbernat": 2, "pamela": 2, "mca": 2, "nulti": 2, "pamelam": 2, "riedel": 2, "cielquan": 2, "chri": 2, "sreesangkom": 2, "csreesan": 2, "sorin": 2, "sbarnea": 2, "ssbarnea": 2, "brian": 2, "rutledg": 2, "bhrutledg": 2, "danilo": 2, "\u0161egan": 2, "dsegan": 2, "bielawski": 2, "d3x": 2, "fullnam": [3, 4, 5], "escap": [3, 4, 5], "underlin": [3, 4, 5], "block": [5, 8], "modul": [5, 7, 8], "rubric": 5, "item": 5, "endfor": 5, "endif": 5, "endblock": 5, "extern": [6, 8], "surfac": [6, 8], "model": [6, 8], "prepar": [6, 8], "input": [6, 7, 8], "namelist": [6, 7, 8], "creat": 6, "atmospher": [6, 8], "forc": 6, "offlin": [6, 7, 8], "read": [6, 8], "output": [6, 8], "qualiti": [6, 8], "control": [6, 8], "observ": [6, 8], "titanlib": [6, 8], "optim": [6, 8], "interpol": [6, 7, 8], "gridpp": [6, 8], "monitor": [6, 8], "usag": [6, 8], "see": [6, 8], "onlin": [6, 8], "metno": [6, 7, 8], "releas": [6, 8], "trigger": [6, 8], "autmomat": [6, 8], "which": [6, 8], "can": [6, 7, 8], "pip3": [6, 8], "user": [6, 7, 8], "also": [6, 7, 8], "updat": [6, 8], "registri": [6, 8], "below": [6, 7, 8], "pgd": [6, 7, 8], "argument": [6, 8], "podman": [6, 7, 8], "ghcr": [6, 7, 8], "latest": [6, 7, 8], "poetri": [6, 7, 8], "requir": [6, 8], "pacakg": [6, 8], "some": [6, 8], "might": [6, 8], "obsolet": [6, 8], "need": [6, 8], "deped": [6, 8], "sudo": [6, 7, 8], "apt": [6, 8], "get": [6, 8], "y": [6, 8], "libudunits2": [6, 8], "libproj": [6, 8], "libeccodes0": [6, 8], "libeccod": [6, 8], "libnetcdf": [6, 8], "netcdf": [6, 7, 8], "bin": [6, 8], "ca": [6, 8], "certif": [6, 8], "The": [6, 8], "depenc": [6, 8], "non": [6, 8], "standard": [6, 8], "ones": [6, 8], "e": [6, 8], "g": [6, 7, 8], "your": [6, 7, 8], "numpi": [6, 8], "pyproj": [6, 8], "pyyaml": [6, 8], "toml": [6, 7, 8], "f90nml": [6, 8], "To": [6, 8], "netcdf4": [6, 8], "cfunit": [6, 8], "grib": [6, 8], "eccod": [6, 8], "ecmwf": [6, 7, 8], "int": [6, 8], "wiki": [6, 8], "displai": [6, 7, 8], "ecc": [6, 8], "enable_python": [6, 8], "plot": 6, "matplotlib": [6, 7, 8], "frost": [6, 8], "request": [6, 8], "For": [6, 8], "oper": [6, 8], "test": [6, 8], "pytest": [6, 8], "download": [6, 8], "execut": [6, 8], "insid": [6, 7, 8], "extract": [6, 8], "folder": [6, 8], "environ": [6, 7, 8], "activ": [6, 8], "interact": [6, 8], "shell": [6, 8], "command": [6, 8], "import": [6, 8], "sy": [6, 8], "cli": [6, 8], "parse_args_surfex_binari": [6, 8], "run_surfex_binari": [6, 8], "argv": [6, 8], "1": [6, 7, 8], "kwarg": [6, 8], "here": [7, 8], "assum": [7, 8], "you": [7, 8], "have": [7, 8], "instal": 7, "work": [7, 8], "pysurfex": 7, "contain": 7, "set": [7, 8], "variabl": [7, 8], "If": [7, 8], "system": 7, "wide": [7, 8], "entri": [7, 8], "point": [7, 8], "directli": [7, 8], "empti": [7, 8], "env": [7, 8], "export": [7, 8], "local": [7, 8], "how": [7, 8], "apptain": [7, 8], "ato": [7, 8], "load": [7, 8], "singular": [7, 8], "8": [7, 8], "first": [7, 8], "time": [7, 8], "creation": [7, 8], "pull": [7, 8], "scratch": [7, 8], "sif": [7, 8], "docker": [7, 8], "exec": [7, 8], "bind": [7, 8], "x11": [7, 8], "yet": [7, 8], "qt_x11_no_mitshm": [7, 8], "tmp": [7, 8], "unix": [7, 8], "rw": [7, 8], "recommend": [7, 8], "root": [7, 8], "v": [7, 8], "volum": [7, 8], "address": [7, 8], "lustr": [7, 8], "storeb": [7, 8], "project": [7, 8], "metproduct": [7, 8], "yr_short": [7, 8], "met_analysis_1_0km_nordic_": [7, 8], "yyyi": [7, 8], "mm": [7, 8], "dd": [7, 8], "t": [7, 8], "hh": [7, 8], "z": [7, 8], "nc": [7, 8], "dodsc": [7, 8], "metpparchivev3": [7, 8], "create_forc": [7, 8], "p": [7, 8], "2023013010": [7, 8], "2023013011": [7, 8], "d": [7, 8], "domain": [7, 8], "drammen": [7, 8], "json": [7, 8], "rain_convert": [7, 8], "calcrain": [7, 8], "snow_convert": [7, 8], "calcsnow": [7, 8], "zref": [7, 8], "screen": [7, 8], "uref": [7, 8], "qa_convert": [7, 8], "rh2q_mslp": [7, 8], "co2": [7, 8], "constant": [7, 8], "dir_sw_convert": [7, 8], "sca_sw": [7, 8], "lw_convert": [7, 8], "wind_convert": [7, 8], "none": [7, 8], "wind_dir_convert": [7, 8], "ps_convert": [7, 8], "mslp2p": [7, 8], "lambert": [7, 8], "conf": [7, 8], "proj": [7, 8], "nam_pgd_grid": [7, 8], "cgrid": [7, 8], "nam_conf_proj": [7, 8], "xbeta": [7, 8], "0": [7, 8], "xlat0": [7, 8], "63": [7, 8], "xlon0": [7, 8], "15": [7, 8], "xrpk": [7, 8], "8910065241883678": [7, 8], "nam_conf_proj_grid": [7, 8], "nimax": [7, 8], "50": [7, 8], "njmax": [7, 8], "xdx": [7, 8], "1000": [7, 8], "xdy": [7, 8], "xlatcen": [7, 8], "61": [7, 8], "5": [7, 8], "xloncen": [7, 8], "9": [7, 8], "sand_dir": [7, 8], "perm": [7, 8], "sbu": [7, 8], "soilgrid_carra2": [7, 8], "clay_dir": [7, 8], "soilgrid_dir": [7, 8], "soc_top_dir": [7, 8], "ec": [7, 8], "res4": [7, 8], "hpcperm": [7, 8], "hlam": [7, 8], "climat": [7, 8], "soc_sub_dir": [7, 8], "ecoclimap_cover_dir": [7, 8], "ecoclimap_bin_dir": [7, 8], "sfx_data": [7, 8], "test_default": [7, 8], "lib": [7, 8], "my_run": [7, 8], "ecoclimap": [7, 8], "flake_dir": [7, 8], "ecoclimap_sg_cover_dir": [7, 8], "sg": [7, 8], "cover": [7, 8], "albnir_soil_dir": [7, 8], "albnir_sat": [7, 8], "albvis_soil_dir": [7, 8], "albvis_sat": [7, 8], "albnir_veg_dir": [7, 8], "albvis_veg_dir": [7, 8], "tree_height_dir": [7, 8], "ht": [7, 8], "lai_dir": [7, 8], "lai_sat": [7, 8], "oro_dir": [7, 8], "gmted_carra2": [7, 8], "path": [7, 8], "thei": [7, 8], "call": [7, 8], "prep": [7, 8], "soda": [7, 8], "defin": [7, 8], "directori": [7, 8], "consist": [7, 8], "version": [7, 8], "want": [7, 8], "similar": [7, 8], "rte": [7, 8], "mkdir": [7, 8], "tutori": [7, 8], "cd": [7, 8], "open": [7, 8], "nam_dir": [7, 8], "nam_open_surfex_8_1": [7, 8], "cy43": [7, 8], "nam_cy43_dev": [7, 8], "cy46": [7, 8], "nam_hm_cy46": [7, 8], "onli": [7, 8], "one": [7, 8], "openmp": [7, 8], "thread": [7, 8], "omp_num_thread": [7, 8], "dump": [7, 8], "dump_environ": [7, 8], "o": [7, 8], "c": [7, 8], "cfg": [7, 8], "config_exp_surfex": [7, 8], "r": [7, 8], "": [7, 8], "n": [7, 8], "valu": [7, 8], "prep_fil": [7, 8], "prep_from_namelist_valu": [7, 8], "prep_filetyp": [7, 8], "dtg": [7, 8], "2021010103": [7, 8], "surfout": [7, 8], "pwd": [7, 8], "It": [7, 8], "demonstr": [7, 8], "plot_point": [7, 8], "air_temperature_2m": [7, 8], "meps25epsarch": [7, 8], "2023": [7, 8], "04": [7, 8], "13": [7, 8], "meps_det_2_5km_20230413t06z": [7, 8], "2023041307": [7, 8], "readdata": 8, "geo": 8, "var_nam": 8, "convertedinput": 8, "convert": 8, "paramet": 8, "geometri": 8, "str": 8, "constantvalu": 8, "var_dict": 8, "initial_tim": 8, "def": 8, "fileformat": 8, "main": 8, "interfac": 8, "field": 8, "done": 8, "through": 8, "default": 8, "plain": 8, "convers": 8, "lon": 8, "lat": 8, "surfexgeo": 8, "abstract": 8, "abc": 8, "_type_": 8, "_description_": 8, "confproj": 8, "from_json": 8, "lonlatv": 8, "cartesian": 8, "lonlatreg": 8, "ign": 8, "recreat": 8, "fals": 8, "fa": 8, "fname": 8, "fichier": 8, "arpeg": 8, "geo_in": 8, "geo_out": 8, "obsoper": 8, "dataset": 8, "grid_valu": 8, "max_dist": 8, "5000": 8, "ob": 8, "batchjob": 8, "wrapper": 8, "batch": 8, "job": 8, "surfexbinari": 8, "iofil": 8, "input_data": 8, "perturbedofflin": 8, "pert_numb": 8, "archive_data": 8, "pgdfile": 8, "print_namelist": 8, "negpert": 8, "pertub": 8, "masterodb": 8, "prepfil": 8, "surffil": 8, "true": 8, "binary_input_legaci": 8, "pgdinputdata": 8, "config": 8, "system_file_path": 8, "check_exist": 8, "prepinputdata": 8, "prep_pgdfil": 8, "offlineinputdata": 8, "inlineforecastinputdata": 8, "inlin": 8, "forecast": 8, "sodainputdata": 8, "perturbed_file_pattern": 8, "surfexio": 8, "filenam": 8, "extens": 8, "intern": 8, "format": 8, "surfexsurfio": 8, "surfexfil": 8, "csurf_filetyp": 8, "input_fil": 8, "symlink": 8, "archive_fil": 8, "surf": 8, "restart": 8, "cpgdfile": 8, "lfagmap": 8, "cprepfil": 8, "csurffil": 8, "surfexfilevari": 8, "varnam": 8, "validtim": 8, "patch": 8, "layer": 8, "basetim": 8, "interv": 8, "datatyp": 8, "float": 8, "tiletyp": 8, "full": 8, "asciisurfexfil": 8, "ascii": 8, "txt": 8, "ncsurfexfil": 8, "type": 8, "fasurfexfil": 8, "surffiletypeextens": 8, "netcdfsurfexfil": 8, "seri": 8, "textesurfexfil": 8, "text": 8, "forcingfilenetcdf": 8, "configur": 8, "configurationfromharmoni": 8, "harmoni": 8, "up": 8, "correspond": 8, "sever": 8, "chang": 8, "configurationfromharmonieandconfigfil": 8, "conf_fil": 8, "initi": 8, "envrion": 8, "configurationfromtomlfil": 8, "obsoul": 8, "observationdatasetfromobsoul": 8, "content": 8, "an_tim": 8, "label": 8, "obnumb": 8, "obtyp": 8, "subtyp": 8, "neg_dt": 8, "pos_dt": 8, "sigmao": 8, "observationdatasetfromobsoulfil": 8, "axi": 8, "netcdfreadvari": 8, "level": 8, "unit": 8, "member": 8, "netcdffilevari": 8, "file_handl": 8, "var": 8, "netdf": 8, "observationset": 8, "netatmoobservationset": 8, "target_tim": 8, "dt": 8, "3600": 8, "re": 8, "lonrang": 8, "latrang": 8, "netatmo": 8, "metfrostobserv": 8, "station": 8, "num_tri": 8, "3": 8, "wmo": 8, "xprovid": 8, "blacklist": 8, "norwai": 8, "jsonobservationset": 8, "observationfromtitanjsonfil": 8, "titan": 8, "externalsurfexinputfil": 8, "around": 8, "treatment": 8, "each": 8, "systemfilepath": 8, "ecoclimapsg": 8, "veg_typ": 8, "20": 8, "decad": 8, "36": 8, "platform_dep": 8, "match": 8, "possibli": 8, "dir": 8, "nest": 8, "systemfilepathsfromfil": 8, "grib2vari": 8, "disciplin": 8, "pca": 8, "pnr": 8, "typ": 8, "lev": 8, "tsp": 8, "grib2": 8, "namelist_legaci": 8, "basenamelist": 8, "program": 8, "input_path": 8, "forc_z": 8, "prep_pgdfiletyp": 8, "fcint": 8, "var_typ": 8, "initial_basetim": 8, "prefer_forecast": 8, "new": 8, "combin": 8, "surfexforc": 8, "surfexnetcdfforc": 8, "surfexoutputforc": 8, "base_tim": 8, "ntime": 8, "var_obj": 8, "time_step_interval": 8, "netcdfoutput": 8, "att_obj": 8, "att_tim": 8, "cach": 8, "time_step": 8, "fmt": 8, "diskless_writ": 8, "asciioutput": 8, "pseudoob": 8, "sentinelobservationset": 8, "fg_geo": 8, "grid_sm_fg": 8, "sentinel": 8, "step": 8, "2": 8, "fg_threshold": 8, "cryoclimobservationset": 8, "snow_fg": 8, "gelevs_fg": 8, "perm_snow": 8, "perm_snow_geo": 8, "slope": 8, "slope_geo": 8, "cryo": 8, "4": 8, "new_snow_depth": 8, "glaf": 8, "laf_threshold": 8, "cryo_varnam": 8, "classed_value_c": 8, "binary_input": 8, "inputdatatosurfexbinari": 8, "outputdatafromsurfexbinari": 8, "jsonoutputdata": 8, "jsonoutputdatafromfil": 8, "jsoninputdata": 8, "jsoninputdatafromfil": 8, "inputdatafromnamelist": 8, "nml": 8, "platform": 8, "obstim": 8, "elev": 8, "nan": 8, "stid": 8, "na": 8, "namelistgener": 8, "definit": 8, "assembl": 8, "cmd_pars": 8, "loadfromfil": 8, "option_str": 8, "dest": 8, "narg": 8, "const": 8, "choic": 8, "help": 8, "metavar": 8, "bufr": 8, "bufrobservationset": 8, "bufrfil": 8, "valid_dtg": 8, "valid_rang": 8, "use_first": 8, "timeseri": 8, "stids_fil": 8, "timeseriesfromconvert": 8, "start": 8, "end": 8, "qualitycontrol": 8, "plausibl": 8, "minval": 8, "maxval": 8, "plausibilti": 8, "firstguess": 8, "fg_field": 8, "negdiff": 8, "posdiff": 8, "bilinear": 8, "guess": 8, "check": 8, "fraction": 8, "fraction_field": 8, "sct": 8, "num_min": 8, "num_max": 8, "100": 8, "inner_radiu": 8, "50000": 8, "outer_radiu": 8, "150000": 8, "num_iter": 8, "num_min_prof": 8, "min_elev_diff": 8, "200": 8, "min_horizonal_scal": 8, "10000": 8, "vertical_scal": 8, "po": 8, "neg": 8, "eps2": 8, "cmin": 8, "cmax": 8, "missing_elev_to_zero": 8, "spatial": 8, "buddi": 8, "diff_elev_max": 8, "200000": 8, "adjust_for_elev_diff": 8, "distance_lim": 8, "1000000": 8, "prioriti": 8, "buddies_min": 8, "threshold": 8, "obs_to_check": 8, "climatologi": 8, "offset": 8, "qc": 8, "redund": 8, "domaincheck": 8, "domain_geo": 8, "nometa": 8, "miss": 8, "meta": 8, "qcdataset": 8, "analysis_tim": 8, "flag": 8, "laf": 8, "passed_test": 8, "fg_dep": 8, "an_dep": 8, "remove_invalid_elev": 8, "titandataset": 8, "datasourc": 8, "test_flag": 8, "departur": 8, "mode": 8, "differ": 8, "between": 8, "__init__": 8, "construct": 8, "object": 8, "read_time_step": 8, "implement": 8, "print_info": 8, "return": 8, "print": 8, "info": 8, "dict": 8, "rais": 8, "runtimeerror": 8, "as_datetim": 8, "valid": 8, "dictionari": 8, "keyerror": 8, "notimplementederror": 8, "create_vari": 8, "static": 8, "mslp": 8, "altitud": 8, "temp": 8, "calcaul": 8, "np": 8, "ndarrai": 8, "mean": 8, "sea": 8, "pressur": 8, "temperatur": 8, "geometry_": 8, "could": 8, "found": 8, "climatolog": 8, "month": 8, "longitud": 8, "latitud": 8, "except": 8, "identifi": 8, "is_ident": 8, "geo_to_check": 8, "ident": 8, "bool": 8, "write_proj_info": 8, "write": 8, "noth": 8, "now": 8, "string": 8, "update_namelist": 8, "subset": 8, "find": 8, "keys1": 8, "keys2": 8, "keys3": 8, "keys4": 8, "descript": 8, "kei": 8, "tupl": 8, "zerodivisionerror": 8, "nlon": 8, "nlat": 8, "option": 8, "mask": 8, "get_coord": 8, "pin": 8, "pdin": 8, "coord": 8, "coordin": 8, "ign_mask": 8, "pxall": 8, "pyall": 8, "xxx": 8, "yyi": 8, "modulenotfounderror": 8, "epygram": 8, "nearest": 8, "posit": 8, "interpoalt": 8, "intrpol": 8, "specifi": 8, "field2d": 8, "undefin": 8, "two": 8, "dimension": 8, "ouput": 8, "try": 8, "interpolated_field": 8, "arrai": 8, "rotate_wind_to_geograph": 8, "Not": 8, "distanc": 8, "lon1": 8, "lat1": 8, "lon2": 8, "lat2": 8, "comput": 8, "great": 8, "circl": 8, "haversin": 8, "formula": 8, "vector": 8, "cval": 8, "alpha_grid_rot": 8, "calcul": 8, "alpha": 8, "darrai": 8, "grid": 8, "max": 8, "allow": 8, "deviat": 8, "meter": 8, "border": 8, "get_obs_valu": 8, "index": 8, "is_in_grid": 8, "cmd": 8, "calledprocesserror": 8, "fail": 8, "No": 8, "task": 8, "fortran": 8, "word": 8, "filenotfounderror": 8, "archive_output": 8, "archiv": 8, "pd": 8, "exist": 8, "filetyp": 8, "set_input_observ": 8, "inform": 8, "obsset": 8, "set_input_sea_assimil": 8, "assimil": 8, "sea_set": 8, "set_input_vertical_soil_oi": 8, "oi": 8, "soil": 8, "oi_set": 8, "datetim": 8, "child": 8, "interpolate_field": 8, "target": 8, "symlink_input": 8, "copy_input": 8, "archive_output_fil": 8, "print_var": 8, "get_geo": 8, "read_par": 8, "read_til": 8, "tile": 8, "mismatch": 8, "2d": 8, "valueerror": 8, "dimens": 8, "doe": 8, "line": 8, "read_field": 8, "encapsul": 8, "determinist": 8, "individu": 8, "actual": 8, "psyurfex": 8, "dump_json": 8, "indent": 8, "update_set": 8, "sep": 8, "constuct": 8, "ensembl": 8, "soil_textur": 8, "realiz": 8, "datetime_util": 8, "surfx": 8, "axis_typ": 8, "dim_nam": 8, "1d": 8, "is_level": 8, "aci": 8, "error": 8, "rel": 8, "normal": 8, "background": 8, "get_stid_index": 8, "id": 8, "get_pos_index": 8, "get_ob": 8, "matching_ob": 8, "my_ob": 8, "write_json_fil": 8, "map": 8, "structur": 8, "look": 8, "inut": 8, "set_input": 8, "set_bin_fil": 8, "parse_fnam": 8, "filepattern": 8, "pars": 8, "substitute_str": 8, "system_vari": 8, "micro": 8, "subst": 8, "arbitrari": 8, "charact": 8, "gribvar": 8, "gribvariable1": 8, "avail": 8, "read_geo_info": 8, "gid": 8, "read_field_in_messag": 8, "parametercatergori": 8, "parameternumb": 8, "leveltyp": 8, "typeofstatisticalprocess": 8, "is_accumul": 8, "accumul": 8, "print_kei": 8, "generate_grib_id": 8, "prolog": 8, "check_pars": 8, "set_pgd_namelist": 8, "set_offline_namelist": 8, "nnco": 8, "cobs_m": 8, "set_soda_namelist": 8, "xerrobs_m": 8, "when": 8, "snow": 8, "nncv": 8, "cvar_m": 8, "xsigma_m": 8, "xtprt_m": 8, "epilog": 8, "overrid": 8, "overid": 8, "set_direct_data_namelist": 8, "lnamelist_sect": 8, "ldtype": 8, "ldname": 8, "linput_path": 8, "capitalize_namelist_dict": 8, "dict_in": 8, "capit": 8, "lower_case_namelist_dict": 8, "lower": 8, "case": 8, "merge_namelist_dict": 8, "old_dict": 8, "new_dict": 8, "old": 8, "ascii2nml": 8, "ascii_file2nml": 8, "input_fnam": 8, "input_fmt": 8, "wih": 8, "filnam": 8, "nml2ascii": 8, "output_fil": 8, "output_fmt": 8, "yaml": 8, "merge_json_namelist_fil": 8, "my_fil": 8, "existist": 8, "get_namelist": 8, "merged_dict": 8, "ok": 8, "prepare_offline_perturb": 8, "set_ob": 8, "sub": 8, "nam_block": 8, "vtype": 8, "veg": 8, "delet": 8, "get_filetype_from_suffix": 8, "suffix": 8, "prefer": 8, "instead": 8, "attribut": 8, "larger": 8, "than": 8, "frequenc": 8, "get_filenam": 8, "previoustim": 8, "previou": 8, "get_filehandl": 8, "handler": 8, "filehandl": 8, "read_var_field": 8, "read_var_point": 8, "set_var": 8, "grib1": 8, "instant": 8, "read_vari": 8, "print_variable_info": 8, "deaccumul": 8, "previous_field": 8, "should": 8, "get_basetim": 8, "allow_different_basetim": 8, "make": 8, "sens": 8, "rotate_geographic_wind": 8, "rotat": 8, "wind": 8, "_check_san": 8, "write_forc": 8, "this_tim": 8, "_define_forc": 8, "final": 8, "close": 8, "prepare_input": 8, "add_data": 8, "add": 8, "baseetim": 8, "get_nml_value2": 8, "nmlf90": 8, "get_nml_valu": 8, "get_nml_value_from_str": 8, "val": 8, "macro": 8, "pattern": 8, "caheck": 8, "were": 8, "read_macro_set": 8, "macro_def": 8, "separ": 8, "extend_macro": 8, "extend": 8, "process_macro": 8, "process": 8, "matching_valu": 8, "malform": 8, "process_data": 8, "mapped_data": 8, "print_ob": 8, "vectors2ob": 8, "obs2vector": 8, "format_lon": 8, "format_lat": 8, "get_pos_from_stid": 8, "get_stid_from_stationlist": 8, "stationlist": 8, "assembli": 8, "order": 8, "flatten_config": 8, "flatten": 8, "flat": 8, "namelist_block": 8, "build": 8, "genrat": 8, "check_nml_set": 8, "problem": 8, "concist": 8, "assemble_namelist": 8, "nlre": 8, "where": 8, "result": 8, "nam": 8, "fort": 8, "exseg1": 8, "typic": 8, "flatten_list": 8, "li": 8, "recurs": 8, "find_num": 8, "un": 8, "quot": 8, "number": 8, "__call__": 8, "parser": 8, "namespac": 8, "td2rh": 8, "t_d": 8, "kelvin": 8, "dew": 8, "probabl": 8, "humid": 8, "percent": 8, "inside_window": 8, "obs_dtg": 8, "window": 8, "as_timedelta": 8, "write_json": 8, "size": 8, "perform": 8, "set_flag": 8, "global_flag": 8, "global": 8, "minimum": 8, "maximum": 8, "102": 8, "wa": 8, "properli": 8, "diff": 8, "108": 8, "min": 8, "151": 8, "epsilon": 8, "105": 8, "104": 8, "103": 8, "__": 8, "115": 8, "same": 8, "length": 8, "both": 8, "199": 8, "101": 8, "els": 8, "perform_test": 8, "write_output": 8, "custom": 8, "itanlib": 8, "what": 8, "first_guess": 8, "get_departur": 8, "get_valu": 8, "equival": 8, "get_geo_object": 8, "set_domain": 8, "hm_mode": 8, "shape2ign": 8, "catchment": 8, "infil": 8, "ref_proj": 8, "shape": 8, "fill_field": 8, "field_tmp": 8, "radiu": 8, "fill": 8, "grid2point": 8, "elev_gradi": 8, "gradient": 8, "downscal": 8, "inside_grid": 8, "grid_lon": 8, "grid_lat": 8, "p_lon": 8, "p_lat": 8, "2500": 8, "neighbour": 8, "boolean": 8, "sum_neighbour_point": 8, "twodfield": 8, "sum": 8, "neighbourhood": 8, "create_working_dir": 8, "workdir": 8, "enter": 8, "clean_working_dir": 8, "clean": 8, "guess_file_format": 8, "ftype": 8, "known": 8, "wish": 8, "auto": 8, "decid": 8, "get_geo_and_config_from_cmd": 8, "run_first_guess_for_oi": 8, "run_masterodb": 8, "run_gridpp": 8, "run_titan": 8, "run_oi2soda": 8, "oi2soda": 8, "run_hm2pysurfex": 8, "set_geo_from_stationlist": 8, "sentinel_ob": 8, "qc2obsmon": 8, "inputyp": 8, "plot_field": 8, "perturbed_offlin": 8, "cli_oi2soda": 8, "cli_modify_forc": 8, "cli_merge_qc_data": 8, "hm2pysurfex": 8, "first_guess_for_oi": 8, "cryoclim_pseudoob": 8, "create_namelist": 8, "create_lsm_file_assim": 8, "bufr2json": 8, "obs2json": 8, "cli_set_domain": 8, "cli_set_geo_from_obs_set": 8, "cli_set_geo_from_stationlist": 8, "cli_shape2ign": 8, "read_first_guess_netcdf_fil": 8, "gelev": 8, "t2m": 8, "rh2m": 8, "s_d": 8, "s_m": 8, "humidii": 8, "depth": 8, "moistur": 8, "least": 8, "read_cryoclim_nc": 8, "crycoclim": 8, "grid_snow_class": 8, "read_sentinel_nc": 8, "input_method": 8, "get_datasourc": 8, "obs_tim": 8, "unknown": 8, "obsmon": 8, "open_db": 8, "dbname": 8, "databas": 8, "sqlite": 8, "sqlite3": 8, "close_db": 8, "conn": 8, "create_db": 8, "stat_col": 8, "populate_usage_db": 8, "popul": 8, "rmse": 8, "predict": 8, "squar": 8, "absbia": 8, "absolut": 8, "bia": 8, "calculate_statist": 8, "statist": 8, "populate_obsmon_db": 8, "write_obsmon_sqlite_fil": 8, "util": 8, "merge_toml_env": 8, "old_env": 8, "mod": 8, "merge_toml_env_from_fil": 8, "toml_fil": 8, "deep_upd": 8, "place": 8, "delta": 8, "remove_existing_fil": 8, "f_in": 8, "f_out": 8, "remov": 8, "isadirectoryerror": 8, "parse_filepattern": 8, "file_pattern": 8, "write_formatted_arrai": 8, "column": 8, "run_time_loop": 8, "loop": 8, "set_forcing_config": 8, "modify_forc": 8, "parse_args_create_forc": 8, "parse_args_modify_forc": 8, "parse_args_qc2obsmon": 8, "parse_args_dump_environ": 8, "dum": 8, "parse_args_first_guess_for_oi": 8, "firstguess4oi": 8, "parse_args_masterodb": 8, "parse_args_create_namelist": 8, "parse_args_gridpp": 8, "parse_args_titan": 8, "parse_args_oi2soda": 8, "parse_args_lsm_file_assim": 8, "land": 8, "parse_args_hm2pysurfex": 8, "parse_args_bufr2json": 8, "parse_args_obs2json": 8, "parse_args_plot_point": 8, "parse_args_plot_field": 8, "get_variables_from_arg": 8, "argumentpars": 8, "sett": 8, "keyword": 8, "parse_args_set_geo_from_obs_set": 8, "parse_args_set_geo_from_stationlist": 8, "parse_args_merge_qc_data": 8, "parse_timeseries2json": 8, "parse_cryoclim_pseudoob": 8, "cryoclim": 8, "pseudo": 8, "variable_pars": 8, "needl": 8, "parse_sentinel_ob": 8, "parse_args_shape2ign": 8, "fiel": 8, "parse_set_domain": 8, "as_datetime_str": 8, "offsetawar": 8, "awar": 8, "second": 8, "timedelta": 8, "fromtimestamp": 8, "timestamp": 8, "utcfromtimestamp": 8, "epochtim": 8, "isdatetim": 8, "obj": 8, "as_datetime_arg": 8, "year": 8, "dai": 8, "hour": 8, "minut": 8, "arg": 8, "define_quality_control": 8, "test_list": 8, "needd": 8, "fg": 8, "fraction_geo": 8, "merge_json_qc_data_set": 8, "qc_flag": 8, "skip_flag": 8, "skip": 8, "ref": 8, "readm": 8, "search": 8, "page": 8}, "objects": {"pysurfex.binary_input": [[8, 0, 1, "", "InputDataFromNamelist"], [8, 0, 1, "", "InputDataToSurfexBinaries"], [8, 0, 1, "", "JsonInputData"], [8, 0, 1, "", "JsonInputDataFromFile"], [8, 0, 1, "", "JsonOutputData"], [8, 0, 1, "", "JsonOutputDataFromFile"], [8, 0, 1, "", "OutputDataFromSurfexBinaries"]], "pysurfex.binary_input.InputDataFromNamelist": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "extend_macro"], [8, 1, 1, "", "get_nml_value"], [8, 1, 1, "", "get_nml_value2"], [8, 1, 1, "", "get_nml_value_from_string"], [8, 1, 1, "", "matching_value"], [8, 1, 1, "", "process_data"], [8, 1, 1, "", "process_macro"], [8, 1, 1, "", "read_macro_setting"], [8, 1, 1, "", "substitute"]], "pysurfex.binary_input.InputDataToSurfexBinaries": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputData": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "add_data"], [8, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonInputDataFromFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "prepare_input"]], "pysurfex.binary_input.JsonOutputData": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "archive_files"]], "pysurfex.binary_input.JsonOutputDataFromFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "archive_files"]], "pysurfex.binary_input.OutputDataFromSurfexBinaries": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "archive_files"]], "pysurfex.binary_input_legacy": [[8, 0, 1, "", "InlineForecastInputData"], [8, 0, 1, "", "OfflineInputData"], [8, 0, 1, "", "PgdInputData"], [8, 0, 1, "", "PrepInputData"], [8, 0, 1, "", "SodaInputData"]], "pysurfex.binary_input_legacy.InlineForecastInputData": [[8, 1, 1, "", "__init__"]], "pysurfex.binary_input_legacy.OfflineInputData": [[8, 1, 1, "", "__init__"]], "pysurfex.binary_input_legacy.PgdInputData": [[8, 1, 1, "", "__init__"]], "pysurfex.binary_input_legacy.SodaInputData": [[8, 1, 1, "", "set_input_observations"], [8, 1, 1, "", "set_input_sea_assimilation"], [8, 1, 1, "", "set_input_vertical_soil_oi"]], "pysurfex.bufr": [[8, 0, 1, "", "BufrObservationSet"]], "pysurfex.bufr.BufrObservationSet": [[8, 1, 1, "", "inside_window"], [8, 1, 1, "", "td2rh"]], "pysurfex.cli": [[8, 2, 1, "", "bufr2json"], [8, 2, 1, "", "cli_merge_qc_data"], [8, 2, 1, "", "cli_modify_forcing"], [8, 2, 1, "", "cli_oi2soda"], [8, 2, 1, "", "cli_set_domain"], [8, 2, 1, "", "cli_set_geo_from_obs_set"], [8, 2, 1, "", "cli_set_geo_from_stationlist"], [8, 2, 1, "", "cli_shape2ign"], [8, 2, 1, "", "create_forcing"], [8, 2, 1, "", "create_lsm_file_assim"], [8, 2, 1, "", "create_namelist"], [8, 2, 1, "", "cryoclim_pseudoobs"], [8, 2, 1, "", "dump_environ"], [8, 2, 1, "", "first_guess_for_oi"], [8, 2, 1, "", "get_geo_and_config_from_cmd"], [8, 2, 1, "", "gridpp"], [8, 2, 1, "", "hm2pysurfex"], [8, 2, 1, "", "masterodb"], [8, 2, 1, "", "obs2json"], [8, 2, 1, "", "offline"], [8, 2, 1, "", "perturbed_offline"], [8, 2, 1, "", "pgd"], [8, 2, 1, "", "plot_field"], [8, 2, 1, "", "plot_points"], [8, 2, 1, "", "prep"], [8, 2, 1, "", "qc2obsmon"], [8, 2, 1, "", "run_first_guess_for_oi"], [8, 2, 1, "", "run_gridpp"], [8, 2, 1, "", "run_hm2pysurfex"], [8, 2, 1, "", "run_masterodb"], [8, 2, 1, "", "run_oi2soda"], [8, 2, 1, "", "run_surfex_binary"], [8, 2, 1, "", "run_titan"], [8, 2, 1, "", "sentinel_obs"], [8, 2, 1, "", "set_geo_from_stationlist"], [8, 2, 1, "", "soda"], [8, 2, 1, "", "titan"]], "pysurfex.cmd_parsing": [[8, 0, 1, "", "LoadFromFile"], [8, 2, 1, "", "get_variables_from_args"], [8, 2, 1, "", "parse_args_bufr2json"], [8, 2, 1, "", "parse_args_create_forcing"], [8, 2, 1, "", "parse_args_create_namelist"], [8, 2, 1, "", "parse_args_dump_environ"], [8, 2, 1, "", "parse_args_first_guess_for_oi"], [8, 2, 1, "", "parse_args_gridpp"], [8, 2, 1, "", "parse_args_hm2pysurfex"], [8, 2, 1, "", "parse_args_lsm_file_assim"], [8, 2, 1, "", "parse_args_masterodb"], [8, 2, 1, "", "parse_args_merge_qc_data"], [8, 2, 1, "", "parse_args_modify_forcing"], [8, 2, 1, "", "parse_args_obs2json"], [8, 2, 1, "", "parse_args_oi2soda"], [8, 2, 1, "", "parse_args_plot_field"], [8, 2, 1, "", "parse_args_plot_points"], [8, 2, 1, "", "parse_args_qc2obsmon"], [8, 2, 1, "", "parse_args_set_geo_from_obs_set"], [8, 2, 1, "", "parse_args_set_geo_from_stationlist"], [8, 2, 1, "", "parse_args_shape2ign"], [8, 2, 1, "", "parse_args_surfex_binary"], [8, 2, 1, "", "parse_args_titan"], [8, 2, 1, "", "parse_cryoclim_pseudoobs"], [8, 2, 1, "", "parse_sentinel_obs"], [8, 2, 1, "", "parse_set_domain"], [8, 2, 1, "", "parse_timeseries2json"], [8, 2, 1, "", "variable_parser"]], "pysurfex.cmd_parsing.LoadFromFile": [[8, 1, 1, "", "__call__"]], "pysurfex.configuration": [[8, 0, 1, "", "Configuration"], [8, 0, 1, "", "ConfigurationFromHarmonie"], [8, 0, 1, "", "ConfigurationFromHarmonieAndConfigFile"], [8, 0, 1, "", "ConfigurationFromTomlFile"]], "pysurfex.configuration.Configuration": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "dump_json"], [8, 1, 1, "", "update_setting"]], "pysurfex.configuration.ConfigurationFromHarmonie": [[8, 1, 1, "", "__init__"]], "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile": [[8, 1, 1, "", "__init__"]], "pysurfex.configuration.ConfigurationFromTomlFile": [[8, 1, 1, "", "__init__"]], "pysurfex.datetime_utils": [[8, 2, 1, "", "as_datetime"], [8, 2, 1, "", "as_datetime_args"], [8, 2, 1, "", "as_datetime_string"], [8, 2, 1, "", "as_timedelta"], [8, 2, 1, "", "fromtimestamp"], [8, 2, 1, "", "isdatetime"], [8, 2, 1, "", "offsetaware"], [8, 2, 1, "", "utcfromtimestamp"]], "pysurfex.ecoclimap": [[8, 0, 1, "", "Ecoclimap"], [8, 0, 1, "", "EcoclimapSG"], [8, 0, 1, "", "ExternalSurfexInputFile"]], "pysurfex.ecoclimap.Ecoclimap": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_bin_files"], [8, 1, 1, "", "set_input"]], "pysurfex.ecoclimap.EcoclimapSG": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "parse_fnames"], [8, 1, 1, "", "set_bin_files"], [8, 1, 1, "", "set_input"]], "pysurfex.ecoclimap.ExternalSurfexInputFile": [[8, 1, 1, "", "__init__"]], "pysurfex.fa": [[8, 0, 1, "", "Fa"]], "pysurfex.fa.Fa": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"]], "pysurfex.file": [[8, 0, 1, "", "AsciiSurfexFile"], [8, 0, 1, "", "FaSurfexFile"], [8, 0, 1, "", "ForcingFileNetCDF"], [8, 0, 1, "", "NCSurfexFile"], [8, 0, 1, "", "NetCDFSurfexFile"], [8, 0, 1, "", "PGDFile"], [8, 0, 1, "", "PREPFile"], [8, 0, 1, "", "SURFFile"], [8, 0, 1, "", "SurfFileTypeExtension"], [8, 0, 1, "", "SurfexFileVariable"], [8, 0, 1, "", "SurfexIO"], [8, 0, 1, "", "SurfexSurfIO"], [8, 0, 1, "", "TexteSurfexFile"], [8, 2, 1, "", "guess_file_format"]], "pysurfex.file.AsciiSurfexFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "get_geo"], [8, 1, 1, "", "points"], [8, 1, 1, "", "read"]], "pysurfex.file.FaSurfexFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"]], "pysurfex.file.ForcingFileNetCDF": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"], [8, 1, 1, "", "read_field"]], "pysurfex.file.NCSurfexFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "get_geo"], [8, 1, 1, "", "points"]], "pysurfex.file.NetCDFSurfexFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"], [8, 1, 1, "", "read"]], "pysurfex.file.SurfFileTypeExtension": [[8, 1, 1, "", "__init__"]], "pysurfex.file.SurfexFileVariable": [[8, 1, 1, "", "print_var"]], "pysurfex.file.SurfexIO": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "interpolate_field"], [8, 1, 1, "", "points"]], "pysurfex.file.SurfexSurfIO": [[8, 1, 1, "", "archive_output_file"], [8, 1, 1, "", "copy_input"], [8, 1, 1, "", "symlink_input"]], "pysurfex.file.TexteSurfexFile": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"], [8, 1, 1, "", "read"]], "pysurfex.forcing": [[8, 0, 1, "", "AsciiOutput"], [8, 0, 1, "", "NetCDFOutput"], [8, 0, 1, "", "SurfexForcing"], [8, 0, 1, "", "SurfexNetCDFForcing"], [8, 0, 1, "", "SurfexOutputForcing"], [8, 2, 1, "", "modify_forcing"], [8, 2, 1, "", "run_time_loop"], [8, 2, 1, "", "set_forcing_config"], [8, 2, 1, "", "write_formatted_array"]], "pysurfex.forcing.AsciiOutput": [[8, 1, 1, "", "_define_forcing"], [8, 1, 1, "", "finalize"], [8, 1, 1, "", "write_forcing"]], "pysurfex.forcing.NetCDFOutput": [[8, 1, 1, "", "_define_forcing"], [8, 1, 1, "", "finalize"], [8, 1, 1, "", "write_forcing"]], "pysurfex.forcing.SurfexForcing": [[8, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexNetCDFForcing": [[8, 1, 1, "", "__init__"]], "pysurfex.forcing.SurfexOutputForcing": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "_check_sanity"], [8, 1, 1, "", "write_forcing"]], "pysurfex.geo": [[8, 0, 1, "", "Cartesian"], [8, 0, 1, "", "ConfProj"], [8, 0, 1, "", "Geo"], [8, 0, 1, "", "IGN"], [8, 0, 1, "", "LonLatReg"], [8, 0, 1, "", "LonLatVal"], [8, 0, 1, "", "SurfexGeo"], [8, 2, 1, "", "get_geo_object"], [8, 2, 1, "", "set_domain"], [8, 2, 1, "", "shape2ign"]], "pysurfex.geo.Cartesian": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.geo.ConfProj": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.geo.Geo": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "identifier"], [8, 1, 1, "", "is_identical"], [8, 1, 1, "", "write_proj_info"]], "pysurfex.geo.IGN": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "get_coord"], [8, 1, 1, "", "ign_mask"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatReg": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.geo.LonLatVal": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.geo.SurfexGeo": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "subset"], [8, 1, 1, "", "update_namelist"]], "pysurfex.grib": [[8, 0, 1, "", "Grib"], [8, 0, 1, "", "Grib2Variable"]], "pysurfex.grib.Grib": [[8, 1, 1, "id0", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"], [8, 1, 1, "", "read_field_in_message"], [8, 1, 1, "", "read_geo_info"]], "pysurfex.grib.Grib2Variable": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "generate_grib_id"], [8, 1, 1, "", "is_accumulated"], [8, 1, 1, "", "matches"], [8, 1, 1, "", "print_keys"]], "pysurfex.input_methods": [[8, 2, 1, "", "get_datasources"]], "pysurfex.interpolation": [[8, 0, 1, "", "Interpolation"], [8, 0, 1, "", "ObsOperator"], [8, 2, 1, "", "fill_field"], [8, 2, 1, "", "grid2points"], [8, 2, 1, "", "inside_grid"], [8, 2, 1, "", "sum_neighbour_points"]], "pysurfex.interpolation.Interpolation": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "alpha_grid_rot"], [8, 1, 1, "", "distance"], [8, 1, 1, "", "interpolate"], [8, 1, 1, "", "rotate_wind_to_geographic"]], "pysurfex.interpolation.ObsOperator": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "get_obs_value"], [8, 1, 1, "", "is_in_grid"]], "pysurfex.namelist": [[8, 0, 1, "", "NamelistGenerator"]], "pysurfex.namelist.NamelistGenerator": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "assemble_namelist"], [8, 1, 1, "", "check_nml_setting"], [8, 1, 1, "", "concistency"], [8, 1, 1, "", "find_num"], [8, 1, 1, "", "flatten_config"], [8, 1, 1, "", "flatten_list"], [8, 1, 1, "", "get_filetype_from_suffix"], [8, 1, 1, "", "get_namelist"], [8, 1, 1, "", "namelist_blocks"], [8, 1, 1, "", "write"]], "pysurfex.namelist_legacy": [[8, 0, 1, "", "BaseNamelist"], [8, 0, 1, "", "Namelist"]], "pysurfex.namelist_legacy.BaseNamelist": [[8, 1, 1, "", "ascii2nml"], [8, 1, 1, "", "ascii_file2nml"], [8, 1, 1, "", "capitalize_namelist_dict"], [8, 1, 1, "", "epilog"], [8, 1, 1, "", "get_namelist"], [8, 1, 1, "", "lower_case_namelist_dict"], [8, 1, 1, "", "merge_json_namelist_file"], [8, 1, 1, "", "merge_namelist_dicts"], [8, 1, 1, "", "nml2ascii"], [8, 1, 1, "", "override"], [8, 1, 1, "", "prolog"], [8, 1, 1, "", "set_direct_data_namelist"], [8, 1, 1, "", "set_offline_namelist"], [8, 1, 1, "", "set_pgd_namelist"], [8, 1, 1, "", "set_soda_namelist"]], "pysurfex.namelist_legacy.Namelist": [[8, 1, 1, "", "ascii2nml"], [8, 1, 1, "", "ascii_file2nml"], [8, 1, 1, "", "capitalize_namelist_dict"], [8, 1, 1, "", "delete"], [8, 1, 1, "", "epilog"], [8, 1, 1, "", "get_filetype_from_suffix"], [8, 1, 1, "", "get_namelist"], [8, 1, 1, "", "lower_case_namelist_dict"], [8, 1, 1, "", "merge_json_namelist_file"], [8, 1, 1, "", "merge_namelist_dicts"], [8, 1, 1, "", "nml2ascii"], [8, 1, 1, "", "override"], [8, 1, 1, "", "prepare_offline_perturbation"], [8, 1, 1, "", "prolog"], [8, 1, 1, "", "set_direct_data_namelist"], [8, 1, 1, "", "set_obs"], [8, 1, 1, "", "set_offline_namelist"], [8, 1, 1, "", "set_pgd_namelist"], [8, 1, 1, "", "set_soda_namelist"], [8, 1, 1, "", "sub"]], "pysurfex.netcdf": [[8, 0, 1, "", "Axis"], [8, 0, 1, "", "NetCDFFileVariable"], [8, 0, 1, "", "NetCDFReadVariable"], [8, 0, 1, "", "Netcdf"], [8, 2, 1, "", "oi2soda"], [8, 2, 1, "", "read_cryoclim_nc"], [8, 2, 1, "", "read_first_guess_netcdf_file"], [8, 2, 1, "", "read_sentinel_nc"]], "pysurfex.netcdf.NetCDFFileVariable": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "axis_types"], [8, 1, 1, "", "datetimes"], [8, 1, 1, "", "dim_names"], [8, 1, 1, "", "is_level"], [8, 1, 1, "", "lats"], [8, 1, 1, "", "levels"], [8, 1, 1, "", "lons"], [8, 1, 1, "", "members"], [8, 1, 1, "", "times"], [8, 1, 1, "", "units"]], "pysurfex.netcdf.NetCDFReadVariable": [[8, 1, 1, "", "__init__"]], "pysurfex.netcdf.Netcdf": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "field"], [8, 1, 1, "", "points"]], "pysurfex.obs": [[8, 0, 1, "", "JsonObservationSet"], [8, 0, 1, "", "MetFrostObservations"], [8, 0, 1, "", "NetatmoObservationSet"], [8, 0, 1, "", "ObservationFromTitanJsonFile"], [8, 0, 1, "", "ObservationSet"]], "pysurfex.obs.JsonObservationSet": [[8, 1, 1, "", "__init__"]], "pysurfex.obs.ObservationFromTitanJsonFile": [[8, 1, 1, "", "__init__"]], "pysurfex.obs.ObservationSet": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "get_obs"], [8, 1, 1, "", "get_pos_index"], [8, 1, 1, "", "get_stid_index"], [8, 1, 1, "", "matching_obs"], [8, 1, 1, "", "points"], [8, 1, 1, "", "write_json_file"]], "pysurfex.observation": [[8, 0, 1, "", "Observation"]], "pysurfex.observation.Observation": [[8, 1, 1, "", "format_lat"], [8, 1, 1, "", "format_lon"], [8, 1, 1, "", "get_pos_from_stid"], [8, 1, 1, "", "get_stid_from_stationlist"], [8, 1, 1, "", "obs2vectors"], [8, 1, 1, "", "print_obs"], [8, 1, 1, "", "vectors2obs"]], "pysurfex.obsmon": [[8, 2, 1, "", "absbias"], [8, 2, 1, "", "calculate_statistics"], [8, 2, 1, "", "close_db"], [8, 2, 1, "", "create_db"], [8, 2, 1, "", "mean"], [8, 2, 1, "", "open_db"], [8, 2, 1, "", "populate_obsmon_db"], [8, 2, 1, "", "populate_usage_db"], [8, 2, 1, "", "rmse"], [8, 2, 1, "", "write_obsmon_sqlite_file"]], "pysurfex.obsoul": [[8, 0, 1, "", "ObservationDataSetFromObsoul"], [8, 0, 1, "", "ObservationDataSetFromObsoulFile"]], "pysurfex.platform_deps": [[8, 0, 1, "", "SystemFilePaths"], [8, 0, 1, "", "SystemFilePathsFromFile"]], "pysurfex.platform_deps.SystemFilePaths": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "substitute_string"]], "pysurfex.platform_deps.SystemFilePathsFromFile": [[8, 1, 1, "", "__init__"]], "pysurfex.pseudoobs": [[8, 0, 1, "", "CryoclimObservationSet"], [8, 0, 1, "", "SentinelObservationSet"]], "pysurfex.read": [[8, 0, 1, "", "ConstantValue"], [8, 0, 1, "", "ConvertedInput"], [8, 0, 1, "", "Converter"], [8, 0, 1, "", "ReadData"]], "pysurfex.read.ConstantValue": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "print_info"], [8, 1, 1, "", "read_time_step"]], "pysurfex.read.ConvertedInput": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "print_info"], [8, 1, 1, "", "read_time_step"]], "pysurfex.read.Converter": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "create_variable"], [8, 1, 1, "", "mslp2ps"], [8, 1, 1, "", "print_info"], [8, 1, 1, "", "read_time_step"]], "pysurfex.read.ReadData": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "print_info"], [8, 1, 1, "", "read_time_step"]], "pysurfex.run": [[8, 0, 1, "", "BatchJob"], [8, 0, 1, "", "Masterodb"], [8, 0, 1, "", "PerturbedOffline"], [8, 0, 1, "", "SURFEXBinary"], [8, 2, 1, "", "clean_working_dir"], [8, 2, 1, "", "create_working_dir"]], "pysurfex.run.BatchJob": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "run"]], "pysurfex.run.Masterodb": [[8, 1, 1, "", "archive_output"]], "pysurfex.run.SURFEXBinary": [[8, 1, 1, "", "__init__"]], "pysurfex.timeseries": [[8, 0, 1, "", "TimeSeries"], [8, 0, 1, "", "TimeSeriesFromConverter"]], "pysurfex.timeseries.TimeSeries": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "write_json"]], "pysurfex.titan": [[8, 0, 1, "", "Blacklist"], [8, 0, 1, "", "Buddy"], [8, 0, 1, "", "Climatology"], [8, 0, 1, "", "Departure"], [8, 0, 1, "", "DomainCheck"], [8, 0, 1, "", "FirstGuess"], [8, 0, 1, "", "Fraction"], [8, 0, 1, "", "NoMeta"], [8, 0, 1, "", "Plausibility"], [8, 0, 1, "", "QCDataSet"], [8, 0, 1, "", "QualityControl"], [8, 0, 1, "", "Redundancy"], [8, 0, 1, "", "Sct"], [8, 0, 1, "", "TitanDataSet"], [8, 2, 1, "", "define_quality_control"], [8, 2, 1, "", "merge_json_qc_data_sets"]], "pysurfex.titan.Blacklist": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Buddy": [[8, 1, 1, "", "test"]], "pysurfex.titan.Climatology": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Departure": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "get_departure"], [8, 1, 1, "", "get_values"]], "pysurfex.titan.DomainCheck": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.FirstGuess": [[8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Fraction": [[8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.NoMeta": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Plausibility": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.QCDataSet": [[8, 1, 1, "", "get_pos_index"], [8, 1, 1, "", "get_stid_index"], [8, 1, 1, "", "perform_tests"], [8, 1, 1, "", "write_output"]], "pysurfex.titan.QualityControl": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_flags"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Redundancy": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.Sct": [[8, 1, 1, "", "set_input"], [8, 1, 1, "", "test"]], "pysurfex.titan.TitanDataSet": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "perform_tests"]], "pysurfex.util": [[8, 2, 1, "", "deep_update"], [8, 2, 1, "", "merge_toml_env"], [8, 2, 1, "", "merge_toml_env_from_files"], [8, 2, 1, "", "parse_filepattern"], [8, 2, 1, "", "remove_existing_file"]], "pysurfex.variable": [[8, 0, 1, "", "Variable"]], "pysurfex.variable.Variable": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "deaccumulate"], [8, 1, 1, "", "get_basetime"], [8, 1, 1, "", "get_filehandler"], [8, 1, 1, "", "get_filename"], [8, 1, 1, "", "print_variable_info"], [8, 1, 1, "", "read_var_field"], [8, 1, 1, "", "read_var_points"], [8, 1, 1, "", "read_variable"], [8, 1, 1, "", "rotate_geographic_wind"], [8, 1, 1, "", "set_var"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"The": 1, "mit": 1, "licens": 1, "author": 2, "python": [6, 8], "api": [6, 8], "surfex": [6, 7, 8], "pysurfex": [6, 8], "instal": [6, 8], "pregener": [6, 8], "packag": [6, 8], "from": [6, 7, 8], "pypi": [6, 8], "pip": [6, 8], "run": [6, 7, 8], "pre": [6, 8], "built": [6, 8], "contain": [6, 8], "debian": [6, 8], "base": [6, 8], "linux": [6, 8], "system": [6, 8], "gener": [6, 8], "depend": [6, 8], "client": [6, 8], "applic": [6, 8], "exampl": [6, 7, 8], "creat": [7, 8], "forc": [7, 8], "met": [7, 8], "nordic": [7, 8], "analysi": [7, 8], "binari": [7, 8], "plot": [7, 8], "mep": [7, 8], "data": [7, 8], "thredd": [7, 8], "document": 8, "class": 8, "method": 8, "indic": 8, "tabl": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"The MIT License (MIT)": [[1, "the-mit-license-mit"]], "Authors": [[2, "authors"]], "Python API to SURFEX (pysurfex)": [[6, "python-api-to-surfex-pysurfex"], [8, "python-api-to-surfex-pysurfex"]], "Installation of pregenerated packages from pypi (pip)": [[6, "installation-of-pregenerated-packages-from-pypi-pip"], [8, "installation-of-pregenerated-packages-from-pypi-pip"]], "Run pysurfex from pre-built container": [[6, "run-pysurfex-from-pre-built-container"], [8, "run-pysurfex-from-pre-built-container"]], "Installation on debian based Linux system": [[6, "installation-on-debian-based-linux-system"], [8, "installation-on-debian-based-linux-system"]], "General dependencies (from pypi)": [[6, "general-dependencies-from-pypi"], [8, "general-dependencies-from-pypi"]], "Install pysurfex": [[6, "install-pysurfex"], [8, "install-pysurfex"]], "Run pysurfex client applications": [[6, "run-pysurfex-client-applications"], [6, "id1"], [8, "run-pysurfex-client-applications"], [8, "id1"]], "Examples": [[6, "examples"], [7, "examples"], [8, "examples"], [8, "id2"]], "Create forcing from MET-Nordic analysis": [[7, "create-forcing-from-met-nordic-analysis"], [8, "create-forcing-from-met-nordic-analysis"]], "Run SURFEX binaries": [[7, "run-surfex-binaries"], [8, "run-surfex-binaries"]], "Plot MEPS data from thredds": [[7, "plot-meps-data-from-thredds"], [8, "plot-meps-data-from-thredds"]], "PYSURFEX documentation": [[8, "pysurfex-documentation"]], "Classes": [[8, "classes"]], "Class methods": [[8, "class-methods"]], "Methods": [[8, "methods"]], "Indices and tables": [[8, "indices-and-tables"]]}, "indexentries": {"asciioutput (class in pysurfex.forcing)": [[8, "pysurfex.forcing.AsciiOutput"]], "asciisurfexfile (class in pysurfex.file)": [[8, "pysurfex.file.AsciiSurfexFile"]], "axis (class in pysurfex.netcdf)": [[8, "pysurfex.netcdf.Axis"]], "basenamelist (class in pysurfex.namelist_legacy)": [[8, "pysurfex.namelist_legacy.BaseNamelist"]], "batchjob (class in pysurfex.run)": [[8, "pysurfex.run.BatchJob"]], "blacklist (class in pysurfex.titan)": [[8, "pysurfex.titan.Blacklist"]], "buddy (class in pysurfex.titan)": [[8, "pysurfex.titan.Buddy"]], "bufrobservationset (class in pysurfex.bufr)": [[8, "pysurfex.bufr.BufrObservationSet"]], "cartesian (class in pysurfex.geo)": [[8, "pysurfex.geo.Cartesian"]], "climatology (class in pysurfex.titan)": [[8, "pysurfex.titan.Climatology"]], "confproj (class in pysurfex.geo)": [[8, "pysurfex.geo.ConfProj"]], "configuration (class in pysurfex.configuration)": [[8, "pysurfex.configuration.Configuration"]], "configurationfromharmonie (class in pysurfex.configuration)": [[8, "pysurfex.configuration.ConfigurationFromHarmonie"]], "configurationfromharmonieandconfigfile (class in pysurfex.configuration)": [[8, "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile"]], "configurationfromtomlfile (class in pysurfex.configuration)": [[8, "pysurfex.configuration.ConfigurationFromTomlFile"]], "constantvalue (class in pysurfex.read)": [[8, "pysurfex.read.ConstantValue"]], "convertedinput (class in pysurfex.read)": [[8, "pysurfex.read.ConvertedInput"]], "converter (class in pysurfex.read)": [[8, "pysurfex.read.Converter"]], "cryoclimobservationset (class in pysurfex.pseudoobs)": [[8, "pysurfex.pseudoobs.CryoclimObservationSet"]], "departure (class in pysurfex.titan)": [[8, "pysurfex.titan.Departure"]], "domaincheck (class in pysurfex.titan)": [[8, "pysurfex.titan.DomainCheck"]], "ecoclimap (class in pysurfex.ecoclimap)": [[8, "pysurfex.ecoclimap.Ecoclimap"]], "ecoclimapsg (class in pysurfex.ecoclimap)": [[8, "pysurfex.ecoclimap.EcoclimapSG"]], "externalsurfexinputfile (class in pysurfex.ecoclimap)": [[8, "pysurfex.ecoclimap.ExternalSurfexInputFile"]], "fa (class in pysurfex.fa)": [[8, "pysurfex.fa.Fa"]], "fasurfexfile (class in pysurfex.file)": [[8, "pysurfex.file.FaSurfexFile"]], "firstguess (class in pysurfex.titan)": [[8, "pysurfex.titan.FirstGuess"]], "forcingfilenetcdf (class in pysurfex.file)": [[8, "pysurfex.file.ForcingFileNetCDF"]], "fraction (class in pysurfex.titan)": [[8, "pysurfex.titan.Fraction"]], "geo (class in pysurfex.geo)": [[8, "pysurfex.geo.Geo"]], "grib (class in pysurfex.grib)": [[8, "pysurfex.grib.Grib"]], "grib2variable (class in pysurfex.grib)": [[8, "pysurfex.grib.Grib2Variable"]], "ign (class in pysurfex.geo)": [[8, "pysurfex.geo.IGN"]], "inlineforecastinputdata (class in pysurfex.binary_input_legacy)": [[8, "pysurfex.binary_input_legacy.InlineForecastInputData"]], "inputdatafromnamelist (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.InputDataFromNamelist"]], "inputdatatosurfexbinaries (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.InputDataToSurfexBinaries"]], "interpolation (class in pysurfex.interpolation)": [[8, "pysurfex.interpolation.Interpolation"]], "jsoninputdata (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.JsonInputData"]], "jsoninputdatafromfile (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.JsonInputDataFromFile"]], "jsonobservationset (class in pysurfex.obs)": [[8, "pysurfex.obs.JsonObservationSet"]], "jsonoutputdata (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.JsonOutputData"]], "jsonoutputdatafromfile (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.JsonOutputDataFromFile"]], "loadfromfile (class in pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.LoadFromFile"]], "lonlatreg (class in pysurfex.geo)": [[8, "pysurfex.geo.LonLatReg"]], "lonlatval (class in pysurfex.geo)": [[8, "pysurfex.geo.LonLatVal"]], "masterodb (class in pysurfex.run)": [[8, "pysurfex.run.Masterodb"]], "metfrostobservations (class in pysurfex.obs)": [[8, "pysurfex.obs.MetFrostObservations"]], "ncsurfexfile (class in pysurfex.file)": [[8, "pysurfex.file.NCSurfexFile"]], "namelist (class in pysurfex.namelist_legacy)": [[8, "pysurfex.namelist_legacy.Namelist"]], "namelistgenerator (class in pysurfex.namelist)": [[8, "pysurfex.namelist.NamelistGenerator"]], "netcdffilevariable (class in pysurfex.netcdf)": [[8, "pysurfex.netcdf.NetCDFFileVariable"]], "netcdfoutput (class in pysurfex.forcing)": [[8, "pysurfex.forcing.NetCDFOutput"]], "netcdfreadvariable (class in pysurfex.netcdf)": [[8, "pysurfex.netcdf.NetCDFReadVariable"]], "netcdfsurfexfile (class in pysurfex.file)": [[8, "pysurfex.file.NetCDFSurfexFile"]], "netatmoobservationset (class in pysurfex.obs)": [[8, "pysurfex.obs.NetatmoObservationSet"]], "netcdf (class in pysurfex.netcdf)": [[8, "pysurfex.netcdf.Netcdf"]], "nometa (class in pysurfex.titan)": [[8, "pysurfex.titan.NoMeta"]], "obsoperator (class in pysurfex.interpolation)": [[8, "pysurfex.interpolation.ObsOperator"]], "observation (class in pysurfex.observation)": [[8, "pysurfex.observation.Observation"]], "observationdatasetfromobsoul (class in pysurfex.obsoul)": [[8, "pysurfex.obsoul.ObservationDataSetFromObsoul"]], "observationdatasetfromobsoulfile (class in pysurfex.obsoul)": [[8, "pysurfex.obsoul.ObservationDataSetFromObsoulFile"]], "observationfromtitanjsonfile (class in pysurfex.obs)": [[8, "pysurfex.obs.ObservationFromTitanJsonFile"]], "observationset (class in pysurfex.obs)": [[8, "pysurfex.obs.ObservationSet"]], "offlineinputdata (class in pysurfex.binary_input_legacy)": [[8, "pysurfex.binary_input_legacy.OfflineInputData"]], "outputdatafromsurfexbinaries (class in pysurfex.binary_input)": [[8, "pysurfex.binary_input.OutputDataFromSurfexBinaries"]], "pgdfile (class in pysurfex.file)": [[8, "pysurfex.file.PGDFile"]], "prepfile (class in pysurfex.file)": [[8, "pysurfex.file.PREPFile"]], "perturbedoffline (class in pysurfex.run)": [[8, "pysurfex.run.PerturbedOffline"]], "pgdinputdata (class in pysurfex.binary_input_legacy)": [[8, "pysurfex.binary_input_legacy.PgdInputData"]], "plausibility (class in pysurfex.titan)": [[8, "pysurfex.titan.Plausibility"]], "prepinputdata (class in pysurfex.binary_input_legacy)": [[8, "pysurfex.binary_input_legacy.PrepInputData"]], "qcdataset (class in pysurfex.titan)": [[8, "pysurfex.titan.QCDataSet"]], "qualitycontrol (class in pysurfex.titan)": [[8, "pysurfex.titan.QualityControl"]], "readdata (class in pysurfex.read)": [[8, "pysurfex.read.ReadData"]], "redundancy (class in pysurfex.titan)": [[8, "pysurfex.titan.Redundancy"]], "surfexbinary (class in pysurfex.run)": [[8, "pysurfex.run.SURFEXBinary"]], "surffile (class in pysurfex.file)": [[8, "pysurfex.file.SURFFile"]], "sct (class in pysurfex.titan)": [[8, "pysurfex.titan.Sct"]], "sentinelobservationset (class in pysurfex.pseudoobs)": [[8, "pysurfex.pseudoobs.SentinelObservationSet"]], "sodainputdata (class in pysurfex.binary_input_legacy)": [[8, "pysurfex.binary_input_legacy.SodaInputData"]], "surffiletypeextension (class in pysurfex.file)": [[8, "pysurfex.file.SurfFileTypeExtension"]], "surfexfilevariable (class in pysurfex.file)": [[8, "pysurfex.file.SurfexFileVariable"]], "surfexforcing (class in pysurfex.forcing)": [[8, "pysurfex.forcing.SurfexForcing"]], "surfexgeo (class in pysurfex.geo)": [[8, "pysurfex.geo.SurfexGeo"]], "surfexio (class in pysurfex.file)": [[8, "pysurfex.file.SurfexIO"]], "surfexnetcdfforcing (class in pysurfex.forcing)": [[8, "pysurfex.forcing.SurfexNetCDFForcing"]], "surfexoutputforcing (class in pysurfex.forcing)": [[8, "pysurfex.forcing.SurfexOutputForcing"]], "surfexsurfio (class in pysurfex.file)": [[8, "pysurfex.file.SurfexSurfIO"]], "systemfilepaths (class in pysurfex.platform_deps)": [[8, "pysurfex.platform_deps.SystemFilePaths"]], "systemfilepathsfromfile (class in pysurfex.platform_deps)": [[8, "pysurfex.platform_deps.SystemFilePathsFromFile"]], "textesurfexfile (class in pysurfex.file)": [[8, "pysurfex.file.TexteSurfexFile"]], "timeseries (class in pysurfex.timeseries)": [[8, "pysurfex.timeseries.TimeSeries"]], "timeseriesfromconverter (class in pysurfex.timeseries)": [[8, "pysurfex.timeseries.TimeSeriesFromConverter"]], "titandataset (class in pysurfex.titan)": [[8, "pysurfex.titan.TitanDataSet"]], "variable (class in pysurfex.variable)": [[8, "pysurfex.variable.Variable"]], "__call__() (pysurfex.cmd_parsing.loadfromfile method)": [[8, "pysurfex.cmd_parsing.LoadFromFile.__call__"]], "__init__() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.__init__"]], "__init__() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[8, "pysurfex.binary_input.InputDataToSurfexBinaries.__init__"]], "__init__() (pysurfex.binary_input.jsoninputdata method)": [[8, "pysurfex.binary_input.JsonInputData.__init__"]], "__init__() (pysurfex.binary_input.jsoninputdatafromfile method)": [[8, "pysurfex.binary_input.JsonInputDataFromFile.__init__"]], "__init__() (pysurfex.binary_input.jsonoutputdata method)": [[8, "pysurfex.binary_input.JsonOutputData.__init__"]], "__init__() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[8, "pysurfex.binary_input.JsonOutputDataFromFile.__init__"]], "__init__() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[8, "pysurfex.binary_input.OutputDataFromSurfexBinaries.__init__"]], "__init__() (pysurfex.binary_input_legacy.inlineforecastinputdata method)": [[8, "pysurfex.binary_input_legacy.InlineForecastInputData.__init__"]], "__init__() (pysurfex.binary_input_legacy.offlineinputdata method)": [[8, "pysurfex.binary_input_legacy.OfflineInputData.__init__"]], "__init__() (pysurfex.binary_input_legacy.pgdinputdata method)": [[8, "pysurfex.binary_input_legacy.PgdInputData.__init__"]], "__init__() (pysurfex.configuration.configuration method)": [[8, "pysurfex.configuration.Configuration.__init__"]], "__init__() (pysurfex.configuration.configurationfromharmonie method)": [[8, "pysurfex.configuration.ConfigurationFromHarmonie.__init__"]], "__init__() (pysurfex.configuration.configurationfromharmonieandconfigfile method)": [[8, "pysurfex.configuration.ConfigurationFromHarmonieAndConfigFile.__init__"]], "__init__() (pysurfex.configuration.configurationfromtomlfile method)": [[8, "pysurfex.configuration.ConfigurationFromTomlFile.__init__"]], "__init__() (pysurfex.ecoclimap.ecoclimap method)": [[8, "pysurfex.ecoclimap.Ecoclimap.__init__"]], "__init__() (pysurfex.ecoclimap.ecoclimapsg method)": [[8, "pysurfex.ecoclimap.EcoclimapSG.__init__"]], "__init__() (pysurfex.ecoclimap.externalsurfexinputfile method)": [[8, "pysurfex.ecoclimap.ExternalSurfexInputFile.__init__"]], "__init__() (pysurfex.fa.fa method)": [[8, "pysurfex.fa.Fa.__init__"]], "__init__() (pysurfex.file.asciisurfexfile method)": [[8, "pysurfex.file.AsciiSurfexFile.__init__"]], "__init__() (pysurfex.file.fasurfexfile method)": [[8, "pysurfex.file.FaSurfexFile.__init__"]], "__init__() (pysurfex.file.forcingfilenetcdf method)": [[8, "pysurfex.file.ForcingFileNetCDF.__init__"]], "__init__() (pysurfex.file.ncsurfexfile method)": [[8, "pysurfex.file.NCSurfexFile.__init__"]], "__init__() (pysurfex.file.netcdfsurfexfile method)": [[8, "pysurfex.file.NetCDFSurfexFile.__init__"]], "__init__() (pysurfex.file.surffiletypeextension method)": [[8, "pysurfex.file.SurfFileTypeExtension.__init__"]], "__init__() (pysurfex.file.surfexio method)": [[8, "pysurfex.file.SurfexIO.__init__"]], "__init__() (pysurfex.file.textesurfexfile method)": [[8, "pysurfex.file.TexteSurfexFile.__init__"]], "__init__() (pysurfex.forcing.surfexforcing method)": [[8, "pysurfex.forcing.SurfexForcing.__init__"]], "__init__() (pysurfex.forcing.surfexnetcdfforcing method)": [[8, "pysurfex.forcing.SurfexNetCDFForcing.__init__"]], "__init__() (pysurfex.forcing.surfexoutputforcing method)": [[8, "pysurfex.forcing.SurfexOutputForcing.__init__"]], "__init__() (pysurfex.geo.cartesian method)": [[8, "pysurfex.geo.Cartesian.__init__"]], "__init__() (pysurfex.geo.confproj method)": [[8, "pysurfex.geo.ConfProj.__init__"]], "__init__() (pysurfex.geo.geo method)": [[8, "pysurfex.geo.Geo.__init__"]], "__init__() (pysurfex.geo.ign method)": [[8, "pysurfex.geo.IGN.__init__"]], "__init__() (pysurfex.geo.lonlatreg method)": [[8, "pysurfex.geo.LonLatReg.__init__"]], "__init__() (pysurfex.geo.lonlatval method)": [[8, "pysurfex.geo.LonLatVal.__init__"]], "__init__() (pysurfex.geo.surfexgeo method)": [[8, "pysurfex.geo.SurfexGeo.__init__"]], "__init__() (pysurfex.grib.grib method)": [[8, "id0"], [8, "pysurfex.grib.Grib.__init__"]], "__init__() (pysurfex.grib.grib2variable method)": [[8, "pysurfex.grib.Grib2Variable.__init__"]], "__init__() (pysurfex.interpolation.interpolation method)": [[8, "pysurfex.interpolation.Interpolation.__init__"]], "__init__() (pysurfex.interpolation.obsoperator method)": [[8, "pysurfex.interpolation.ObsOperator.__init__"]], "__init__() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.__init__"]], "__init__() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.__init__"]], "__init__() (pysurfex.netcdf.netcdfreadvariable method)": [[8, "pysurfex.netcdf.NetCDFReadVariable.__init__"]], "__init__() (pysurfex.netcdf.netcdf method)": [[8, "pysurfex.netcdf.Netcdf.__init__"]], "__init__() (pysurfex.obs.jsonobservationset method)": [[8, "pysurfex.obs.JsonObservationSet.__init__"]], "__init__() (pysurfex.obs.observationfromtitanjsonfile method)": [[8, "pysurfex.obs.ObservationFromTitanJsonFile.__init__"]], "__init__() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.__init__"]], "__init__() (pysurfex.platform_deps.systemfilepaths method)": [[8, "pysurfex.platform_deps.SystemFilePaths.__init__"]], "__init__() (pysurfex.platform_deps.systemfilepathsfromfile method)": [[8, "pysurfex.platform_deps.SystemFilePathsFromFile.__init__"]], "__init__() (pysurfex.read.constantvalue method)": [[8, "pysurfex.read.ConstantValue.__init__"]], "__init__() (pysurfex.read.convertedinput method)": [[8, "pysurfex.read.ConvertedInput.__init__"]], "__init__() (pysurfex.read.converter method)": [[8, "pysurfex.read.Converter.__init__"]], "__init__() (pysurfex.read.readdata method)": [[8, "pysurfex.read.ReadData.__init__"]], "__init__() (pysurfex.run.batchjob method)": [[8, "pysurfex.run.BatchJob.__init__"]], "__init__() (pysurfex.run.surfexbinary method)": [[8, "pysurfex.run.SURFEXBinary.__init__"]], "__init__() (pysurfex.timeseries.timeseries method)": [[8, "pysurfex.timeseries.TimeSeries.__init__"]], "__init__() (pysurfex.titan.blacklist method)": [[8, "pysurfex.titan.Blacklist.__init__"]], "__init__() (pysurfex.titan.climatology method)": [[8, "pysurfex.titan.Climatology.__init__"]], "__init__() (pysurfex.titan.departure method)": [[8, "pysurfex.titan.Departure.__init__"]], "__init__() (pysurfex.titan.domaincheck method)": [[8, "pysurfex.titan.DomainCheck.__init__"]], "__init__() (pysurfex.titan.nometa method)": [[8, "pysurfex.titan.NoMeta.__init__"]], "__init__() (pysurfex.titan.plausibility method)": [[8, "pysurfex.titan.Plausibility.__init__"]], "__init__() (pysurfex.titan.qualitycontrol method)": [[8, "pysurfex.titan.QualityControl.__init__"]], "__init__() (pysurfex.titan.redundancy method)": [[8, "pysurfex.titan.Redundancy.__init__"]], "__init__() (pysurfex.titan.titandataset method)": [[8, "pysurfex.titan.TitanDataSet.__init__"]], "__init__() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.__init__"]], "_check_sanity() (pysurfex.forcing.surfexoutputforcing method)": [[8, "pysurfex.forcing.SurfexOutputForcing._check_sanity"]], "_define_forcing() (pysurfex.forcing.asciioutput method)": [[8, "pysurfex.forcing.AsciiOutput._define_forcing"]], "_define_forcing() (pysurfex.forcing.netcdfoutput method)": [[8, "pysurfex.forcing.NetCDFOutput._define_forcing"]], "absbias() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.absbias"]], "add_data() (pysurfex.binary_input.jsoninputdata method)": [[8, "pysurfex.binary_input.JsonInputData.add_data"]], "alpha_grid_rot() (pysurfex.interpolation.interpolation method)": [[8, "pysurfex.interpolation.Interpolation.alpha_grid_rot"]], "archive_files() (pysurfex.binary_input.jsonoutputdata method)": [[8, "pysurfex.binary_input.JsonOutputData.archive_files"]], "archive_files() (pysurfex.binary_input.jsonoutputdatafromfile method)": [[8, "pysurfex.binary_input.JsonOutputDataFromFile.archive_files"]], "archive_files() (pysurfex.binary_input.outputdatafromsurfexbinaries method)": [[8, "pysurfex.binary_input.OutputDataFromSurfexBinaries.archive_files"]], "archive_output() (pysurfex.run.masterodb method)": [[8, "pysurfex.run.Masterodb.archive_output"]], "archive_output_file() (pysurfex.file.surfexsurfio method)": [[8, "pysurfex.file.SurfexSurfIO.archive_output_file"]], "as_datetime() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.as_datetime"]], "as_datetime_args() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.as_datetime_args"]], "as_datetime_string() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.as_datetime_string"]], "as_timedelta() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.as_timedelta"]], "ascii2nml() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.ascii2nml"]], "ascii2nml() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.ascii2nml"]], "ascii_file2nml() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.ascii_file2nml"]], "ascii_file2nml() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.ascii_file2nml"]], "assemble_namelist() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.assemble_namelist"]], "axis_types() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.axis_types"]], "bufr2json() (in module pysurfex.cli)": [[8, "pysurfex.cli.bufr2json"]], "calculate_statistics() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.calculate_statistics"]], "capitalize_namelist_dict() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.capitalize_namelist_dict"]], "capitalize_namelist_dict() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.capitalize_namelist_dict"]], "check_nml_setting() (pysurfex.namelist.namelistgenerator static method)": [[8, "pysurfex.namelist.NamelistGenerator.check_nml_setting"]], "clean_working_dir() (in module pysurfex.run)": [[8, "pysurfex.run.clean_working_dir"]], "cli_merge_qc_data() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_merge_qc_data"]], "cli_modify_forcing() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_modify_forcing"]], "cli_oi2soda() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_oi2soda"]], "cli_set_domain() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_set_domain"]], "cli_set_geo_from_obs_set() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_set_geo_from_obs_set"]], "cli_set_geo_from_stationlist() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_set_geo_from_stationlist"]], "cli_shape2ign() (in module pysurfex.cli)": [[8, "pysurfex.cli.cli_shape2ign"]], "close_db() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.close_db"]], "concistency() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.concistency"]], "copy_input() (pysurfex.file.surfexsurfio method)": [[8, "pysurfex.file.SurfexSurfIO.copy_input"]], "create_db() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.create_db"]], "create_forcing() (in module pysurfex.cli)": [[8, "pysurfex.cli.create_forcing"]], "create_lsm_file_assim() (in module pysurfex.cli)": [[8, "pysurfex.cli.create_lsm_file_assim"]], "create_namelist() (in module pysurfex.cli)": [[8, "pysurfex.cli.create_namelist"]], "create_variable() (pysurfex.read.converter method)": [[8, "pysurfex.read.Converter.create_variable"]], "create_working_dir() (in module pysurfex.run)": [[8, "pysurfex.run.create_working_dir"]], "cryoclim_pseudoobs() (in module pysurfex.cli)": [[8, "pysurfex.cli.cryoclim_pseudoobs"]], "datetimes() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.datetimes"]], "deaccumulate() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.deaccumulate"]], "deep_update() (in module pysurfex.util)": [[8, "pysurfex.util.deep_update"]], "define_quality_control() (in module pysurfex.titan)": [[8, "pysurfex.titan.define_quality_control"]], "delete() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.delete"]], "dim_names() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.dim_names"]], "distance() (pysurfex.interpolation.interpolation static method)": [[8, "pysurfex.interpolation.Interpolation.distance"]], "dump_environ() (in module pysurfex.cli)": [[8, "pysurfex.cli.dump_environ"]], "dump_json() (pysurfex.configuration.configuration method)": [[8, "pysurfex.configuration.Configuration.dump_json"]], "epilog() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.epilog"]], "epilog() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.epilog"]], "extend_macro() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.extend_macro"]], "field() (pysurfex.fa.fa method)": [[8, "pysurfex.fa.Fa.field"]], "field() (pysurfex.file.asciisurfexfile method)": [[8, "pysurfex.file.AsciiSurfexFile.field"]], "field() (pysurfex.file.fasurfexfile method)": [[8, "pysurfex.file.FaSurfexFile.field"]], "field() (pysurfex.file.forcingfilenetcdf method)": [[8, "pysurfex.file.ForcingFileNetCDF.field"]], "field() (pysurfex.file.ncsurfexfile method)": [[8, "pysurfex.file.NCSurfexFile.field"]], "field() (pysurfex.file.netcdfsurfexfile method)": [[8, "pysurfex.file.NetCDFSurfexFile.field"]], "field() (pysurfex.file.surfexio method)": [[8, "pysurfex.file.SurfexIO.field"]], "field() (pysurfex.file.textesurfexfile method)": [[8, "pysurfex.file.TexteSurfexFile.field"]], "field() (pysurfex.grib.grib method)": [[8, "pysurfex.grib.Grib.field"]], "field() (pysurfex.netcdf.netcdf method)": [[8, "pysurfex.netcdf.Netcdf.field"]], "fill_field() (in module pysurfex.interpolation)": [[8, "pysurfex.interpolation.fill_field"]], "finalize() (pysurfex.forcing.asciioutput method)": [[8, "pysurfex.forcing.AsciiOutput.finalize"]], "finalize() (pysurfex.forcing.netcdfoutput method)": [[8, "pysurfex.forcing.NetCDFOutput.finalize"]], "find_num() (pysurfex.namelist.namelistgenerator static method)": [[8, "pysurfex.namelist.NamelistGenerator.find_num"]], "first_guess_for_oi() (in module pysurfex.cli)": [[8, "pysurfex.cli.first_guess_for_oi"]], "flatten_config() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.flatten_config"]], "flatten_list() (pysurfex.namelist.namelistgenerator static method)": [[8, "pysurfex.namelist.NamelistGenerator.flatten_list"]], "format_lat() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.format_lat"]], "format_lon() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.format_lon"]], "fromtimestamp() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.fromtimestamp"]], "generate_grib_id() (pysurfex.grib.grib2variable method)": [[8, "pysurfex.grib.Grib2Variable.generate_grib_id"]], "get_basetime() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.get_basetime"]], "get_coord() (pysurfex.geo.ign static method)": [[8, "pysurfex.geo.IGN.get_coord"]], "get_datasources() (in module pysurfex.input_methods)": [[8, "pysurfex.input_methods.get_datasources"]], "get_departure() (pysurfex.titan.departure method)": [[8, "pysurfex.titan.Departure.get_departure"]], "get_filehandler() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.get_filehandler"]], "get_filename() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.get_filename"]], "get_filetype_from_suffix() (pysurfex.namelist.namelistgenerator static method)": [[8, "pysurfex.namelist.NamelistGenerator.get_filetype_from_suffix"]], "get_filetype_from_suffix() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.get_filetype_from_suffix"]], "get_geo() (pysurfex.file.asciisurfexfile method)": [[8, "pysurfex.file.AsciiSurfexFile.get_geo"]], "get_geo() (pysurfex.file.ncsurfexfile method)": [[8, "pysurfex.file.NCSurfexFile.get_geo"]], "get_geo_and_config_from_cmd() (in module pysurfex.cli)": [[8, "pysurfex.cli.get_geo_and_config_from_cmd"]], "get_geo_object() (in module pysurfex.geo)": [[8, "pysurfex.geo.get_geo_object"]], "get_namelist() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.get_namelist"]], "get_namelist() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.get_namelist"]], "get_namelist() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.get_namelist"]], "get_nml_value() (pysurfex.binary_input.inputdatafromnamelist static method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value"]], "get_nml_value2() (pysurfex.binary_input.inputdatafromnamelist static method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value2"]], "get_nml_value_from_string() (pysurfex.binary_input.inputdatafromnamelist static method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.get_nml_value_from_string"]], "get_obs() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.get_obs"]], "get_obs_value() (pysurfex.interpolation.obsoperator method)": [[8, "pysurfex.interpolation.ObsOperator.get_obs_value"]], "get_pos_from_stid() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.get_pos_from_stid"]], "get_pos_index() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.get_pos_index"]], "get_pos_index() (pysurfex.titan.qcdataset method)": [[8, "pysurfex.titan.QCDataSet.get_pos_index"]], "get_stid_from_stationlist() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.get_stid_from_stationlist"]], "get_stid_index() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.get_stid_index"]], "get_stid_index() (pysurfex.titan.qcdataset method)": [[8, "pysurfex.titan.QCDataSet.get_stid_index"]], "get_values() (pysurfex.titan.departure method)": [[8, "pysurfex.titan.Departure.get_values"]], "get_variables_from_args() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.get_variables_from_args"]], "grid2points() (in module pysurfex.interpolation)": [[8, "pysurfex.interpolation.grid2points"]], "gridpp() (in module pysurfex.cli)": [[8, "pysurfex.cli.gridpp"]], "guess_file_format() (in module pysurfex.file)": [[8, "pysurfex.file.guess_file_format"]], "hm2pysurfex() (in module pysurfex.cli)": [[8, "pysurfex.cli.hm2pysurfex"]], "identifier() (pysurfex.geo.geo method)": [[8, "pysurfex.geo.Geo.identifier"]], "ign_mask() (pysurfex.geo.ign static method)": [[8, "pysurfex.geo.IGN.ign_mask"]], "inside_grid() (in module pysurfex.interpolation)": [[8, "pysurfex.interpolation.inside_grid"]], "inside_window() (pysurfex.bufr.bufrobservationset static method)": [[8, "pysurfex.bufr.BufrObservationSet.inside_window"]], "interpolate() (pysurfex.interpolation.interpolation method)": [[8, "pysurfex.interpolation.Interpolation.interpolate"]], "interpolate_field() (pysurfex.file.surfexio static method)": [[8, "pysurfex.file.SurfexIO.interpolate_field"]], "is_accumulated() (pysurfex.grib.grib2variable method)": [[8, "pysurfex.grib.Grib2Variable.is_accumulated"]], "is_identical() (pysurfex.geo.geo method)": [[8, "pysurfex.geo.Geo.is_identical"]], "is_in_grid() (pysurfex.interpolation.obsoperator method)": [[8, "pysurfex.interpolation.ObsOperator.is_in_grid"]], "is_level() (pysurfex.netcdf.netcdffilevariable static method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.is_level"]], "isdatetime() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.isdatetime"]], "lats() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.lats"]], "levels() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.levels"]], "lons() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.lons"]], "lower_case_namelist_dict() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.lower_case_namelist_dict"]], "lower_case_namelist_dict() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.lower_case_namelist_dict"]], "masterodb() (in module pysurfex.cli)": [[8, "pysurfex.cli.masterodb"]], "matches() (pysurfex.grib.grib2variable method)": [[8, "pysurfex.grib.Grib2Variable.matches"]], "matching_obs() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.matching_obs"]], "matching_value() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.matching_value"]], "mean() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.mean"]], "members() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.members"]], "merge_json_namelist_file() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.merge_json_namelist_file"]], "merge_json_namelist_file() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.merge_json_namelist_file"]], "merge_json_qc_data_sets() (in module pysurfex.titan)": [[8, "pysurfex.titan.merge_json_qc_data_sets"]], "merge_namelist_dicts() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.merge_namelist_dicts"]], "merge_namelist_dicts() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.merge_namelist_dicts"]], "merge_toml_env() (in module pysurfex.util)": [[8, "pysurfex.util.merge_toml_env"]], "merge_toml_env_from_files() (in module pysurfex.util)": [[8, "pysurfex.util.merge_toml_env_from_files"]], "modify_forcing() (in module pysurfex.forcing)": [[8, "pysurfex.forcing.modify_forcing"]], "mslp2ps() (pysurfex.read.converter static method)": [[8, "pysurfex.read.Converter.mslp2ps"]], "namelist_blocks() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.namelist_blocks"]], "nml2ascii() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.nml2ascii"]], "nml2ascii() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.nml2ascii"]], "obs2json() (in module pysurfex.cli)": [[8, "pysurfex.cli.obs2json"]], "obs2vectors() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.obs2vectors"]], "offline() (in module pysurfex.cli)": [[8, "pysurfex.cli.offline"]], "offsetaware() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.offsetaware"]], "oi2soda() (in module pysurfex.netcdf)": [[8, "pysurfex.netcdf.oi2soda"]], "open_db() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.open_db"]], "override() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.override"]], "override() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.override"]], "parse_args_bufr2json() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_bufr2json"]], "parse_args_create_forcing() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_create_forcing"]], "parse_args_create_namelist() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_create_namelist"]], "parse_args_dump_environ() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_dump_environ"]], "parse_args_first_guess_for_oi() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_first_guess_for_oi"]], "parse_args_gridpp() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_gridpp"]], "parse_args_hm2pysurfex() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_hm2pysurfex"]], "parse_args_lsm_file_assim() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_lsm_file_assim"]], "parse_args_masterodb() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_masterodb"]], "parse_args_merge_qc_data() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_merge_qc_data"]], "parse_args_modify_forcing() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_modify_forcing"]], "parse_args_obs2json() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_obs2json"]], "parse_args_oi2soda() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_oi2soda"]], "parse_args_plot_field() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_plot_field"]], "parse_args_plot_points() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_plot_points"]], "parse_args_qc2obsmon() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_qc2obsmon"]], "parse_args_set_geo_from_obs_set() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_set_geo_from_obs_set"]], "parse_args_set_geo_from_stationlist() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_set_geo_from_stationlist"]], "parse_args_shape2ign() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_shape2ign"]], "parse_args_surfex_binary() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_surfex_binary"]], "parse_args_titan() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_args_titan"]], "parse_cryoclim_pseudoobs() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_cryoclim_pseudoobs"]], "parse_filepattern() (in module pysurfex.util)": [[8, "pysurfex.util.parse_filepattern"]], "parse_fnames() (pysurfex.ecoclimap.ecoclimapsg static method)": [[8, "pysurfex.ecoclimap.EcoclimapSG.parse_fnames"]], "parse_sentinel_obs() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_sentinel_obs"]], "parse_set_domain() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_set_domain"]], "parse_timeseries2json() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.parse_timeseries2json"]], "perform_tests() (pysurfex.titan.qcdataset method)": [[8, "pysurfex.titan.QCDataSet.perform_tests"]], "perform_tests() (pysurfex.titan.titandataset method)": [[8, "pysurfex.titan.TitanDataSet.perform_tests"]], "perturbed_offline() (in module pysurfex.cli)": [[8, "pysurfex.cli.perturbed_offline"]], "pgd() (in module pysurfex.cli)": [[8, "pysurfex.cli.pgd"]], "plot_field() (in module pysurfex.cli)": [[8, "pysurfex.cli.plot_field"]], "plot_points() (in module pysurfex.cli)": [[8, "pysurfex.cli.plot_points"]], "points() (pysurfex.fa.fa method)": [[8, "pysurfex.fa.Fa.points"]], "points() (pysurfex.file.asciisurfexfile method)": [[8, "pysurfex.file.AsciiSurfexFile.points"]], "points() (pysurfex.file.fasurfexfile method)": [[8, "pysurfex.file.FaSurfexFile.points"]], "points() (pysurfex.file.forcingfilenetcdf method)": [[8, "pysurfex.file.ForcingFileNetCDF.points"]], "points() (pysurfex.file.ncsurfexfile method)": [[8, "pysurfex.file.NCSurfexFile.points"]], "points() (pysurfex.file.netcdfsurfexfile method)": [[8, "pysurfex.file.NetCDFSurfexFile.points"]], "points() (pysurfex.file.surfexio method)": [[8, "pysurfex.file.SurfexIO.points"]], "points() (pysurfex.file.textesurfexfile method)": [[8, "pysurfex.file.TexteSurfexFile.points"]], "points() (pysurfex.grib.grib method)": [[8, "pysurfex.grib.Grib.points"]], "points() (pysurfex.netcdf.netcdf method)": [[8, "pysurfex.netcdf.Netcdf.points"]], "points() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.points"]], "populate_obsmon_db() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.populate_obsmon_db"]], "populate_usage_db() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.populate_usage_db"]], "prep() (in module pysurfex.cli)": [[8, "pysurfex.cli.prep"]], "prepare_input() (pysurfex.binary_input.inputdatatosurfexbinaries method)": [[8, "pysurfex.binary_input.InputDataToSurfexBinaries.prepare_input"]], "prepare_input() (pysurfex.binary_input.jsoninputdata method)": [[8, "pysurfex.binary_input.JsonInputData.prepare_input"]], "prepare_input() (pysurfex.binary_input.jsoninputdatafromfile method)": [[8, "pysurfex.binary_input.JsonInputDataFromFile.prepare_input"]], "prepare_offline_perturbation() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.prepare_offline_perturbation"]], "print_info() (pysurfex.read.constantvalue method)": [[8, "pysurfex.read.ConstantValue.print_info"]], "print_info() (pysurfex.read.convertedinput method)": [[8, "pysurfex.read.ConvertedInput.print_info"]], "print_info() (pysurfex.read.converter method)": [[8, "pysurfex.read.Converter.print_info"]], "print_info() (pysurfex.read.readdata method)": [[8, "pysurfex.read.ReadData.print_info"]], "print_keys() (pysurfex.grib.grib2variable method)": [[8, "pysurfex.grib.Grib2Variable.print_keys"]], "print_obs() (pysurfex.observation.observation method)": [[8, "pysurfex.observation.Observation.print_obs"]], "print_var() (pysurfex.file.surfexfilevariable method)": [[8, "pysurfex.file.SurfexFileVariable.print_var"]], "print_variable_info() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.print_variable_info"]], "process_data() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.process_data"]], "process_macro() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.process_macro"]], "prolog() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.prolog"]], "prolog() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.prolog"]], "qc2obsmon() (in module pysurfex.cli)": [[8, "pysurfex.cli.qc2obsmon"]], "read() (pysurfex.file.asciisurfexfile method)": [[8, "pysurfex.file.AsciiSurfexFile.read"]], "read() (pysurfex.file.netcdfsurfexfile method)": [[8, "pysurfex.file.NetCDFSurfexFile.read"]], "read() (pysurfex.file.textesurfexfile method)": [[8, "pysurfex.file.TexteSurfexFile.read"]], "read_cryoclim_nc() (in module pysurfex.netcdf)": [[8, "pysurfex.netcdf.read_cryoclim_nc"]], "read_field() (pysurfex.file.forcingfilenetcdf method)": [[8, "pysurfex.file.ForcingFileNetCDF.read_field"]], "read_field_in_message() (pysurfex.grib.grib static method)": [[8, "pysurfex.grib.Grib.read_field_in_message"]], "read_first_guess_netcdf_file() (in module pysurfex.netcdf)": [[8, "pysurfex.netcdf.read_first_guess_netcdf_file"]], "read_geo_info() (pysurfex.grib.grib static method)": [[8, "pysurfex.grib.Grib.read_geo_info"]], "read_macro_setting() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.read_macro_setting"]], "read_sentinel_nc() (in module pysurfex.netcdf)": [[8, "pysurfex.netcdf.read_sentinel_nc"]], "read_time_step() (pysurfex.read.constantvalue method)": [[8, "pysurfex.read.ConstantValue.read_time_step"]], "read_time_step() (pysurfex.read.convertedinput method)": [[8, "pysurfex.read.ConvertedInput.read_time_step"]], "read_time_step() (pysurfex.read.converter method)": [[8, "pysurfex.read.Converter.read_time_step"]], "read_time_step() (pysurfex.read.readdata method)": [[8, "pysurfex.read.ReadData.read_time_step"]], "read_var_field() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.read_var_field"]], "read_var_points() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.read_var_points"]], "read_variable() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.read_variable"]], "remove_existing_file() (in module pysurfex.util)": [[8, "pysurfex.util.remove_existing_file"]], "rmse() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.rmse"]], "rotate_geographic_wind() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.rotate_geographic_wind"]], "rotate_wind_to_geographic() (pysurfex.interpolation.interpolation method)": [[8, "pysurfex.interpolation.Interpolation.rotate_wind_to_geographic"]], "run() (pysurfex.run.batchjob method)": [[8, "pysurfex.run.BatchJob.run"]], "run_first_guess_for_oi() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_first_guess_for_oi"]], "run_gridpp() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_gridpp"]], "run_hm2pysurfex() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_hm2pysurfex"]], "run_masterodb() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_masterodb"]], "run_oi2soda() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_oi2soda"]], "run_surfex_binary() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_surfex_binary"]], "run_time_loop() (in module pysurfex.forcing)": [[8, "pysurfex.forcing.run_time_loop"]], "run_titan() (in module pysurfex.cli)": [[8, "pysurfex.cli.run_titan"]], "sentinel_obs() (in module pysurfex.cli)": [[8, "pysurfex.cli.sentinel_obs"]], "set_bin_files() (pysurfex.ecoclimap.ecoclimap method)": [[8, "pysurfex.ecoclimap.Ecoclimap.set_bin_files"]], "set_bin_files() (pysurfex.ecoclimap.ecoclimapsg method)": [[8, "pysurfex.ecoclimap.EcoclimapSG.set_bin_files"]], "set_direct_data_namelist() (pysurfex.namelist_legacy.basenamelist static method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.set_direct_data_namelist"]], "set_direct_data_namelist() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.set_direct_data_namelist"]], "set_domain() (in module pysurfex.geo)": [[8, "pysurfex.geo.set_domain"]], "set_flags() (pysurfex.titan.qualitycontrol static method)": [[8, "pysurfex.titan.QualityControl.set_flags"]], "set_forcing_config() (in module pysurfex.forcing)": [[8, "pysurfex.forcing.set_forcing_config"]], "set_geo_from_stationlist() (in module pysurfex.cli)": [[8, "pysurfex.cli.set_geo_from_stationlist"]], "set_input() (pysurfex.ecoclimap.ecoclimap method)": [[8, "pysurfex.ecoclimap.Ecoclimap.set_input"]], "set_input() (pysurfex.ecoclimap.ecoclimapsg method)": [[8, "pysurfex.ecoclimap.EcoclimapSG.set_input"]], "set_input() (pysurfex.titan.blacklist method)": [[8, "pysurfex.titan.Blacklist.set_input"]], "set_input() (pysurfex.titan.climatology method)": [[8, "pysurfex.titan.Climatology.set_input"]], "set_input() (pysurfex.titan.domaincheck method)": [[8, "pysurfex.titan.DomainCheck.set_input"]], "set_input() (pysurfex.titan.firstguess method)": [[8, "pysurfex.titan.FirstGuess.set_input"]], "set_input() (pysurfex.titan.fraction method)": [[8, "pysurfex.titan.Fraction.set_input"]], "set_input() (pysurfex.titan.nometa method)": [[8, "pysurfex.titan.NoMeta.set_input"]], "set_input() (pysurfex.titan.plausibility method)": [[8, "pysurfex.titan.Plausibility.set_input"]], "set_input() (pysurfex.titan.qualitycontrol method)": [[8, "pysurfex.titan.QualityControl.set_input"]], "set_input() (pysurfex.titan.redundancy method)": [[8, "pysurfex.titan.Redundancy.set_input"]], "set_input() (pysurfex.titan.sct method)": [[8, "pysurfex.titan.Sct.set_input"]], "set_input_observations() (pysurfex.binary_input_legacy.sodainputdata method)": [[8, "pysurfex.binary_input_legacy.SodaInputData.set_input_observations"]], "set_input_sea_assimilation() (pysurfex.binary_input_legacy.sodainputdata method)": [[8, "pysurfex.binary_input_legacy.SodaInputData.set_input_sea_assimilation"]], "set_input_vertical_soil_oi() (pysurfex.binary_input_legacy.sodainputdata method)": [[8, "pysurfex.binary_input_legacy.SodaInputData.set_input_vertical_soil_oi"]], "set_obs() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.set_obs"]], "set_offline_namelist() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.set_offline_namelist"]], "set_offline_namelist() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.set_offline_namelist"]], "set_pgd_namelist() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.set_pgd_namelist"]], "set_pgd_namelist() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.set_pgd_namelist"]], "set_soda_namelist() (pysurfex.namelist_legacy.basenamelist method)": [[8, "pysurfex.namelist_legacy.BaseNamelist.set_soda_namelist"]], "set_soda_namelist() (pysurfex.namelist_legacy.namelist method)": [[8, "pysurfex.namelist_legacy.Namelist.set_soda_namelist"]], "set_var() (pysurfex.variable.variable method)": [[8, "pysurfex.variable.Variable.set_var"]], "shape2ign() (in module pysurfex.geo)": [[8, "pysurfex.geo.shape2ign"]], "soda() (in module pysurfex.cli)": [[8, "pysurfex.cli.soda"]], "sub() (pysurfex.namelist_legacy.namelist static method)": [[8, "pysurfex.namelist_legacy.Namelist.sub"]], "subset() (pysurfex.geo.cartesian method)": [[8, "pysurfex.geo.Cartesian.subset"]], "subset() (pysurfex.geo.confproj method)": [[8, "pysurfex.geo.ConfProj.subset"]], "subset() (pysurfex.geo.ign method)": [[8, "pysurfex.geo.IGN.subset"]], "subset() (pysurfex.geo.lonlatreg method)": [[8, "pysurfex.geo.LonLatReg.subset"]], "subset() (pysurfex.geo.lonlatval method)": [[8, "pysurfex.geo.LonLatVal.subset"]], "subset() (pysurfex.geo.surfexgeo method)": [[8, "pysurfex.geo.SurfexGeo.subset"]], "substitute() (pysurfex.binary_input.inputdatafromnamelist method)": [[8, "pysurfex.binary_input.InputDataFromNamelist.substitute"]], "substitute_string() (pysurfex.platform_deps.systemfilepaths static method)": [[8, "pysurfex.platform_deps.SystemFilePaths.substitute_string"]], "sum_neighbour_points() (in module pysurfex.interpolation)": [[8, "pysurfex.interpolation.sum_neighbour_points"]], "symlink_input() (pysurfex.file.surfexsurfio method)": [[8, "pysurfex.file.SurfexSurfIO.symlink_input"]], "td2rh() (pysurfex.bufr.bufrobservationset static method)": [[8, "pysurfex.bufr.BufrObservationSet.td2rh"]], "test() (pysurfex.titan.blacklist method)": [[8, "pysurfex.titan.Blacklist.test"]], "test() (pysurfex.titan.buddy method)": [[8, "pysurfex.titan.Buddy.test"]], "test() (pysurfex.titan.climatology method)": [[8, "pysurfex.titan.Climatology.test"]], "test() (pysurfex.titan.domaincheck method)": [[8, "pysurfex.titan.DomainCheck.test"]], "test() (pysurfex.titan.firstguess method)": [[8, "pysurfex.titan.FirstGuess.test"]], "test() (pysurfex.titan.fraction method)": [[8, "pysurfex.titan.Fraction.test"]], "test() (pysurfex.titan.nometa method)": [[8, "pysurfex.titan.NoMeta.test"]], "test() (pysurfex.titan.plausibility method)": [[8, "pysurfex.titan.Plausibility.test"]], "test() (pysurfex.titan.qualitycontrol method)": [[8, "pysurfex.titan.QualityControl.test"]], "test() (pysurfex.titan.redundancy method)": [[8, "pysurfex.titan.Redundancy.test"]], "test() (pysurfex.titan.sct method)": [[8, "pysurfex.titan.Sct.test"]], "times() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.times"]], "titan() (in module pysurfex.cli)": [[8, "pysurfex.cli.titan"]], "units() (pysurfex.netcdf.netcdffilevariable method)": [[8, "pysurfex.netcdf.NetCDFFileVariable.units"]], "update_namelist() (pysurfex.geo.cartesian method)": [[8, "pysurfex.geo.Cartesian.update_namelist"]], "update_namelist() (pysurfex.geo.confproj method)": [[8, "pysurfex.geo.ConfProj.update_namelist"]], "update_namelist() (pysurfex.geo.ign method)": [[8, "pysurfex.geo.IGN.update_namelist"]], "update_namelist() (pysurfex.geo.lonlatreg method)": [[8, "pysurfex.geo.LonLatReg.update_namelist"]], "update_namelist() (pysurfex.geo.lonlatval method)": [[8, "pysurfex.geo.LonLatVal.update_namelist"]], "update_namelist() (pysurfex.geo.surfexgeo method)": [[8, "pysurfex.geo.SurfexGeo.update_namelist"]], "update_setting() (pysurfex.configuration.configuration method)": [[8, "pysurfex.configuration.Configuration.update_setting"]], "utcfromtimestamp() (in module pysurfex.datetime_utils)": [[8, "pysurfex.datetime_utils.utcfromtimestamp"]], "variable_parser() (in module pysurfex.cmd_parsing)": [[8, "pysurfex.cmd_parsing.variable_parser"]], "vectors2obs() (pysurfex.observation.observation static method)": [[8, "pysurfex.observation.Observation.vectors2obs"]], "write() (pysurfex.namelist.namelistgenerator method)": [[8, "pysurfex.namelist.NamelistGenerator.write"]], "write_forcing() (pysurfex.forcing.asciioutput method)": [[8, "pysurfex.forcing.AsciiOutput.write_forcing"]], "write_forcing() (pysurfex.forcing.netcdfoutput method)": [[8, "pysurfex.forcing.NetCDFOutput.write_forcing"]], "write_forcing() (pysurfex.forcing.surfexoutputforcing method)": [[8, "pysurfex.forcing.SurfexOutputForcing.write_forcing"]], "write_formatted_array() (in module pysurfex.forcing)": [[8, "pysurfex.forcing.write_formatted_array"]], "write_json() (pysurfex.timeseries.timeseries method)": [[8, "pysurfex.timeseries.TimeSeries.write_json"]], "write_json_file() (pysurfex.obs.observationset method)": [[8, "pysurfex.obs.ObservationSet.write_json_file"]], "write_obsmon_sqlite_file() (in module pysurfex.obsmon)": [[8, "pysurfex.obsmon.write_obsmon_sqlite_file"]], "write_output() (pysurfex.titan.qcdataset method)": [[8, "pysurfex.titan.QCDataSet.write_output"]], "write_proj_info() (pysurfex.geo.geo method)": [[8, "pysurfex.geo.Geo.write_proj_info"]]}})